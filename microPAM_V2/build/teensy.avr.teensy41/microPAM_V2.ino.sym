
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\B6A2B96C86D1458F5F30CD00E995713A/microPAM_V2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002674 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00014520 l    d  .fini	00000000 .fini
00014524 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20008ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001fc5c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001fc ResetHandler2
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
2002af88 l     O .bss	00000004 s_hotCount
2002af8c l     O .bss	00000004 s_hotTemp
2002af90 l     O .bss	00000004 s_hot_ROOM
2002af94 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
000084bc l     F .text.itcm	00000088 schedule_transfer
00008544 l     F .text.itcm	00000036 run_callbacks
0000857c l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2002ae28 l     O .bss	00000008 endpoint0_buffer
2002ae30 l     O .bss	00000004 endpoint0_notify_mask
2000c080 l     O .bss	00000008 endpoint0_setupdata
2002ae34 l     O .bss	00000004 endpointN_notify_mask
2002af50 l     O .bss	00000008 reply_buffer
2002b4a2 l     O .bss	00000001 sof_usage
2002b4a9 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2002b49e l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2002aecc l     O .bss	00000000 object.0
60002660 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 mAcq.cpp
00000478 l     F .text.itcm	000000b4 acq_isr()
00000794 l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
20029f4c l     O .bss	00000008 dma
20200000 l     O .bss.dma	00000800 i2s_buffer
00000000 l    df *ABS*	00000000 mFiling.cpp
00000c10 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
2000c540 l     O .bss	00001800 diskBuffer
20025f4c l     O .bss	00002000 tempBuffer0
20027f4c l     O .bss	00002000 tempBuffer1
0000154c l     F .text.itcm	00000098 _GLOBAL__sub_I_t_acq
2000dd40 l     O .bss	00000200 fileHeader
2002a1c4 l     O .bss	00000050 dirName
2002a414 l     O .bss	00000200 wav_hdr
2002a614 l     O .bss	00000050 fileName
2002a8ac l     O .bss	00000004 checkEndOfFile(short)::tx_
2002a8bc l     O .bss	00000004 saveData(short)::data0
2002a8c0 l     O .bss	00000004 saveData(short)::data1
2002a8c4 l     O .bss	00000050 timeStamp()::date_time
200085d4 l     O .data	00000004 saveData(short)::first
200085d8 l     O .data	00000004 newFolder(int)::ho
00000000 l    df *ABS*	00000000 SPI.cpp
000071c4 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00007458 l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
0000768c l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
20008b74 l     O .data	00000012 device_descriptor
20008b8c l     O .data	00000028 microsoft_os_compatible_id_desc
20008bb4 l     O .data	00000012 microsoft_os_string_desc
60002864 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 microPAM_V2.ino.cpp
2000c53c l     O .bss	00000004 guard variable for loop::status
2002a8b0 l     O .bss	00000004 loop::t0
2002b484 l     O .bss	00000002 loop::mxb
2002b486 l     O .bss	00000002 loop::status
2002b488 l     O .bss	00000002 loop::monitor
2002a8b4 l     O .bss	00000004 loop::loopCount
00000000 l    df *ABS*	00000000 mCompress.cpp
20029f54 l     O .bss	00000200 dout
2002a214 l     O .bss	00000200 outData
2002a664 l     O .bss	00000200 tempData
2002a8b8 l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 mQueue.cpp
2000df48 l     O .bss	00018000 data_buffer
2000df44 l     O .bss	00000004 queue_busy
00000000 l    df *ABS*	00000000 mRTC.cpp
20000574 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 menu.cpp
000019e4 l     F .text.itcm	00000054 menuGetInt32(long*) [clone .isra.0]
00001a38 l     F .text.itcm	00000054 menuGetInt16(short*) [clone .isra.0]
00001a8c l     F .text.itcm	00000064 menuGet3Int(int*, int*, int*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00003348 l     F .text.itcm	000000bc FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00004548 l     F .text.itcm	00000068 FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
000045b0 l     F .text.itcm	0000005a FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
00005930 l     F .text.itcm	00000030 sdIrs()
00005960 l     F .text.itcm	00000014 isBusyDat()
00005974 l     F .text.itcm	0000000c isBusyDMA()
00005980 l     F .text.itcm	000000cc setSdclk(unsigned long)
00005b94 l     F .text.itcm	00000068 waitDmaStatus()
00005bfc l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
00005d38 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
00005dd0 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
00005ecc l     F .text.itcm	0000002c isBusyCMD13()
0000614c l     F .text.itcm	0000010c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2002b496 l     O .bss	00000001 m_initDone
2000df40 l     O .bss	00000004 m_sdClkKhz
2002b497 l     O .bss	00000001 m_version2
20025f48 l     O .bss	00000004 m_errorLine
2002b498 l     O .bss	00000001 m_highCapacity
2002b499 l     O .bss	00000001 m_transferActive
2002a154 l     O .bss	00000010 m_cid
2002a164 l     O .bss	00000010 m_csd
2002a174 l     O .bss	00000004 m_ocr
2002a178 l     O .bss	00000004 m_rca
2002a17c l     O .bss	00000008 m_scr
2002a184 l     O .bss	00000040 m_sds
2002a864 l     O .bss	00000004 m_busyFcn
2002b49a l     O .bss	00000001 m_dmaBusy
2002a868 l     O .bss	00000004 m_irqstat
20008bea l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 Print.cpp
000078ac l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00008e20 l     F .text.itcm	00000060 rx_queue_transfer
20008f00 l     O .bss	00001000 rx_buffer
00008e80 l     F .text.itcm	000000b4 rx_event
00008f34 l     F .text.itcm	00000090 usb_serial_flush_callback
2000a080 l     O .bss	00002000 txbuffer
00008fc4 l     F .text.itcm	000001b8 usb_serial_write.part.0
2002af58 l     O .bss	00000004 rx_available
2002af5c l     O .bss	00000010 rx_count
2002b4a0 l     O .bss	00000001 rx_head
2002af6c l     O .bss	00000010 rx_index
2002af7c l     O .bss	00000009 rx_list
2002b48e l     O .bss	00000002 rx_packet_size
2002b4a1 l     O .bss	00000001 rx_tail
20009f00 l     O .bss	00000100 rx_transfer
2002b4a3 l     O .bss	00000001 transmit_previous_timeout
2002b492 l     O .bss	00000002 tx_available
2002b4a4 l     O .bss	00000001 tx_head
2002b4a5 l     O .bss	00000001 tx_noautoflush
2002b494 l     O .bss	00000002 tx_packet_size
2000a000 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2002b49d l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
0000b3a4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000b4f8 l     F .text.itcm	00000018 stdio_exit_handler
0000b510 l     F .text.itcm	00000040 cleanup_stdio
0000b550 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
0000c570 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00011058 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
00011e6c l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
00011fb0 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00012120 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
000123a8 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
000127d8 l     F .text.itcm	00000076 __sprint_r.part.0
000137dc l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
000144f8 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
00014500 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
00014508 l     F .text.itcm	00000008 ___init_veneer
00014510 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
60002600 l     F .text.code	00000008 __memset_veneer
60002608 l     F .text.code	00000008 ____libc_init_array_veneer
60002610 l     F .text.code	00000008 __set_arm_clock_veneer
60002618 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
60002620 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002628 l     F .text.code	00000008 __pwm_init_veneer
60002630 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002638 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002640 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002648 l     F .text.code	00000008 __sm_set_pool_veneer
60002650 l     F .text.code	00000008 __main_veneer
60002658 l     F .text.code	00000008 __delay_veneer
0000160c g     F .text.itcm	00000084 pushData(unsigned long*)
00009390 g     F .text.itcm	00000018 usb_serial_available
0000d7cc g     F .text.itcm	00000062 __any_on
000140e8 g     F .text.itcm	00000024 _isatty_r
0000bfbc g     F .text.itcm	000000ba strcpy
60001e50 g     F .text.code	00000002 startup_default_late_hook
0000bbd0 g     F .text.itcm	0000002c _lseek_r
00006258 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
00009560  w    F .text.itcm	000000f0 yield
00005fcc g     F .text.itcm	000000c8 SdioCard::cardCMD6(unsigned long, unsigned char*)
00004ba0  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
2002aeec g     O .bss	00000060 proc_stat
2002b480 g     O .bss	00000004 usb_timer1_callback
00003c1c g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
60002780 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
2002b48c g     O .bss	00000002 proc
60001f50 g     F .text.code	00000384 configure_external_ram
00004b98  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
2000c2bc g     O .bss	00000140 Wire1
00014428 g     F .text.itcm	0000005a .hidden __floatdidf
00003fb0 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
2002aee4 g     O .bss	00000004 procCount
60002764  w    O .text.progmem	00000001 _serialEventUSB2_default
2002a86c g     O .bss	00000004 FsDateTime::callback
2002aaa8 g     O .bss	00000001 __lock___atexit_recursive_mutex
00012314 g     F .text.itcm	0000004c _wcrtomb_r
00004118 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
000051a8 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
00007944 g     F .text.itcm	0000001c Print::println()
000075bc g     F .text.itcm	000000ac TwoWire::isr()
20000714 g     O .data	00000074 vtable for DedicatedSpiCard
2002aee8 g     O .bss	00000004 procMiss
0000b7c0 g     F .text.itcm	00000020 __sseek
0000b624 g     F .text.itcm	0000003c __sinit
00002038 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
0001400c g     F .text.itcm	000000b0 __swbuf_r
0000a128 g     F .text.itcm	0000000c __malloc_unlock
2002a8a4 g     O .bss	00000004 FsVolume::m_cwv
00003720 g     F .text.itcm	000000f8 FatFile::open(FatFile*, char const*, int)
2000c178 g     O .bss	00000004 SerNum
00004b8c  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
6000259c g     F .text.code	00000054 analog_init
0000b398 g     F .text.itcm	0000000c _strtod_r
0000b7e8 g     F .text.itcm	0000004a _vdprintf_r
00004f54 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
00001368 g     F .text.itcm	000001e4 saveData(short)
2002b490 g     O .bss	00000002 shift
200085c0 g     O .data	00000004 F_CPU_ACTUAL
00012724 g     F .text.itcm	000000b4 _sfread_r
0000b914 g     F .text.itcm	000000f8 memmove
2002aec4 g     O .bss	00000004 max_stat
00006ad4 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0000cdbc g     F .text.itcm	0000004c _Balloc
0001452c g       .ARM.exidx	00000000 __exidx_end
00004718 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
2002b49b g     O .bss	00000001 EventResponder::runningFromYield
00007064 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
0000845c g     F .text.itcm	00000060 tempmonGetTemp
200085dc g     O .data	00000004 __atexit_recursive_mutex
0000bc78 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
000073dc  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
2002a87c g     O .bss	00000004 EventResponder::firstInterrupt
00008dac g     F .text.itcm	00000004 usb_transfer_status
00009810 g     F .text.itcm	00000084 sm_set_pool
2002ac20 g     O .bss	00000004 __stdio_exit_handler
000032d0 g     F .text.itcm	00000018 ExFatPartition::rootLength()
00014484 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
00008e18  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
000140bc g     F .text.itcm	0000002c _fstat_r
200076a4 g     O .data	00000370 digital_pin_to_info_PGM
2002ae38 g     O .bss	00000004 errno
0000707c g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
600026c4 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
000030a0 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
0000b77c g     F .text.itcm	00000004 __seofread
00014528 g       .text.itcm	00000000 _etext
00007300 g     F .text.itcm	000000dc _spi_dma_rxISR0()
0000446c g     F .text.itcm	000000b0 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20008ec0 g       .bss	00000000 _sbss
00005a58 g     F .text.itcm	0000000c SdioCard::errorData() const
2002b468 g     O .bss	00000004 tempData0
00006df0 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
60002870 g       *ABS*	00000000 _stextload
00000068 g     F .text.itcm	00000268 loop
00009650 g     F .text.itcm	0000007a flexpwm_init
60001e54 g     F .text.code	00000004 startup_debug_reset
00008c70 g     F .text.itcm	00000064 usb_config_rx
00001dcc g     F .text.itcm	000000a0 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
00006904 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
2002a878 g     O .bss	00000004 EventResponder::lastInterrupt
00004970 g     F .text.itcm	0000002e FsBaseFile::close()
00007410 g     F .text.itcm	00000048 SPIClass::end()
00008074 g     F .text.itcm	00000134 memcpy
0000cbe0 g     F .text.itcm	000001b0 __hexnan
00004bd0 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
20008ec0 g     O .data	00000000 .hidden __TMC_END__
00003124 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
00003a08 g     F .text.itcm	00000028 FatFile::peek()
2002aec8 g     O .bss	00000004 nbuf
0000d850 g     F .text.itcm	00001b44 _svfprintf_r
000143b0 g     F .text.itcm	00000022 .hidden __floatsidf
2002b458 g     O .bss	00000004 systick_millis_count
000002d0 g     F .text.itcm	0000003c setup1()
000098a0 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
2002b4a7 g     O .bss	00000001 usb_configuration
00004b80  w    F .text.itcm	00000006 SdCardInterface::status()
000097c4 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00006b6c g     F .text.itcm	00000030 SdioCard::syncDevice()
00005c84 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00000b68  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00003a30 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
0000d70c g     F .text.itcm	00000062 __ratio
00005040 g     F .text.itcm	00000098 SharedSpiCard::sectorCount()
60002780  w    O .text.progmem	00000018 usb_string_manufacturer_name
00009b9c g     F .text.itcm	00000010 malloc
60002674 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
200007b0  w    O .data	00000024 vtable for FsFile
0000843c  w    F .text.itcm	0000000a _fstat
00012378 g     F .text.itcm	00000006 iswspace
2002ac24 g     O .bss	00000200 acqBuffer
000074ac  w    F .text.itcm	0000001e TwoWire::read()
00010fa0 g     F .text.itcm	00000040 __assert_func
000071ac  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
200002a8 g     O .data	000000c8 __mprec_tens
60002460 g     F .text.code	000000e8 usb_init
000048d4 g     F .text.itcm	0000009a FsBaseFile::operator=(FsBaseFile const&)
00004b88  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
2002aae4 g     O .bss	00000004 __malloc_top_pad
2000c0d8 g     O .bss	00000050 SPI1
00008234 g     F .text.itcm	00000048 rtc_set
000126e8 g     F .text.itcm	0000003a __ssrefill_r
2002b45c g     O .bss	00000004 systick_safe_read
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
00002a00 g     F .text.itcm	000000e4 ExFatFile::truncate()
200085e4 g     O .data	00000000 .hidden __dso_handle
00014390 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
00010f1c g     F .text.itcm	00000008 _localeconv_r
000122bc g     F .text.itcm	00000004 _strtoull_r
0000700c g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
0001385c g     F .text.itcm	000002f4 __sfvwrite_r
0000d010 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
20008bcc g     O .data	00000004 t_on
60002800 g     O .text.progmem	00000062 usb_config_descriptor_480
000098d0 g     F .text.itcm	000002c8 .hidden __udivmoddi4
0001410c g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000705c g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00003404 g     F .text.itcm	00000034 FatFile::addCluster()
0000bc28 g     F .text.itcm	00000024 _sbrk_r
00005b18 g     F .text.itcm	0000001c SdioCard::type() const
60001e48 g     F .text.code	00000002 startup_default_early_hook
60001624 g     F .text.code	00000030 ResetHandler
00009418 g     F .text.itcm	00000020 usb_serial_getchar
2002b470 g     O .bss	00000008 usb_cdc_line_coding
00007fa0 g     F .text.itcm	00000054 digitalWrite
2002a880 g     O .bss	00000004 EventResponder::lastYield
00001da4 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
0000bbfc g     F .text.itcm	0000002c _read_r
2002b46c g     O .bss	00000004 termon
00000b18  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00004b9c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00010be4 g     F .text.itcm	000000c6 _fclose_r
00005a64 g     F .text.itcm	00000024 SdioCard::readCID(cid_t*)
2002ae3c g     O .bss	00000010 extmem_smalloc_pool
2002aadc g     O .bss	00000004 __malloc_max_sbrked_mem
0000551c g     F .text.itcm	000000b6 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
00007ff4 g     F .text.itcm	00000070 pinMode
000079c0 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
000143d4 g     F .text.itcm	00000042 .hidden __extendsfdf2
0000f394 g     F .text.itcm	00001850 __ssvfscanf_r
60002765  w    O .text.progmem	00000001 _serialEventUSB1_default
00014118 g     F .text.itcm	00000276 .hidden __adddf3
2000c3fc g     O .bss	00000140 Wire2
60020000 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000d574 g     F .text.itcm	000000c2 __b2d
00014524 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
0000052c  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
00008448  w    F .text.itcm	00000004 _isatty
2002a874 g     O .bss	00000004 EventResponder::firstYield
00000bdc  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0000a14c g     F .text.itcm	000003d8 _realloc_r
0000bc84 g     F .text.itcm	00000048 __libc_init_array
000074a0  w    F .text.itcm	0000000c TwoWire::available()
000025e0 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
20000934 g     O .data	00000100 __hexdig
0000281c g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00013d40 g     F .text.itcm	00000066 _fputwc_r
000073dc  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
20000280 g     O .data	00000028 __mprec_bigtens
0000cec0 g     F .text.itcm	000000b0 __s2b
00008454  w    F .text.itcm	00000004 abort
00008e08  w    F .text.itcm	00000004 usb_serial_class::clear()
00014390 g     F .text.itcm	0000001e .hidden __floatunsidf
000083fc  w    F .text.itcm	00000034 _sbrk
60016d9c g       *ABS*	00000000 _sdataload
0000d378 g     F .text.itcm	00000042 __mcmp
200085e0 g     O .data	00000004 __brkval
2002b4a6 g     O .bss	00000001 usb_cdc_line_rtsdtr
600025f0 g     F .text.code	00000000 _init
0000917c g     F .text.itcm	00000002 usb_serial_reset
20000594 g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
000144b8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
6000279c g     O .text.progmem	00000062 usb_config_descriptor_12
200007d4 g     O .data	00000024 vtable for TwoWire
0000a528 g     F .text.itcm	00000e70 _strtod_l
0000cba8 g     F .text.itcm	00000036 __match
2002b4e0 g       .bss	00000000 _ebss
000062e0 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00000bb4  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
00001968 g     F .text.itcm	00000004 rtc_setup(unsigned char, unsigned char)
0000cf70 g     F .text.itcm	00000040 __hi0bits
00001d54 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60001d9c g     F .text.code	00000050 CrashReportClass::clear()
00007674 g     F .text.itcm	0000000c lpi2c3_isr()
000028cc g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20200880 g       .bss.dma	00000000 _heap_start
2002aaac g     O .bss	00000001 __lock___malloc_recursive_mutex
000032e8 g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
60002714 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
0000052c  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
2002aae8 g     O .bss	00000138 __sf
200085b8 g     O .data	00000004 CrashReport
0000542c  w    F .text.itcm	00000076 SharedSpiCard::readCID(cid_t*)
00004df0 g     F .text.itcm	000000ec SharedSpiCard::cardCommand(unsigned char, unsigned long)
00000003 g       *ABS*	00000000 _itcm_block_count
2002b464 g     O .bss	00000004 tail
20008ee0 g     O .bss	00000020 endpoint0_transfer_data
0000451c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000715c g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
000081a8 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
000096cc g     F .text.itcm	000000f4 pwm_init
00014118 g     F .text.itcm	00000276 .hidden __aeabi_dadd
2002ae4c g     O .bss	00000050 file
00007550  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
60020c00 g       .text.csf	00000000 __text_csf_end
600022d4 g     F .text.code	0000005c usb_pll_start
0000d1c8 g     F .text.itcm	000000c0 __pow5mult
20000708 g     O .data	0000000c vtable for CrashReportClass
00014418 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
00007680 g     F .text.itcm	0000000c lpi2c4_isr()
00004698 g     F .text.itcm	00000080 FatPartition::allocateCluster(unsigned long, unsigned long*)
2002ae9c g     O .bss	00000004 haveStore
00007550  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000592c  w    F .text.itcm	00000002 SdioCard::end()
20008ec0 g     O .bss	00000020 endpoint0_transfer_ack
2002b478 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00008d68 g     F .text.itcm	00000028 usb_transmit
00007884 g     F .text.itcm	00000020 systick_isr
0000bcd8 g     F .text.itcm	00000002 __retarget_lock_release_recursive
0000196c g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
200085c4 g     O .data	00000010 Serial
2002aea4 g     O .bss	00000020 logBuffer
2002aea0 g     O .bss	00000004 head
000078a4  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001e48  w    F .text.code	00000002 startup_early_hook
000025f0 g     F .text.itcm	00000092 ExFatFile::addCluster()
00004cdc g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
0000934c g     F .text.itcm	00000044 usb_serial_peekchar
0000b660 g     F .text.itcm	0000000c __sfp_lock_acquire
0000c080 g     F .text.itcm	00000000 memchr
00004630 g     F .text.itcm	00000068 FatPartition::fatPut(unsigned long, unsigned long)
00007bb4 g     F .text.itcm	000002f0 set_arm_clock
2002b454 g     O .bss	00000004 systick_cycle_count
20008bd4 g     O .data	00000016 usb_string_serial_number_default
0000c364 g     F .text.itcm	0000020c _free_r
00005210 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
00013ed4 g     F .text.itcm	00000060 category
00005674 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
00006094 g     F .text.itcm	000000b8 SdioCard::readStop()
00004b90  w    F .text.itcm	00000004 SharedSpiCard::type() const
0000bba0 g     F .text.itcm	0000000c __locale_mb_cur_max
00012360 g     F .text.itcm	00000016 _wcsrtombs_r
2002a918 g     O .bss	00000190 __atexit0
00008e10  w    F .text.itcm	00000004 usb_serial_class::flush()
00005328 g     F .text.itcm	00000080 SharedSpiCard::readSCR(scr_t*)
00012668 g     F .text.itcm	00000080 _sungetc_r
00014114 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20008b5c g     O .data	00000004 __malloc_sbrk_base
00007b24  w    F .text.itcm	00000004 usb_serial_class::read()
0001211c g     F .text.itcm	00000004 _strtoll_r
00014418 g     F .text.itcm	0000006a .hidden __floatundidf
0000844c  w    F .text.itcm	00000006 _lseek
0000d288 g     F .text.itcm	000000f0 __lshift
0000363c g     F .text.itcm	000000e2 FatFile::mkdir(FatFile*, char const*, bool)
00001034 g     F .text.itcm	00000334 storeData(short)
00008d38 g     F .text.itcm	00000030 usb_prepare_transfer
00004b94  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000827c g     F .text.itcm	00000180 unused_interrupt_vector
00012568 g     F .text.itcm	00000100 __ssprint_r
2002b47c g     O .bss	00000004 usb_timer0_callback
60002330 g     F .text.code	00000130 tempmon_init
00003e94 g     F .text.itcm	0000011c FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00000a7c  w    F .text.itcm	00000002 SdFs::~SdFs()
0000b850 g     F .text.itcm	00000062 _vasnprintf_r
000097c0  w    F .text.itcm	00000002 serialEvent()
0000c23c g     F .text.itcm	00000088 __register_exitproc
000024ec g     F .text.itcm	000000f4 ExFatFile::open(ExFatFile*, char const*, int)
0000bab0 g     F .text.itcm	0000008a strncmp
00003dd0 g     F .text.itcm	000000c4 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
0000292c g     F .text.itcm	000000d2 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00004a44 g     F .text.itcm	00000114 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char, unsigned long)
000093a8 g     F .text.itcm	00000070 usb_serial_flush_input
20008b88 g     O .data	00000004 fsamp
0000d06c g     F .text.itcm	0000015c __multiply
000015e4 g     F .text.itcm	0000001c getDataCount()
00009438 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000bb3c g     F .text.itcm	00000064 strncpy
2002aab4 g     O .bss	00000028 __malloc_current_mallinfo
0000063c g     F .text.itcm	0000008c i2s_setup()
20000674 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
0000d638 g     F .text.itcm	000000d4 __d2b
000056dc g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
2002a884 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00005924  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60002548 g     F .text.code	00000054 _reboot_Teensyduino_
00005b08  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001e4c g     F .text.code	00000002 startup_default_middle_hook
000006c8 g     F .text.itcm	000000a4 dma_setup()
0000a134 g     F .text.itcm	00000018 realloc
00005848 g     F .text.itcm	000000d8 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00004fcc g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
00005ef8 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
00011fac g     F .text.itcm	00000004 _strtoul_r
00008640 g     F .text.itcm	00000630 usb_isr
0000b4ec g     F .text.itcm	0000000c __cxa_atexit
00001e6c g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0000bbac g     F .text.itcm	00000024 _close_r
000143b0 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00004d68 g     F .text.itcm	0000006e SharedSpiCard::readStop()
00007104 g     F .text.itcm	00000056 FsCache::sync()
2000c088 g     O .bss	00000050 SPI
0000b8b4 g     F .text.itcm	00000060 memcmp
20000788  w    O .data	00000028 vtable for usb_serial_class
000070a0 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000bcd0 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00006ee4 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
2002af98 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000b700 g     F .text.itcm	00000058 sscanf
2000c128 g     O .bss	00000050 SPI2
00013bc8 g     F .text.itcm	000000cc __swsetup_r
00009b98  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00000d3c g     F .text.itcm	000000b8 headerInit(long, long, long, int)
000050d8 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
0000d770 g     F .text.itcm	0000005c __copybits
20008754 g     O .data	00000408 __malloc_av_
2002a914 g     O .bss	00000004 __atexit
0000b758 g     F .text.itcm	00000022 __sread
000094cc g     F .text.itcm	00000094 usb_serial_flush_output
0000a11c g     F .text.itcm	0000000c __malloc_lock
20008c00 g     O .data	000002c0 _VectorsRam
000070b4 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00010ddc g     F .text.itcm	00000054 _fflush_r
00010fe0 g     F .text.itcm	00000078 _calloc_r
00000e84 g     F .text.itcm	000000a0 makeHeader(long*)
000041cc g     F .text.itcm	000002a0 FatFile::open(FatFile*, FatLfn_t*, int)
20008bc8 g     O .data	00000004 t_acq
20008beb g     O .data	00000001 yield_active_check_flags
000027bc g     F .text.itcm	0000005e ExFatFile::sync()
0000bcd4 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2002b4a8 g     O .bss	00000001 usb_high_speed
00005e30 g     F .text.itcm	0000007c SdioCard::isBusy()
0000ba0c g     F .text.itcm	000000a4 memset
00008064 g     F .text.itcm	00000010 main
00000a7c  w    F .text.itcm	00000002 SdFs::~SdFs()
2002aae0 g     O .bss	00000004 __malloc_max_total_mem
00002e2c g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
0000bccc g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200800 g     O .bss.dma	00000062 usb_descriptor_buffer
00005744 g     F .text.itcm	000000e8 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00002ae4 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0000b7e0 g     F .text.itcm	00000008 __sclose
00008db0 g     F .text.itcm	00000058 usb_init_serialnumber
0000b4e8 g     F .text.itcm	00000004 _strtol_r
60002674 g       .text.code	00000000 __init_array_end
00011180 g     F .text.itcm	00000cec _dtoa_r
00009bbc g     F .text.itcm	00000560 _malloc_r
00005140 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
2002b49c g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
0000d830 g     F .text.itcm	0000001a __ascii_wctomb
00014428 g     F .text.itcm	0000005a .hidden __aeabi_l2d
2002a8a8 g     O .bss	00000004 FatVolume::m_cwv
00001af0 g     F .text.itcm	00000012 menu1()
00013b50 g     F .text.itcm	00000076 __submore
2000086c  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
000077b8 g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
00007b2c g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
00007408 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00007f4c g     F .text.itcm	00000054 micros
00002684 g     F .text.itcm	00000138 ExFatFile::syncDir()
000053a8 g     F .text.itcm	00000082 SharedSpiCard::readSDS(sds_t*)
0000c2c4 g     F .text.itcm	000000a0 _malloc_trim_r
00013da8 g     F .text.itcm	00000106 _wcsnrtombs_l
60002798 g     O .text.progmem	00000004 string0
00009464 g     F .text.itcm	00000018 usb_serial_write
60001e50  w    F .text.code	00000002 startup_late_hook
0000582c g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
00008e0c  w    F .text.itcm	00000004 usb_serial_class::available()
0000bce8 g     F .text.itcm	000002dc strcmp
60002766  w    O .text.progmem	00000001 _serialEvent_default
00003c10 g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000280 endpoint_queue_head
60002768  w    O .text.progmem	00000016 usb_string_product_name
00007ea4 g     F .text.itcm	000000a8 delay
000144b8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
2002b48a g     O .bss	00000002 dma_channel_allocated_mask
00014520 g     F .fini	00000000 _fini
000074e8 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00004c5c g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
2002b460 g     O .bss	00000004 t_off
0000b6c0 g     F .text.itcm	00000040 sprintf
0000797c g     F .text.itcm	0000001c Print::printf(char const*, ...)
0000792c g     F .text.itcm	00000016 Print::print(long)
000034b0 g     F .text.itcm	0000001e FatFile::close()
00008458 g     F .text.itcm	00000004 Panic_Temp_isr
00014484 g     F .text.itcm	00000030 .hidden __fixdfdi
00000538 g     F .text.itcm	00000104 setAudioFrequency(int)
00001600 g     F .text.itcm	0000000c queue_isBusy()
2002af9c g     O .bss	000004b8 sd
000034d0 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
00013eb0 g     F .text.itcm	00000024 _wcsnrtombs_r
00005b04  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000b50  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
0000bc4c g     F .text.itcm	0000002c _write_r
00012380 g     F .text.itcm	00000028 iswspace_l
00006b9c g     F .text.itcm	00000144 SdioCard::erase(unsigned long, unsigned long)
00000c34 g     F .text.itcm	000000c4 filing_init()
0000c230 g     F .text.itcm	0000000c nanf
20008b70 g     O .data	00000004 _impure_ptr
0000200c g     F .text.itcm	0000002c ExFatFile::peek()
00010cac g     F .text.itcm	00000130 __sflush_r
200006e4  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
000122c0 g     F .text.itcm	00000054 _mbrtowc_r
2000c17c g     O .bss	00000140 Wire
00004b58 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
0000b678 g     F .text.itcm	00000046 _fwalk_sglue
00005a4c g     F .text.itcm	0000000c SdioCard::errorCode() const
00003818 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000bc8  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002660 g       .text.code	00000000 __preinit_array_end
60001654 g     F .text.code	00000748 CrashReportClass::printTo(Print&) const
00000a80 g     F .text.itcm	00000080 dateTime(unsigned short*, unsigned short*, unsigned char*)
00000fa0 g     F .text.itcm	00000094 newFileName(char*)
00000b00  w    F .text.itcm	00000018 FsFile::~FsFile()
00002fe4 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000cd90 g     F .text.itcm	0000002a __ascii_mbtowc
0000d510 g     F .text.itcm	00000064 __ulp
00004764 g     F .text.itcm	00000120 FatPartition::init(FsBlockDeviceInterface*, unsigned char, unsigned long)
00008614 g     F .text.itcm	0000002c usb_stop_sof_interrupts
000074cc  w    F .text.itcm	00000018 TwoWire::peek()
000074e4  w    F .text.itcm	00000002 TwoWire::flush()
0000030c g     F .text.itcm	0000016c setup
200083f0 g     O .data	00000084 usb_descriptor_list
00005eac g     F .text.itcm	00000020 SdioCard::status()
0000c220 g     F .text.itcm	00000010 nan
00003860 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00003828 g     F .text.itcm	00000036 FatFile::openRoot(FatVolume*)
2002a870 g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
00004a40 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
00007784 g     F .text.itcm	00000034 DMAChannel::release()
0000947c g     F .text.itcm	00000050 usb_serial_write_buffer_free
00010eb8 g     F .text.itcm	00000064 stpncpy
20008b64 g     O .data	0000000c __sglue
00009180 g     F .text.itcm	000000ec usb_serial_configure
00007514 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00007960  w    F .text.itcm	0000001c _write
20008ec0 g       .data	00000000 _edata
000030e4 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
2002b49f g     O .bss	00000001 external_psram_size
00005b04  w    F .text.itcm	00000002 SdioCard::~SdioCard()
000031e4 g     F .text.itcm	000000ec ExFatPartition::init(FsBlockDeviceInterface*, unsigned char, unsigned long)
00004b9c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
000055d4 g     F .text.itcm	000000a0 DedicatedSpiCard::setDedicatedSpi(bool)
00002dc8 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
00003438 g     F .text.itcm	00000078 FatFile::addDirCluster()
00013c94 g     F .text.itcm	000000aa __fputwc
00008e14  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00007668 g     F .text.itcm	0000000c lpi2c1_isr()
0000076c g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
000081ac g     F .text.itcm	00000062 ultoa
000049a0 g     F .text.itcm	000000a0 FsBaseFile::open(FsVolume*, char const*, int)
0000b780 g     F .text.itcm	0000003e __swrite
0000783c g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20008b60 g     O .data	00000004 __malloc_trim_threshold
00007b28  w    F .text.itcm	00000004 usb_serial_class::peek()
00005928  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00001984 g     F .text.itcm	0000002e rtcSetDate(int, int, int)
00004edc g     F .text.itcm	00000078 SharedSpiCard::cardCMD6(unsigned long, unsigned char*)
00012540 g     F .text.itcm	00000028 fiprintf
00012850 g     F .text.itcm	00000f8c _vfiprintf_r
000019b4 g     F .text.itcm	0000002e rtcSetTime(int, int, int)
00006ee8  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000d3bc g     F .text.itcm	00000154 __mdiff
00001690 g     F .text.itcm	0000006c pullData(unsigned long*)
00005aac g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
20000604 g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
0000301c g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00007224 g     F .text.itcm	000000dc _spi_dma_rxISR1()
20008498 g     O .data	00000120 _impure_data
00002124 g     F .text.itcm	000003c6 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00000df4 g     F .text.itcm	00000090 writeHeader(char*)
000124dc g     F .text.itcm	00000064 _jp2uc_l
00001c9c g     F .text.itcm	000000b8 menu3()
0000b66c g     F .text.itcm	0000000c __sfp_lock_release
00000cf8 g     F .text.itcm	00000044 timeStamp()
00006094 g     F .text.itcm	000000b8 SdioCard::writeStop()
00010e30 g     F .text.itcm	00000088 __sccl
00001d90 g     F .text.itcm	00000014 ExFatFile::close()
20000a98 g     O .data	00000101 _ctype_
00008430  w    F .text.itcm	00000004 _read
60002660 g       .text.code	00000000 __init_array_start
00009b98  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001dec g     F .text.code	0000005c CrashReportClass::operator bool()
200085bc g     O .data	00000004 F_BUS_ACTUAL
2002ae24 g     O .bss	00000004 disk_count
000016fc g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
00004884 g     F .text.itcm	00000050 FatVolume::chdir(char const*)
00001870 g     F .text.itcm	000000f8 date2time(datetime_t*)
00005abc g     F .text.itcm	00000014 SdioCard::readSCR(scr_t*)
00013f34 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
000076d0 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
00004bb0 g     F .text.itcm	0000001e SharedSpiCard::end()
0000c140 g     F .text.itcm	000000dc strlen
2002af4c g     O .bss	00000004 ready
00003a74 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0000c614 g     F .text.itcm	00000594 __gethex
60002768 g     O .text.progmem	00000016 usb_string_product_name_default
0000b834 g     F .text.itcm	0000001c vdprintf
00005b34 g     F .text.itcm	00000060 SdioCard::sectorCount()
00005ad0 g     F .text.itcm	00000034 SdioCard::readSDS(sds_t*)
60001e4c  w    F .text.code	00000002 startup_middle_hook
200007f8 g     O .data	00000074 vtable for SdioCard
000143d4 g     F .text.itcm	00000042 .hidden __aeabi_f2d
60001e58 g     F .text.code	000000f8 configure_cache
00005920  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
000054a4  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
00000f24 g     F .text.itcm	0000007c newDirectory(char*)
00006a00 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00001b04 g     F .text.itcm	00000198 menu2()
00006ff8 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000007b8 g     F .text.itcm	000002c0 compress(void*)
00014114 g     F .text.itcm	0000027a .hidden __subdf3
60002660 g       .text.code	00000000 __preinit_array_start
00008d90 g     F .text.itcm	0000001c usb_receive
00002eec g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
0000cfb0 g     F .text.itcm	00000060 __lo0bits
00002f98 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
20008bd0 g     O .data	00000004 tempDatai
00003b24 g     F .text.itcm	000000ea FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00020c00 g       *ABS*	00000000 _flashimagelen
00004dd8 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
00009894 g     F .text.itcm	0000000a __aeabi_atexit
00000b00  w    F .text.itcm	00000018 FsFile::~FsFile()
00008210 g     F .text.itcm	00000024 rtc_get
00010f28 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
00007880 g     F .text.itcm	00000004 pendablesrvreq_isr
00000a78  w    F .text.itcm	00000004 Print::availableForWrite()
200085e8 g     O .data	0000016c __global_locale
00006368 g     F .text.itcm	0000059c SdioCard::begin(SdioConfig)
0000926c g     F .text.itcm	000000e0 usb_serial_read
2002aab0 g     O .bss	00000001 __lock___sfp_recursive_mutex
00007998 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00008cd4 g     F .text.itcm	00000064 usb_config_tx
00008434  w    F .text.itcm	00000006 _close
0000460c g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
00009bac g     F .text.itcm	00000010 free
00002d64 g     F .text.itcm	00000064 ExFatFile::cmpName(DirName_t const*, ExName_t*)
0000ce1c g     F .text.itcm	000000a4 __multadd
0000ce08 g     F .text.itcm	00000012 _Bfree
20008bd4  w    O .data	00000016 usb_string_serial_number
00006ce0 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
00005a88 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)



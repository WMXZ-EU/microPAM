
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\B6A2B96C86D1458F5F30CD00E995713A/microPAM_V2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600026ac l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00014120 l    d  .fini	00000000 .fini
00014124 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200092c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001fbc0 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20026fb0 l     O .bss	00000004 s_hotCount
20026fb4 l     O .bss	00000004 s_hotTemp
20026fb8 l     O .bss	00000004 s_hot_ROOM
20026fbc l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00007ec0 l     F .text.itcm	000000c8 endpoint0_receive
00007f88 l     F .text.itcm	00000088 schedule_transfer
00008010 l     F .text.itcm	00000036 run_callbacks
00008048 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20026e30 l     O .bss	00000008 endpoint0_buffer
20026e38 l     O .bss	00000004 endpoint0_notify_mask
20009580 l     O .bss	00000008 endpoint0_setupdata
20026e3c l     O .bss	00000004 endpointN_notify_mask
20026f5c l     O .bss	00000008 reply_buffer
200274e4 l     O .bss	00000001 sof_usage
200274ec l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
200274de l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20026ed8 l     O .bss	00000000 object.0
600026a0 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 mAcq.cpp
000004b4 l     F .text.itcm	000000b4 acq_isr()
000007d4 l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
20025f9c l     O .bss	00000008 dma
20200000 l     O .bss.dma	00000800 i2s_buffer
00000000 l    df *ABS*	00000000 mFiling.cpp
00000c50 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
20009590 l     O .bss	00001800 diskBuffer
20022f9c l     O .bss	00001800 tempBuffer0
2002479c l     O .bss	00001800 tempBuffer1
00001570 l     F .text.itcm	0000008c _GLOBAL__sub_I_t_acq
2000ad90 l     O .bss	00000200 fileHeader
200261cc l     O .bss	00000050 dirName
2002641c l     O .bss	00000200 wav_hdr
2002661c l     O .bss	00000050 fileName
200268b4 l     O .bss	00000004 checkEndOfFile(short)::tx_
200268c4 l     O .bss	00000004 saveData(short)::data0
200268c8 l     O .bss	00000004 saveData(short)::data1
200268cc l     O .bss	00000050 timeStamp()::date_time
200086dc l     O .data	00000004 saveData(short)::first
200086e0 l     O .data	00000004 newFolder(int)::ho
00000000 l    df *ABS*	00000000 usb_desc.c
20008c7c l     O .data	00000012 device_descriptor
600027c8 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 microPAM_V2.ino.cpp
2000958c l     O .bss	00000004 guard variable for loop::status
200268b8 l     O .bss	00000004 loop::t0
200274c0 l     O .bss	00000002 loop::mxb
200274c2 l     O .bss	00000002 loop::status
200274c4 l     O .bss	00000002 loop::monitor
200268bc l     O .bss	00000004 loop::loopCount
00000000 l    df *ABS*	00000000 mCompress.cpp
20025fa4 l     O .bss	00000200 dout
2002621c l     O .bss	00000200 outData
2002666c l     O .bss	00000200 tempData
200268c0 l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 mQueue.cpp
2000af98 l     O .bss	00018000 data_buffer
2000af94 l     O .bss	00000004 queue_busy
00000000 l    df *ABS*	00000000 mRTC.cpp
20000804 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 menu.cpp
000019fc l     F .text.itcm	00000054 menuGetInt32(long*) [clone .isra.0]
00001a50 l     F .text.itcm	00000054 menuGetInt16(short*) [clone .isra.0]
00001aa4 l     F .text.itcm	00000064 menuGet3Int(int*, int*, int*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00003318 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
000045bc l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
000046b8 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000586c l     F .text.itcm	00000030 sdIrs()
0000589c l     F .text.itcm	00000014 isBusyDat()
000058b0 l     F .text.itcm	0000000c isBusyDMA()
000058bc l     F .text.itcm	000000cc setSdclk(unsigned long)
00005a90 l     F .text.itcm	00000128 initSDHC()
00005bb8 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
00005cf4 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
00005d8c l     F .text.itcm	00000060 readReg16(unsigned long, void*)
00005e88 l     F .text.itcm	0000002c isBusyCMD13()
00006040 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
00006258 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
200274d6 l     O .bss	00000001 m_initDone
2000af90 l     O .bss	00000004 m_sdClkKhz
200274d7 l     O .bss	00000001 m_version2
20022f98 l     O .bss	00000004 m_errorLine
200274d8 l     O .bss	00000001 m_highCapacity
200274d9 l     O .bss	00000001 m_transferActive
200261a4 l     O .bss	00000010 m_cid
200261b4 l     O .bss	00000010 m_csd
200261c4 l     O .bss	00000004 m_ocr
200261c8 l     O .bss	00000004 m_rca
2002686c l     O .bss	00000004 m_busyFcn
200274da l     O .bss	00000001 m_dmaBusy
20026870 l     O .bss	00000004 m_irqstat
20008cb6 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
200005f8 l     O .data	0000012c lookupTable
20000730 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
0000709c l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 Print.cpp
000072a4 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mtp.c
000088c0 l     F .text.itcm	00000010 txEvent_event
000088d0 l     F .text.itcm	0000004c rx_event
0000891c l     F .text.itcm	00000064 rx_queue_transfer
200274e0 l     O .bss	00000001 rx_head
20026f88 l     O .bss	00000005 rx_list
20026f9c l     O .bss	00000014 rx_list_transfer_len
200274ca l     O .bss	00000002 rx_packet_size
200274e2 l     O .bss	00000001 rx_tail
20009300 l     O .bss	00000080 rx_transfer
200274e6 l     O .bss	00000001 tx_head
200274d2 l     O .bss	00000002 tx_packet_size
20009480 l     O .bss	00000080 tx_transfer
20200880 l     O .bss.dma	00000800 rx_buffer
20201080 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
00008a28 l     F .text.itcm	00000060 rx_queue_transfer
20201880 l     O .bss.dma	00001000 rx_buffer
00008a88 l     F .text.itcm	000000b4 rx_event
00008b3c l     F .text.itcm	00000090 usb_serial_flush_callback
20202880 l     O .bss.dma	00002000 txbuffer
00008bcc l     F .text.itcm	000001b8 usb_serial_write.part.0
20026f64 l     O .bss	00000004 rx_available
20026f68 l     O .bss	00000010 rx_count
200274e1 l     O .bss	00000001 rx_head
20026f78 l     O .bss	00000010 rx_index
20026f90 l     O .bss	00000009 rx_list
200274cc l     O .bss	00000002 rx_packet_size
200274e3 l     O .bss	00000001 rx_tail
20009380 l     O .bss	00000100 rx_transfer
200274e5 l     O .bss	00000001 transmit_previous_timeout
200274d0 l     O .bss	00000002 tx_available
200274e7 l     O .bss	00000001 tx_head
200274e8 l     O .bss	00000001 tx_noautoflush
200274d4 l     O .bss	00000002 tx_packet_size
20009500 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
200274dd l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
0000afa4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000b0f8 l     F .text.itcm	00000018 stdio_exit_handler
0000b110 l     F .text.itcm	00000040 cleanup_stdio
0000b150 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
0000c170 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00010c58 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
00011a6c l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
00011bb0 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00011d20 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
00011fa8 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
000123d8 l     F .text.itcm	00000076 __sprint_r.part.0
000133dc l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
000140f8 l     F .text.itcm	00000008 ___init_veneer
00014100 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00014108 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
00014110 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
60002640 l     F .text.code	00000008 __main_veneer
60002648 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002650 l     F .text.code	00000008 __set_arm_clock_veneer
60002658 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
60002660 l     F .text.code	00000008 __delay_veneer
60002668 l     F .text.code	00000008 ____libc_init_array_veneer
60002670 l     F .text.code	00000008 __memset_veneer
60002678 l     F .text.code	00000008 __pwm_init_veneer
60002680 l     F .text.code	00000008 __sm_set_pool_veneer
60002688 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002690 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002698 l     F .text.code	00000008 __usb_init_serialnumber_veneer
00006fe4 g     F .text.itcm	000000b8 toUpcase(unsigned short)
00001624 g     F .text.itcm	00000084 pushData(unsigned long*)
00008fac g     F .text.itcm	00000018 usb_serial_available
0000d3cc g     F .text.itcm	00000062 __any_on
00013ce8 g     F .text.itcm	00000024 _isatty_r
0000bbbc g     F .text.itcm	000000ba strcpy
60001e78 g     F .text.code	00000002 startup_default_late_hook
0000b7d0 g     F .text.itcm	0000002c _lseek_r
000063b4 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000917c  w    F .text.itcm	000000d8 yield
00004d84  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
20026ef8 g     O .bss	00000060 proc_stat
200274bc g     O .bss	00000004 usb_timer1_callback
00003bf4 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
600026d4 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
200274c8 g     O .bss	00000002 proc
60001f90 g     F .text.code	00000384 configure_external_ram
00004d04  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00004510  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00014028 g     F .text.itcm	0000005a .hidden __floatdidf
00003f88 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
20026ef0 g     O .bss	00000004 procCount
000048dc g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
20026874 g     O .bss	00000004 FsDateTime::callback
20026ab0 g     O .bss	00000001 __lock___atexit_recursive_mutex
00011f14 g     F .text.itcm	0000004c _wcrtomb_r
000040f0 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
00005468 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
0000733c g     F .text.itcm	0000001c Print::println()
20000854 g     O .data	00000070 vtable for DedicatedSpiCard
20026ef4 g     O .bss	00000004 procMiss
0000b3c0 g     F .text.itcm	00000020 __sseek
0000b224 g     F .text.itcm	0000003c __sinit
0000204c g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
00013c0c g     F .text.itcm	000000b0 __swbuf_r
00009d28 g     F .text.itcm	0000000c __malloc_unlock
200268ac g     O .bss	00000004 FsVolume::m_cwv
000036f0 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
20009588 g     O .bss	00000004 SerNum
200274dc g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
00004cf8  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
600025dc g     F .text.code	00000054 analog_init
0000af98 g     F .text.itcm	0000000c _strtod_r
0000b3e8 g     F .text.itcm	0000004a _vdprintf_r
00005140 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
000013bc g     F .text.itcm	000001b4 saveData(short)
200274ce g     O .bss	00000002 shift
200086c8 g     O .data	00000004 F_CPU_ACTUAL
00012324 g     F .text.itcm	000000b4 _sfread_r
0000b514 g     F .text.itcm	000000f8 memmove
20026ecc g     O .bss	00000004 max_stat
0000696c g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0000c9bc g     F .text.itcm	0000004c _Balloc
0001412c g       .ARM.exidx	00000000 __exidx_end
00004884 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
200274db g     O .bss	00000001 EventResponder::runningFromYield
00006db8 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
00004be0 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00007e60 g     F .text.itcm	00000060 tempmonGetTemp
200086e4 g     O .data	00000004 __atexit_recursive_mutex
0000b878 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
20026884 g     O .bss	00000004 EventResponder::firstInterrupt
00008828 g     F .text.itcm	00000028 usb_transfer_status
00009410 g     F .text.itcm	00000084 sm_set_pool
2002688c g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
20026c28 g     O .bss	00000004 __stdio_exit_handler
000032a0 g     F .text.itcm	00000018 ExFatPartition::rootLength()
00014084 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
000088b8  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00013cbc g     F .text.itcm	0000002c _fstat_r
200077b8 g     O .data	00000370 digital_pin_to_info_PGM
20026e40 g     O .bss	00000004 errno
00006dd0 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
0000307c g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
0000b37c g     F .text.itcm	00000004 __seofread
00014128 g       .text.itcm	00000000 _etext
0000443c g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200092c0 g       .bss	00000000 _sbss
00005994 g     F .text.itcm	0000000c SdioCard::errorData() const
200274a4 g     O .bss	00000004 tempData0
00006b44 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
000031c0 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
600027d4 g       *ABS*	00000000 _stextload
00000068 g     F .text.itcm	0000028c loop
00009254 g     F .text.itcm	0000007a flexpwm_init
60001e7c g     F .text.code	00000004 startup_debug_reset
000086ec g     F .text.itcm	00000064 usb_config_rx
00001de4 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0000679c g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
20026880 g     O .bss	00000004 EventResponder::lastInterrupt
00004b04 g     F .text.itcm	00000028 FsBaseFile::close()
00007104 g     F .text.itcm	00000048 SPIClass::end()
00007a6c g     F .text.itcm	00000134 memcpy
0000c7e0 g     F .text.itcm	000001b0 __hexnan
00004df8 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
200092c0 g     O .data	00000000 .hidden __TMC_END__
00003100 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
000039e8 g     F .text.itcm	00000028 FatFile::peek()
20026ed4 g     O .bss	00000004 nbuf
0000d450 g     F .text.itcm	00001b44 _svfprintf_r
00013fb0 g     F .text.itcm	00000022 .hidden __floatsidf
20027494 g     O .bss	00000004 systick_millis_count
000002f4 g     F .text.itcm	0000003c setup1()
000094a0 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
200274ea g     O .bss	00000001 usb_configuration
00004cec  w    F .text.itcm	00000006 SdCardInterface::status()
000093c4 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00006a04 g     F .text.itcm	00000030 SdioCard::syncDevice()
00005c40 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00000ba8  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00003a10 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
0000d30c g     F .text.itcm	00000062 __ratio
0000522c g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
600026d4  w    O .text.progmem	00000018 usb_string_manufacturer_name
600026ac g     O .text.progmem	00000008 usb_string_mtp
0000979c g     F .text.itcm	00000010 malloc
200008ec  w    O .data	00000024 vtable for FsFile
00007e40  w    F .text.itcm	0000000a _fstat
00011f78 g     F .text.itcm	00000006 iswspace
20026c2c g     O .bss	00000200 acqBuffer
00010ba0 g     F .text.itcm	00000040 __assert_func
20000328 g     O .data	000000c8 __mprec_tens
600024a0 g     F .text.code	000000e8 usb_init
00004a50 g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
00004cf4  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
20026aec g     O .bss	00000004 __malloc_top_pad
00007c2c g     F .text.itcm	00000048 rtc_set
000122e8 g     F .text.itcm	0000003a __ssrefill_r
20027498 g     O .bss	00000004 systick_safe_read
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
000029ec g     F .text.itcm	000000e4 ExFatFile::truncate()
200086ec g     O .data	00000000 .hidden __dso_handle
00013f90 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
00010b1c g     F .text.itcm	00000008 _localeconv_r
00011ebc g     F .text.itcm	00000004 _strtoull_r
00006d60 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
0001345c g     F .text.itcm	000002f4 __sfvwrite_r
0000cc10 g     F .text.itcm	0000005c __i2b
00008980 g     F .text.itcm	000000a8 usb_mtp_configure
20000000 g       .data	00000000 _sdata
20008c98 g     O .data	00000004 t_on
6000275c g     O .text.progmem	00000069 usb_config_descriptor_480
000094d0 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00013d0c g     F .text.itcm	00000000 .hidden __aeabi_drsub
00006db0 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
000033cc g     F .text.itcm	00000034 FatFile::addCluster()
0000b828 g     F .text.itcm	00000024 _sbrk_r
00005a0c g     F .text.itcm	0000001c SdioCard::type() const
60001e70 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
00009034 g     F .text.itcm	00000020 usb_serial_getchar
200274ac g     O .bss	00000008 usb_cdc_line_coding
00007998 g     F .text.itcm	00000054 digitalWrite
20026888 g     O .bss	00000004 EventResponder::lastYield
00001dbc g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
0000b7fc g     F .text.itcm	0000002c _read_r
200274a8 g     O .bss	00000004 termon
00000b58  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00004d78  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
000107e4 g     F .text.itcm	000000c6 _fclose_r
20026e44 g     O .bss	00000010 extmem_smalloc_pool
20026ae4 g     O .bss	00000004 __malloc_max_sbrked_mem
00005330 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
000079ec g     F .text.itcm	00000070 pinMode
000073b8 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
00013fd4 g     F .text.itcm	00000042 .hidden __extendsfdf2
0000ef94 g     F .text.itcm	00001850 __ssvfscanf_r
00013d18 g     F .text.itcm	00000276 .hidden __adddf3
6001fc00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000d174 g     F .text.itcm	000000c2 __b2d
00014124 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00000568  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
00007e4c  w    F .text.itcm	00000004 _isatty
2002687c g     O .bss	00000004 EventResponder::firstYield
00006f4c g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000c1c  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00009d4c g     F .text.itcm	000003d8 _realloc_r
0000b884 g     F .text.itcm	00000048 __libc_init_array
000025c8 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
000059a0 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20000a48 g     O .data	00000100 __hexdig
00002804 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00013940 g     F .text.itcm	00000066 _fputwc_r
20000300 g     O .data	00000028 __mprec_bigtens
0000cac0 g     F .text.itcm	000000b0 __s2b
00005660  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
00007e58  w    F .text.itcm	00000004 abort
000088a8  w    F .text.itcm	00000004 usb_serial_class::clear()
00013f90 g     F .text.itcm	0000001e .hidden __floatunsidf
00007e00  w    F .text.itcm	00000034 _sbrk
60016900 g       *ABS*	00000000 _sdataload
0000cf78 g     F .text.itcm	00000042 __mcmp
200086e8 g     O .data	00000004 __brkval
200274e9 g     O .bss	00000001 usb_cdc_line_rtsdtr
60002630 g     F .text.code	00000000 _init
00008d84 g     F .text.itcm	00000002 usb_serial_reset
000140b8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
600026f0 g     O .text.progmem	00000069 usb_config_descriptor_12
0000a128 g     F .text.itcm	00000e70 _strtod_l
0000c7a8 g     F .text.itcm	00000036 __match
20027520 g       .bss	00000000 _ebss
0000643c g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00000bf4  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
00001980 g     F .text.itcm	00000004 rtc_setup(unsigned char, unsigned char)
0000cb70 g     F .text.itcm	00000040 __hi0bits
00001d6c g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60001674 g     F .text.code	0000009c CrashReportClass::clear()
000028b4 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20204880 g       .bss.dma	00000000 _heap_start
20026ab4 g     O .bss	00000001 __lock___malloc_recursive_mutex
000032b8 g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
00000568  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20026af0 g     O .bss	00000138 __sf
200086c0 g     O .data	00000004 CrashReport
00005058 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00000003 g       *ABS*	00000000 _itcm_block_count
200274a0 g     O .bss	00000004 tail
200092e0 g     O .bss	00000020 endpoint0_transfer_data
0000454c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
00006eb0 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
00007ba0 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
000092d0 g     F .text.itcm	000000f4 pwm_init
00013d18 g     F .text.itcm	00000276 .hidden __aeabi_dadd
20026e54 g     O .bss	00000050 file
20008cb7 g     O .data	00000001 usb_mtp_status
60020800 g       .text.csf	00000000 __text_csf_end
60002314 g     F .text.code	0000005c usb_pll_start
0000cdc8 g     F .text.itcm	000000c0 __pow5mult
20000848 g     O .data	0000000c vtable for CrashReportClass
00014018 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
000047c4 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
20026ea4 g     O .bss	00000004 haveStore
00005868  w    F .text.itcm	00000002 SdioCard::end()
200092c0 g     O .bss	00000020 endpoint0_transfer_ack
200274b4 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
000087e4 g     F .text.itcm	00000028 usb_transmit
0000727c g     F .text.itcm	00000020 systick_isr
0000b8d8 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00001984 g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
200086cc g     O .data	00000010 Serial
20026eac g     O .bss	00000020 logBuffer
20026ea8 g     O .bss	00000004 head
0000729c  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001e70  w    F .text.code	00000002 startup_early_hook
000025d8 g     F .text.itcm	00000092 ExFatFile::addCluster()
00004f04 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
00008f68 g     F .text.itcm	00000044 usb_serial_peekchar
0000b260 g     F .text.itcm	0000000c __sfp_lock_acquire
0000bc80 g     F .text.itcm	00000000 memchr
000075ac g     F .text.itcm	000002f0 set_arm_clock
20027490 g     O .bss	00000004 systick_cycle_count
20008ca0 g     O .data	00000016 usb_string_serial_number_default
0000bf64 g     F .text.itcm	0000020c _free_r
000054d0 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
00013ad4 g     F .text.itcm	00000060 category
000056d8 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
00005f88 g     F .text.itcm	000000b8 SdioCard::readStop()
00004cfc  w    F .text.itcm	00000004 SharedSpiCard::type() const
0000b7a0 g     F .text.itcm	0000000c __locale_mb_cur_max
00011f60 g     F .text.itcm	00000016 _wcsrtombs_r
20026920 g     O .bss	00000190 __atexit0
000088b0  w    F .text.itcm	00000004 usb_serial_class::flush()
00012268 g     F .text.itcm	00000080 _sungetc_r
00013d14 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20008c64 g     O .data	00000004 __malloc_sbrk_base
0000751c  w    F .text.itcm	00000004 usb_serial_class::read()
00011d1c g     F .text.itcm	00000004 _strtoll_r
00014018 g     F .text.itcm	0000006a .hidden __floatundidf
00007e50  w    F .text.itcm	00000006 _lseek
0000ce88 g     F .text.itcm	000000f0 __lshift
00003604 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00001088 g     F .text.itcm	00000334 storeData(short)
000087b4 g     F .text.itcm	00000030 usb_prepare_transfer
00004d00  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
00007c74 g     F .text.itcm	0000018c unused_interrupt_vector
00012168 g     F .text.itcm	00000100 __ssprint_r
200274b8 g     O .bss	00000004 usb_timer0_callback
60002370 g     F .text.code	00000130 tempmon_init
00003e64 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00000abc  w    F .text.itcm	00000002 SdFs::~SdFs()
0000b450 g     F .text.itcm	00000062 _vasnprintf_r
0000be3c g     F .text.itcm	00000088 __register_exitproc
00004d08 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000024d0 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000b6b0 g     F .text.itcm	0000008a strncmp
00003da8 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00002914 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00008fc4 g     F .text.itcm	00000070 usb_serial_flush_input
20008c90 g     O .data	00000004 fsamp
0000cc6c g     F .text.itcm	0000015c __multiply
000015fc g     F .text.itcm	0000001c getDataCount()
00009054 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000b73c g     F .text.itcm	00000064 strncpy
20026abc g     O .bss	00000028 __malloc_current_mallinfo
0000067c g     F .text.itcm	0000008c i2s_setup()
0000d238 g     F .text.itcm	000000d4 __d2b
00005740 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
00005860  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60002588 g     F .text.code	00000054 _reboot_Teensyduino_
000059fc  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001e74 g     F .text.code	00000002 startup_default_middle_hook
00000708 g     F .text.itcm	000000a4 dma_setup()
00009d34 g     F .text.itcm	00000018 realloc
00004d94 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000051b8 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
00005eb4 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
00011bac g     F .text.itcm	00000004 _strtoul_r
0000810c g     F .text.itcm	000005e0 usb_isr
0000b0ec g     F .text.itcm	0000000c __cxa_atexit
00001e80 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0000b7ac g     F .text.itcm	00000024 _close_r
00004578  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00013fb0 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00004f90 g     F .text.itcm	0000006e SharedSpiCard::readStop()
00006e58 g     F .text.itcm	00000056 FsCache::sync()
0000b4b4 g     F .text.itcm	00000060 memcmp
200008c4  w    O .data	00000028 vtable for usb_serial_class
00006df4 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000b8d0 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00006c38 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
20026fc0 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000b300 g     F .text.itcm	00000058 sscanf
000137c8 g     F .text.itcm	000000cc __swsetup_r
00009798  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00000d90 g     F .text.itcm	000000b8 headerInit(long, long, long, int)
000052c8 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
0000d370 g     F .text.itcm	0000005c __copybits
2000885c g     O .data	00000408 __malloc_av_
2002691c g     O .bss	00000004 __atexit
0000b358 g     F .text.itcm	00000022 __sread
000090e8 g     F .text.itcm	00000094 usb_serial_flush_output
00009d1c g     F .text.itcm	0000000c __malloc_lock
20009000 g     O .data	000002c0 _VectorsRam
00006e08 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000109dc g     F .text.itcm	00000054 _fflush_r
00010be0 g     F .text.itcm	00000078 _calloc_r
00000ed8 g     F .text.itcm	000000a0 makeHeader(long*)
000041a4 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20008c94 g     O .data	00000004 t_acq
200274ed g     O .bss	00000001 yield_active_check_flags
000027a4 g     F .text.itcm	0000005e ExFatFile::sync()
0000b8d4 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
200274eb g     O .bss	00000001 usb_high_speed
00005dec g     F .text.itcm	0000007c SdioCard::isBusy()
0000b60c g     F .text.itcm	000000a4 memset
00007a5c g     F .text.itcm	00000010 main
00000abc  w    F .text.itcm	00000002 SdFs::~SdFs()
20026ae8 g     O .bss	00000004 __malloc_max_total_mem
00002e08 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
0000b8cc g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200800 g     O .bss.dma	00000069 usb_descriptor_buffer
000057a8 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00002ad0 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0000b3e0 g     F .text.itcm	00000008 __sclose
00008850 g     F .text.itcm	00000058 usb_init_serialnumber
0000b0e8 g     F .text.itcm	00000004 _strtol_r
600026ac g       .text.code	00000000 __init_array_end
00010d80 g     F .text.itcm	00000cec _dtoa_r
000097bc g     F .text.itcm	00000560 _malloc_r
00005400 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
0000d430 g     F .text.itcm	0000001a __ascii_wctomb
00014028 g     F .text.itcm	0000005a .hidden __aeabi_l2d
200268b0 g     O .bss	00000004 FatVolume::m_cwv
00001b08 g     F .text.itcm	00000012 menu1()
00013750 g     F .text.itcm	00000076 __submore
20000980  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00007524 g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
000070fc g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00007944 g     F .text.itcm	00000054 micros
0000266c g     F .text.itcm	00000138 ExFatFile::syncDir()
0000bec4 g     F .text.itcm	000000a0 _malloc_trim_r
000139a8 g     F .text.itcm	00000106 _wcsnrtombs_l
600026ec g     O .text.progmem	00000004 string0
00009080 g     F .text.itcm	00000018 usb_serial_write
60001e78  w    F .text.code	00000002 startup_late_hook
00005840 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
000088ac  w    F .text.itcm	00000004 usb_serial_class::available()
0000b8e8 g     F .text.itcm	000002dc strcmp
00003be8 g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000300 endpoint_queue_head
600026b4  w    O .text.progmem	00000020 usb_string_product_name
0000789c g     F .text.itcm	000000a8 delay
000140b8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
200274c6 g     O .bss	00000002 dma_channel_allocated_mask
00014120 g     F .fini	00000000 _fini
00004e84 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
2002749c g     O .bss	00000004 t_off
0000b2c0 g     F .text.itcm	00000040 sprintf
00007374 g     F .text.itcm	0000001c Print::printf(char const*, ...)
00007324 g     F .text.itcm	00000016 Print::print(long)
00003478 g     F .text.itcm	0000001e FatFile::close()
00007e5c g     F .text.itcm	00000004 Panic_Temp_isr
00014084 g     F .text.itcm	00000030 .hidden __fixdfdi
00000578 g     F .text.itcm	00000104 setAudioFrequency(int)
00001618 g     F .text.itcm	0000000c queue_isBusy()
20026fc4 g     O .bss	000004cc sd
00003498 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
00013ab0 g     F .text.itcm	00000024 _wcsnrtombs_r
000059f8  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000b90  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
0000b84c g     F .text.itcm	0000002c _write_r
00011f80 g     F .text.itcm	00000028 iswspace_l
0000615c g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
00000c74 g     F .text.itcm	000000d8 filing_init()
0000be30 g     F .text.itcm	0000000c nanf
20008c78 g     O .data	00000004 _impure_ptr
00002020 g     F .text.itcm	0000002c ExFatFile::peek()
000108ac g     F .text.itcm	00000130 __sflush_r
20000824  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
00011ec0 g     F .text.itcm	00000054 _mbrtowc_r
00004cc4 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
0000b278 g     F .text.itcm	00000046 _fwalk_sglue
00005988 g     F .text.itcm	0000000c SdioCard::errorCode() const
000037f4 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000c08  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
600026a0 g       .text.code	00000000 __preinit_array_end
60001710 g     F .text.code	00000704 CrashReportClass::printTo(Print&) const
00000ac0 g     F .text.itcm	00000080 dateTime(unsigned short*, unsigned short*, unsigned char*)
00000ff4 g     F .text.itcm	00000094 newFileName(char*)
00000b40  w    F .text.itcm	00000018 FsFile::~FsFile()
00002fc0 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000c990 g     F .text.itcm	0000002a __ascii_mbtowc
0000d110 g     F .text.itcm	00000064 __ulp
000080e0 g     F .text.itcm	0000002c usb_stop_sof_interrupts
00000330 g     F .text.itcm	00000184 setup
20008504 g     O .data	00000078 usb_descriptor_list
00005e68 g     F .text.itcm	00000020 SdioCard::status()
0000be20 g     F .text.itcm	00000010 nan
00003840 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00003804 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20026878 g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
00004bdc g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
00007200 g     F .text.itcm	00000034 DMAChannel::release()
00009098 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00010ab8 g     F .text.itcm	00000064 stpncpy
20008c6c g     O .data	0000000c __sglue
00008d88 g     F .text.itcm	00000100 usb_serial_configure
00007358  w    F .text.itcm	0000001c _write
200092c0 g       .data	00000000 _edata
000030c0 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
200274df g     O .bss	00000001 external_psram_size
000059f8  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00006f00 g     F .text.itcm	0000004c FsName::get16()
00004d78  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000538c g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00005018 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00002d9c g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00003400 g     F .text.itcm	00000078 FatFile::addDirCluster()
00013894 g     F .text.itcm	000000aa __fputwc
000088b4  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
000007ac g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
00007ba4 g     F .text.itcm	00000062 ultoa
00004b2c g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
0000b380 g     F .text.itcm	0000003e __swrite
00007234 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20008c68 g     O .data	00000004 __malloc_trim_threshold
00007520  w    F .text.itcm	00000004 usb_serial_class::peek()
00005864  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000199c g     F .text.itcm	0000002e rtcSetDate(int, int, int)
00012140 g     F .text.itcm	00000028 fiprintf
00012450 g     F .text.itcm	00000f8c _vfiprintf_r
000019cc g     F .text.itcm	0000002e rtcSetTime(int, int, int)
00006c3c  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000cfbc g     F .text.itcm	00000154 __mdiff
000016a8 g     F .text.itcm	0000006c pullData(unsigned long*)
000059e8 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00002ff8 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
200085a0 g     O .data	00000120 _impure_data
00002138 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00000e48 g     F .text.itcm	00000090 writeHeader(char*)
000120dc g     F .text.itcm	00000064 _jp2uc_l
00001cb4 g     F .text.itcm	000000b8 menu3()
0000b26c g     F .text.itcm	0000000c __sfp_lock_release
20026ed0 g     O .bss	00000004 mtp_txEventCount
00000d4c g     F .text.itcm	00000044 timeStamp()
00005f88 g     F .text.itcm	000000b8 SdioCard::writeStop()
00010a30 g     F .text.itcm	00000088 __sccl
00001da8 g     F .text.itcm	00000014 ExFatFile::close()
20000bac g     O .data	00000101 _ctype_
00007e34  w    F .text.itcm	00000004 _read
600026a0 g       .text.code	00000000 __init_array_start
00009798  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001e14 g     F .text.code	0000005c CrashReportClass::operator bool()
200086c4 g     O .data	00000004 F_BUS_ACTUAL
20026e2c g     O .bss	00000004 disk_count
00001714 g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
00004a00 g     F .text.itcm	00000050 FatVolume::chdir(char const*)
00001888 g     F .text.itcm	000000f8 date2time(datetime_t*)
00013b34 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000714c g     F .text.itcm	000000b4 DMAChannel::begin(bool)
00004d7c  w    F .text.itcm	00000006 SharedSpiCard::end()
0000bd40 g     F .text.itcm	000000dc strlen
20026f58 g     O .bss	00000004 ready
00003a54 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0000c214 g     F .text.itcm	00000594 __gethex
600026b4 g     O .text.progmem	00000020 usb_string_product_name_default
0000b434 g     F .text.itcm	0000001c vdprintf
00005a28 g     F .text.itcm	00000068 SdioCard::sectorCount()
60001e74  w    F .text.code	00000002 startup_middle_hook
20000910 g     O .data	00000070 vtable for SdioCard
00013fd4 g     F .text.itcm	00000042 .hidden __aeabi_f2d
60001e80 g     F .text.code	00000110 configure_cache
0000585c  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
000055e8  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
00000f78 g     F .text.itcm	0000007c newDirectory(char*)
00006898 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00001b1c g     F .text.itcm	00000198 menu2()
00006d4c g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000007f8 g     F .text.itcm	000002c0 compress(void*)
00013d14 g     F .text.itcm	0000027a .hidden __subdf3
600026a0 g       .text.code	00000000 __preinit_array_start
0000880c g     F .text.itcm	0000001c usb_receive
00002ec8 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
0000cbb0 g     F .text.itcm	00000060 __lo0bits
00002f74 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
20008c9c g     O .data	00000004 tempDatai
00003b04 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00020800 g       *ABS*	00000000 _flashimagelen
00005000 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
00009494 g     F .text.itcm	0000000a __aeabi_atexit
00000b40  w    F .text.itcm	00000018 FsFile::~FsFile()
00007c08 g     F .text.itcm	00000024 rtc_get
00010b28 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
00007278 g     F .text.itcm	00000004 pendablesrvreq_isr
00000ab8  w    F .text.itcm	00000004 Print::availableForWrite()
200086f0 g     O .data	0000016c __global_locale
000064c4 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
00008e88 g     F .text.itcm	000000e0 usb_serial_read
20026ab8 g     O .bss	00000001 __lock___sfp_recursive_mutex
00007390 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00008750 g     F .text.itcm	00000064 usb_config_tx
00007e38  w    F .text.itcm	00000006 _close
00004860 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
000097ac g     F .text.itcm	00000010 free
00002d50 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0000ca1c g     F .text.itcm	000000a4 __multadd
0000ca08 g     F .text.itcm	00000012 _Bfree
20008ca0  w    O .data	00000016 usb_string_serial_number
00006a34 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
000059c4 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)



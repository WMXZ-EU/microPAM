
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\B6A2B96C86D1458F5F30CD00E995713A/microPAM_V2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002674 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00013e20 l    d  .fini	00000000 .fini
00013e24 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200092c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001f95c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001fc ResetHandler2
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
2001f0e8 l     O .bss	00000004 s_hotCount
2001f0ec l     O .bss	00000004 s_hotTemp
2001f0f0 l     O .bss	00000004 s_hot_ROOM
2001f0f4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00007e94 l     F .text.itcm	00000088 schedule_transfer
00007f1c l     F .text.itcm	00000036 run_callbacks
00007f54 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2001e78c l     O .bss	00000008 endpoint0_buffer
2001e794 l     O .bss	00000004 endpoint0_notify_mask
2000c480 l     O .bss	00000008 endpoint0_setupdata
2001e798 l     O .bss	00000004 endpointN_notify_mask
2001f0b0 l     O .bss	00000008 reply_buffer
2001f60e l     O .bss	00000001 sof_usage
2001f615 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2001f60a l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2001f02c l     O .bss	00000000 object.0
60002660 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 mAcq.cpp
00000460 l     F .text.itcm	000000e4 acq_isr()
000007ac l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
2001db44 l     O .bss	00000008 dma
00000000 l    df *ABS*	00000000 mFiling.cpp
00000ba8 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
2000c93c l     O .bss	00001000 diskBuffer
000010f8 l     F .text.itcm	0000008c _GLOBAL__sub_I_t_acq
2000d93c l     O .bss	00000200 fileHeader
2001dd74 l     O .bss	00000050 dirName
2001dfc4 l     O .bss	00000050 fileName
2001e25c l     O .bss	00000004 checkEndOfFile(short)::tx_
2001e268 l     O .bss	00000004 newHour(int)::ho
00000000 l    df *ABS*	00000000 SPI.cpp
00006b98 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00006e2c l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00007060 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
20008cfc l     O .data	00000012 device_descriptor
20008d14 l     O .data	00000028 microsoft_os_compatible_id_desc
20008d3c l     O .data	00000012 microsoft_os_string_desc
60002864 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 microPAM_V2.ino.cpp
2001e260 l     O .bss	00000004 loop::t0
2001f5f4 l     O .bss	00000002 loop::mxb
2001f5f6 l     O .bss	00000002 loop::status
2001f5f8 l     O .bss	00000002 loop::monitor
2001e264 l     O .bss	00000004 loop::loopCount
00000000 l    df *ABS*	00000000 mCompress.cpp
2001db4c l     O .bss	00000200 dout
2001ddc4 l     O .bss	00000200 outData
2001e014 l     O .bss	00000200 tempData
2001e26c l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 mQueue.cpp
2000db40 l     O .bss	00010000 data_buffer
00000000 l    df *ABS*	00000000 mRTC.cpp
2000070c l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 menu.cpp
00001568 l     F .text.itcm	00000054 menuGetInt16(short*) [clone .isra.0]
000015bc l     F .text.itcm	00000064 menuGet3Int(int*, int*, int*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00002e1c l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
000040c0 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
000041bc l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
00005370 l     F .text.itcm	00000030 sdIrs()
000053a0 l     F .text.itcm	00000014 isBusyDat()
000053b4 l     F .text.itcm	0000000c isBusyDMA()
000053c0 l     F .text.itcm	000000cc setSdclk(unsigned long)
00005594 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
000056d0 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
00005768 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
00005864 l     F .text.itcm	0000002c isBusyCMD13()
00005a1c l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
00005c34 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2001f602 l     O .bss	00000001 m_initDone
2000db3c l     O .bss	00000004 m_sdClkKhz
2001f603 l     O .bss	00000001 m_version2
2001db40 l     O .bss	00000004 m_errorLine
2001f604 l     O .bss	00000001 m_highCapacity
2001f605 l     O .bss	00000001 m_transferActive
2001dd4c l     O .bss	00000010 m_cid
2001dd5c l     O .bss	00000010 m_csd
2001dd6c l     O .bss	00000004 m_ocr
2001dd70 l     O .bss	00000004 m_rca
2001e214 l     O .bss	00000004 m_busyFcn
2001f606 l     O .bss	00000001 m_dmaBusy
2001e218 l     O .bss	00000004 m_irqstat
20008d76 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20000500 l     O .data	0000012c lookupTable
20000638 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00007280 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
000087f8 l     F .text.itcm	00000060 rx_queue_transfer
20009300 l     O .bss	00001000 rx_buffer
00008858 l     F .text.itcm	000000b4 rx_event
0000890c l     F .text.itcm	00000090 usb_serial_flush_callback
2000a480 l     O .bss	00002000 txbuffer
0000899c l     F .text.itcm	000001b8 usb_serial_write.part.0
2001f0b8 l     O .bss	00000004 rx_available
2001f0bc l     O .bss	00000010 rx_count
2001f60c l     O .bss	00000001 rx_head
2001f0cc l     O .bss	00000010 rx_index
2001f0dc l     O .bss	00000009 rx_list
2001f5fc l     O .bss	00000002 rx_packet_size
2001f60d l     O .bss	00000001 rx_tail
2000a300 l     O .bss	00000100 rx_transfer
2001f60f l     O .bss	00000001 transmit_previous_timeout
2001f5fe l     O .bss	00000002 tx_available
2001f610 l     O .bss	00000001 tx_head
2001f611 l     O .bss	00000001 tx_noautoflush
2001f600 l     O .bss	00000002 tx_packet_size
2000a400 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2001f609 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
0000ad7c l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000aed0 l     F .text.itcm	00000018 stdio_exit_handler
0000aee8 l     F .text.itcm	00000040 cleanup_stdio
0000af28 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
0000be70 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00010958 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
0001176c l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
000118b0 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00011a20 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
00011ca8 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
000120d8 l     F .text.itcm	00000076 __sprint_r.part.0
000130dc l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00013df8 l     F .text.itcm	00000008 ___init_veneer
00013e00 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00013e08 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
00013e10 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
60002600 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002608 l     F .text.code	00000008 __sm_set_pool_veneer
60002610 l     F .text.code	00000008 ____libc_init_array_veneer
60002618 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002620 l     F .text.code	00000008 __delay_veneer
60002628 l     F .text.code	00000008 __main_veneer
60002630 l     F .text.code	00000008 __set_arm_clock_veneer
60002638 l     F .text.code	00000008 __memset_veneer
60002640 l     F .text.code	00000008 __pwm_init_veneer
60002648 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002650 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002658 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
00006ac8 g     F .text.itcm	000000b8 toUpcase(unsigned short)
000011a0 g     F .text.itcm	00000078 pushData(unsigned long*)
00008d68 g     F .text.itcm	00000018 usb_serial_available
0000d0cc g     F .text.itcm	00000062 __any_on
000139e8 g     F .text.itcm	00000024 _isatty_r
60001e50 g     F .text.code	00000002 startup_default_late_hook
0000b5a8 g     F .text.itcm	0000002c _lseek_r
00005d90 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
00008f38  w    F .text.itcm	000000f0 yield
00004888  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
2001f04c g     O .bss	00000060 proc_stat
2001f5f0 g     O .bss	00000004 usb_timer1_callback
000036f8 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
60002780 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20008d72 g     O .data	00000002 proc
60001f50 g     F .text.code	00000384 configure_external_ram
00004808  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
2000c6bc g     O .bss	00000140 Wire1
00004014  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00013d28 g     F .text.itcm	0000005a .hidden __floatdidf
00003a8c g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
2001f044 g     O .bss	00000004 procCount
000043e0 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
60002764  w    O .text.progmem	00000001 _serialEventUSB2_default
2001e21c g     O .bss	00000004 FsDateTime::callback
2001e404 g     O .bss	00000001 __lock___atexit_recursive_mutex
00011c14 g     F .text.itcm	0000004c _wcrtomb_r
00003bf4 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
00004f6c g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
00007318 g     F .text.itcm	0000001c Print::println()
00006f90 g     F .text.itcm	000000ac TwoWire::isr()
200008ac g     O .data	00000070 vtable for DedicatedSpiCard
2001f048 g     O .bss	00000004 procMiss
0000b198 g     F .text.itcm	00000020 __sseek
0000affc g     F .text.itcm	0000003c __sinit
00001b50 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
0001390c g     F .text.itcm	000000b0 __swbuf_r
00009b00 g     F .text.itcm	0000000c __malloc_unlock
2001e254 g     O .bss	00000004 FsVolume::m_cwv
000031f4 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
2000c578 g     O .bss	00000004 SerNum
000047fc  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
6000259c g     F .text.code	00000054 analog_init
0000ad70 g     F .text.itcm	0000000c _strtod_r
0000b1c0 g     F .text.itcm	0000004a _vdprintf_r
00004c44 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
00001048 g     F .text.itcm	000000b0 saveData(short)
20008d74 g     O .data	00000002 shift
20008750 g     O .data	00000004 F_CPU_ACTUAL
00012024 g     F .text.itcm	000000b4 _sfread_r
0000b2ec g     F .text.itcm	000000f8 memmove
2001f028 g     O .bss	00000004 max_stat
00006450 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0000c6bc g     F .text.itcm	0000004c _Balloc
00013e2c g       .ARM.exidx	00000000 __exidx_end
00004388 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
2001f607 g     O .bss	00000001 EventResponder::runningFromYield
0000689c g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
000046e4 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00007e34 g     F .text.itcm	00000060 tempmonGetTemp
20008764 g     O .data	00000004 __atexit_recursive_mutex
0000b650 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
00006db0  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
2001e22c g     O .bss	00000004 EventResponder::firstInterrupt
00008784 g     F .text.itcm	00000004 usb_transfer_status
000091e8 g     F .text.itcm	00000084 sm_set_pool
2001e57c g     O .bss	00000004 __stdio_exit_handler
00002da4 g     F .text.itcm	00000018 ExFatPartition::rootLength()
00013d84 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
000087f0  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
000139bc g     F .text.itcm	0000002c _fstat_r
20007834 g     O .data	00000370 digital_pin_to_info_PGM
2001e79c g     O .bss	00000004 errno
000068b4 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
600026c4 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00002b80 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
0000b154 g     F .text.itcm	00000004 __seofread
00013e28 g       .text.itcm	00000000 _etext
00006cd4 g     F .text.itcm	000000dc _spi_dma_rxISR0()
00003f40 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200092c0 g       .bss	00000000 _sbss
00005498 g     F .text.itcm	0000000c SdioCard::errorData() const
2001f5dc g     O .bss	00000004 tempData0
00006628 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
00002cc4 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
60002870 g       *ABS*	00000000 _stextload
00000068 g     F .text.itcm	00000260 loop
00009028 g     F .text.itcm	0000007a flexpwm_init
60001e54 g     F .text.code	00000004 startup_debug_reset
00008648 g     F .text.itcm	00000064 usb_config_rx
2001e780 g     O .bss	00000004 acqbias
000018e8 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
00006280 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
2001e228 g     O .bss	00000004 EventResponder::lastInterrupt
00004608 g     F .text.itcm	00000028 FsBaseFile::close()
00006de4 g     F .text.itcm	00000048 SPIClass::end()
00007a4c g     F .text.itcm	00000134 memcpy
0000c4e0 g     F .text.itcm	000001b0 __hexnan
000048fc g     F .text.itcm	0000008c SharedSpiCard::writeStop()
200092c0 g     O .data	00000000 .hidden __TMC_END__
00002c04 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
000034ec g     F .text.itcm	00000028 FatFile::peek()
0000d150 g     F .text.itcm	00001b44 _svfprintf_r
00013cb0 g     F .text.itcm	00000022 .hidden __floatsidf
2001f5cc g     O .bss	00000004 systick_millis_count
000002c8 g     F .text.itcm	0000003c setup1()
00009278 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
2001f613 g     O .bss	00000001 usb_configuration
000047f0  w    F .text.itcm	00000006 SdCardInterface::status()
0000919c g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
000064e8 g     F .text.itcm	00000030 SdioCard::syncDevice()
0000561c g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00000b00  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00003514 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
0000d00c g     F .text.itcm	00000062 __ratio
00004d30 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
60002780  w    O .text.progmem	00000018 usb_string_manufacturer_name
00009574 g     F .text.itcm	00000010 malloc
60002674 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
20000944  w    O .data	00000024 vtable for FsFile
00007e14  w    F .text.itcm	0000000a _fstat
00011c78 g     F .text.itcm	00000006 iswspace
2001e580 g     O .bss	00000200 acqBuffer
00006e80  w    F .text.itcm	0000001e TwoWire::read()
000108a0 g     F .text.itcm	00000040 __assert_func
00006b80  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
200002a8 g     O .data	000000c8 __mprec_tens
60002460 g     F .text.code	000000e8 usb_init
00004554 g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
000047f8  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
2001e440 g     O .bss	00000004 __malloc_top_pad
2000c4d8 g     O .bss	00000050 SPI1
00007c0c g     F .text.itcm	00000048 rtc_set
00011fe8 g     F .text.itcm	0000003a __ssrefill_r
2001f5d0 g     O .bss	00000004 systick_safe_read
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
000024f0 g     F .text.itcm	000000e4 ExFatFile::truncate()
2000876c g     O .data	00000000 .hidden __dso_handle
00013c90 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001081c g     F .text.itcm	00000008 _localeconv_r
00011bbc g     F .text.itcm	00000004 _strtoull_r
00006844 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
0001315c g     F .text.itcm	000002f4 __sfvwrite_r
0000c910 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
20008d54 g     O .data	00000004 t_on
60002800 g     O .text.progmem	00000062 usb_config_descriptor_480
000092a8 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00013a0c g     F .text.itcm	00000000 .hidden __aeabi_drsub
2001e784 g     O .bss	00000004 busy
00006894 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00002ed0 g     F .text.itcm	00000034 FatFile::addCluster()
0000b600 g     F .text.itcm	00000024 _sbrk_r
00005510 g     F .text.itcm	0000001c SdioCard::type() const
60001e48 g     F .text.code	00000002 startup_default_early_hook
60001624 g     F .text.code	00000030 ResetHandler
00008df0 g     F .text.itcm	00000020 usb_serial_getchar
2001f5e0 g     O .bss	00000008 usb_cdc_line_coding
00007978 g     F .text.itcm	00000054 digitalWrite
2001e230 g     O .bss	00000004 EventResponder::lastYield
000018c0 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
0000b5d4 g     F .text.itcm	0000002c _read_r
00000ab0  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
0000487c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
000104e4 g     F .text.itcm	000000c6 _fclose_r
2001e7a0 g     O .bss	00000010 extmem_smalloc_pool
2001e438 g     O .bss	00000004 __malloc_max_sbrked_mem
00004e34 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
000079cc g     F .text.itcm	00000070 pinMode
00007398 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
00013cd4 g     F .text.itcm	00000042 .hidden __extendsfdf2
0000ec94 g     F .text.itcm	00001850 __ssvfscanf_r
60002765  w    O .text.progmem	00000001 _serialEventUSB1_default
00013a18 g     F .text.itcm	00000276 .hidden __adddf3
2000c7fc g     O .bss	00000140 Wire2
6001fc00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000ce74 g     F .text.itcm	000000c2 __b2d
00013e24 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00000544  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
00007e20  w    F .text.itcm	00000004 _isatty
2001e224 g     O .bss	00000004 EventResponder::firstYield
00006a30 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000b74  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00009b24 g     F .text.itcm	000003d8 _realloc_r
0000b65c g     F .text.itcm	00000048 __libc_init_array
00006e74  w    F .text.itcm	0000000c TwoWire::available()
000020cc g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
000054a4 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20000ac4 g     O .data	00000100 __hexdig
00002308 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00013640 g     F .text.itcm	00000066 _fputwc_r
00006db0  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
20000280 g     O .data	00000028 __mprec_bigtens
0000c7c0 g     F .text.itcm	000000b0 __s2b
00005164  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
00007e2c  w    F .text.itcm	00000004 abort
000087e0  w    F .text.itcm	00000004 usb_serial_class::clear()
00013c90 g     F .text.itcm	0000001e .hidden __floatunsidf
00007dd4  w    F .text.itcm	00000034 _sbrk
6001669c g       *ABS*	00000000 _sdataload
0000cc78 g     F .text.itcm	00000042 __mcmp
20008768 g     O .data	00000004 __brkval
2001f612 g     O .bss	00000001 usb_cdc_line_rtsdtr
600025f0 g     F .text.code	00000000 _init
00008b54 g     F .text.itcm	00000002 usb_serial_reset
2000072c g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
00013db8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
6000279c g     O .text.progmem	00000062 usb_config_descriptor_12
20000968 g     O .data	00000024 vtable for TwoWire
00009f00 g     F .text.itcm	00000e70 _strtod_l
0000c4a8 g     F .text.itcm	00000036 __match
2001f640 g       .bss	00000000 _ebss
00005e18 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00000b4c  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
000014ec g     F .text.itcm	00000004 rtc_setup(unsigned char, unsigned char)
0000c870 g     F .text.itcm	00000040 __hi0bits
00001870 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60001d9c g     F .text.code	00000050 CrashReportClass::clear()
00007048 g     F .text.itcm	0000000c lpi2c3_isr()
000023b8 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20200080 g       .bss.dma	00000000 _heap_start
2001e408 g     O .bss	00000001 __lock___malloc_recursive_mutex
00002dbc g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
60002714 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00000544  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
2001e444 g     O .bss	00000138 __sf
20008748 g     O .data	00000004 CrashReport
00004b5c g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00000003 g       *ABS*	00000000 _itcm_block_count
2001f5d8 g     O .bss	00000004 tail
200092e0 g     O .bss	00000020 endpoint0_transfer_data
00004050 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
00006994 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
00007b80 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
000090a4 g     F .text.itcm	000000f4 pwm_init
00013a18 g     F .text.itcm	00000276 .hidden __aeabi_dadd
2001e7b0 g     O .bss	00000050 file
00006f24  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
60020800 g       .text.csf	00000000 __text_csf_end
600022d4 g     F .text.code	0000005c usb_pll_start
0000cac8 g     F .text.itcm	000000c0 __pow5mult
200008a0 g     O .data	0000000c vtable for CrashReportClass
00013d18 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
00007054 g     F .text.itcm	0000000c lpi2c4_isr()
000042c8 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
2001e800 g     O .bss	00000004 haveStore
00006f24  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000536c  w    F .text.itcm	00000002 SdioCard::end()
200092c0 g     O .bss	00000020 endpoint0_transfer_ack
2001f5e8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
2001e808 g     O .bss	00000800 i2s_buffer
00008740 g     F .text.itcm	00000028 usb_transmit
00007258 g     F .text.itcm	00000020 systick_isr
0000b6b0 g     F .text.itcm	00000002 __retarget_lock_release_recursive
000014f0 g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
20008754 g     O .data	00000010 Serial
2001f008 g     O .bss	00000020 logBuffer
2001e804 g     O .bss	00000004 head
00007278  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001e48  w    F .text.code	00000002 startup_early_hook
000020dc g     F .text.itcm	00000092 ExFatFile::addCluster()
00004a08 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
00008d24 g     F .text.itcm	00000044 usb_serial_peekchar
0000b038 g     F .text.itcm	0000000c __sfp_lock_acquire
0000b9a0 g     F .text.itcm	00000000 memchr
0000758c g     F .text.itcm	000002f0 set_arm_clock
2001f5c8 g     O .bss	00000004 systick_cycle_count
20008d5c g     O .data	00000016 usb_string_serial_number_default
0000bc64 g     F .text.itcm	0000020c _free_r
00004fd4 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
000137d4 g     F .text.itcm	00000060 category
000051dc g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
00005964 g     F .text.itcm	000000b8 SdioCard::readStop()
00004800  w    F .text.itcm	00000004 SharedSpiCard::type() const
0000b578 g     F .text.itcm	0000000c __locale_mb_cur_max
00011c60 g     F .text.itcm	00000016 _wcsrtombs_r
2001e274 g     O .bss	00000190 __atexit0
000087e8  w    F .text.itcm	00000004 usb_serial_class::flush()
00011f68 g     F .text.itcm	00000080 _sungetc_r
00013a14 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20008ce4 g     O .data	00000004 __malloc_sbrk_base
000074fc  w    F .text.itcm	00000004 usb_serial_class::read()
00011a1c g     F .text.itcm	00000004 _strtoll_r
00013d18 g     F .text.itcm	0000006a .hidden __floatundidf
00007e24  w    F .text.itcm	00000006 _lseek
0000cb88 g     F .text.itcm	000000f0 __lshift
00003108 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00000dd4 g     F .text.itcm	00000274 storeData(short)
00008710 g     F .text.itcm	00000030 usb_prepare_transfer
00004804  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
00007c54 g     F .text.itcm	00000180 unused_interrupt_vector
00011e68 g     F .text.itcm	00000100 __ssprint_r
2001f5ec g     O .bss	00000004 usb_timer0_callback
60002330 g     F .text.code	00000130 tempmon_init
00003968 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00000a94  w    F .text.itcm	00000002 SdFs::~SdFs()
0000b228 g     F .text.itcm	00000062 _vasnprintf_r
00009198  w    F .text.itcm	00000002 serialEvent()
0000bb3c g     F .text.itcm	00000088 __register_exitproc
0000480c g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00001fd4 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000b488 g     F .text.itcm	0000008a strncmp
000038ac g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00002418 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00008d80 g     F .text.itcm	00000070 usb_serial_flush_input
20008d10 g     O .data	00000004 fsamp
0000c96c g     F .text.itcm	0000015c __multiply
00001184 g     F .text.itcm	0000001c getDataCount()
00008e10 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000b514 g     F .text.itcm	00000064 strncpy
2001e410 g     O .bss	00000028 __malloc_current_mallinfo
00000654 g     F .text.itcm	0000008c i2s_setup()
2000080c g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
0000cf38 g     F .text.itcm	000000d4 __d2b
00005244 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
2001e234 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00005364  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60002548 g     F .text.code	00000054 _reboot_Teensyduino_
00005500  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001e4c g     F .text.code	00000002 startup_default_middle_hook
000006e0 g     F .text.itcm	000000a4 dma_setup()
00009b0c g     F .text.itcm	00000018 realloc
00004898 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00004cbc g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
00005890 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
000118ac g     F .text.itcm	00000004 _strtoul_r
00008018 g     F .text.itcm	00000630 usb_isr
0000aec4 g     F .text.itcm	0000000c __cxa_atexit
00001984 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0000b584 g     F .text.itcm	00000024 _close_r
0000407c  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00013cb0 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00004a94 g     F .text.itcm	0000006e SharedSpiCard::readStop()
0000693c g     F .text.itcm	00000056 FsCache::sync()
2000c488 g     O .bss	00000050 SPI
0000b28c g     F .text.itcm	00000060 memcmp
2000091c  w    O .data	00000028 vtable for usb_serial_class
000068d8 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000b6a8 g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000671c g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
2001f0f8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000b0d8 g     F .text.itcm	00000058 sscanf
2000c528 g     O .bss	00000050 SPI2
000134c8 g     F .text.itcm	000000cc __swsetup_r
00009570  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00004dcc g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
0000d070 g     F .text.itcm	0000005c __copybits
200088dc g     O .data	00000408 __malloc_av_
2001e270 g     O .bss	00000004 __atexit
0000b130 g     F .text.itcm	00000022 __sread
00008ea4 g     F .text.itcm	00000094 usb_serial_flush_output
00009af4 g     F .text.itcm	0000000c __malloc_lock
20009000 g     O .data	000002c0 _VectorsRam
000068ec g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000106dc g     F .text.itcm	00000054 _fflush_r
000108e0 g     F .text.itcm	00000078 _calloc_r
00000c7c g     F .text.itcm	00000090 makeHeader(long*)
00003ca8 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20008d50 g     O .data	00000004 t_acq
20008d77 g     O .data	00000001 yield_active_check_flags
000022a8 g     F .text.itcm	0000005e ExFatFile::sync()
0000b6ac g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2001f614 g     O .bss	00000001 usb_high_speed
000057c8 g     F .text.itcm	0000007c SdioCard::isBusy()
0000b3e4 g     F .text.itcm	000000a4 memset
00007a3c g     F .text.itcm	00000010 main
00000a94  w    F .text.itcm	00000002 SdFs::~SdFs()
2001e43c g     O .bss	00000004 __malloc_max_total_mem
0000290c g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
0000b6a4 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
000052ac g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
000025d4 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0000b1b8 g     F .text.itcm	00000008 __sclose
00008788 g     F .text.itcm	00000058 usb_init_serialnumber
0000aec0 g     F .text.itcm	00000004 _strtol_r
60002674 g       .text.code	00000000 __init_array_end
00010a80 g     F .text.itcm	00000cec _dtoa_r
00009594 g     F .text.itcm	00000560 _malloc_r
00004f04 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
2001f608 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
0000d130 g     F .text.itcm	0000001a __ascii_wctomb
00013d28 g     F .text.itcm	0000005a .hidden __aeabi_l2d
2001e258 g     O .bss	00000004 FatVolume::m_cwv
00001620 g     F .text.itcm	00000012 menu1()
00013450 g     F .text.itcm	00000076 __submore
200009fc  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000718c g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
00007504 g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
00006ddc g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00007924 g     F .text.itcm	00000054 micros
00002170 g     F .text.itcm	00000138 ExFatFile::syncDir()
0000bbc4 g     F .text.itcm	000000a0 _malloc_trim_r
000136a8 g     F .text.itcm	00000106 _wcsnrtombs_l
60002798 g     O .text.progmem	00000004 string0
00008e3c g     F .text.itcm	00000018 usb_serial_write
60001e50  w    F .text.code	00000002 startup_late_hook
00005344 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
000087e4  w    F .text.itcm	00000004 usb_serial_class::available()
0000b6c8 g     F .text.itcm	000002dc strcmp
60002766  w    O .text.progmem	00000001 _serialEvent_default
000036ec g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000280 endpoint_queue_head
60002768  w    O .text.progmem	00000016 usb_string_product_name
0000787c g     F .text.itcm	000000a8 delay
00013db8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
2001f5fa g     O .bss	00000002 dma_channel_allocated_mask
00013e20 g     F .fini	00000000 _fini
00006ebc g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00004988 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
2001f5d4 g     O .bss	00000004 t_off
0000b098 g     F .text.itcm	00000040 sprintf
00007350 g     F .text.itcm	0000001c Print::printf(char const*, ...)
00007300 g     F .text.itcm	00000016 Print::print(long)
00002f7c g     F .text.itcm	0000001e FatFile::close()
00007e30 g     F .text.itcm	00000004 Panic_Temp_isr
00013d84 g     F .text.itcm	00000030 .hidden __fixdfdi
00000550 g     F .text.itcm	00000104 setAudioFrequency(int)
2001f0fc g     O .bss	000004cc sd
00002f9c g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
000137b0 g     F .text.itcm	00000024 _wcsnrtombs_r
000054fc  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000ae8  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
0000b624 g     F .text.itcm	0000002c _write_r
00011c80 g     F .text.itcm	00000028 iswspace_l
00005b38 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
00000bcc g     F .text.itcm	000000b0 filing_init()
0000bb30 g     F .text.itcm	0000000c nanf
20008cf8 g     O .data	00000004 _impure_ptr
00001b24 g     F .text.itcm	0000002c ExFatFile::peek()
000105ac g     F .text.itcm	00000130 __sflush_r
2000087c  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
00011bc0 g     F .text.itcm	00000054 _mbrtowc_r
2000c57c g     O .bss	00000140 Wire
000047c8 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
0000b050 g     F .text.itcm	00000046 _fwalk_sglue
0000548c g     F .text.itcm	0000000c SdioCard::errorCode() const
000032f8 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000b60  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002660 g       .text.code	00000000 __preinit_array_end
60001654 g     F .text.code	00000748 CrashReportClass::printTo(Print&) const
00000d7c g     F .text.itcm	00000058 newFileName(char*)
00000a98  w    F .text.itcm	00000018 FsFile::~FsFile()
00002ac4 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000c690 g     F .text.itcm	0000002a __ascii_mbtowc
0000ce10 g     F .text.itcm	00000064 __ulp
00007fec g     F .text.itcm	0000002c usb_stop_sof_interrupts
00006ea0  w    F .text.itcm	00000018 TwoWire::peek()
00006eb8  w    F .text.itcm	00000002 TwoWire::flush()
00000304 g     F .text.itcm	0000015c setup
20008584 g     O .data	00000084 usb_descriptor_list
00005844 g     F .text.itcm	00000020 SdioCard::status()
0000bb20 g     F .text.itcm	00000010 nan
00003344 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00003308 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
2001e220 g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
000046e0 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
00007158 g     F .text.itcm	00000034 DMAChannel::release()
00008e54 g     F .text.itcm	00000050 usb_serial_write_buffer_free
000107b8 g     F .text.itcm	00000064 stpncpy
20008cec g     O .data	0000000c __sglue
00008b58 g     F .text.itcm	000000ec usb_serial_configure
00006ee8 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00007334  w    F .text.itcm	0000001c _write
200092c0 g       .data	00000000 _edata
00002bc4 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
2001f60b g     O .bss	00000001 external_psram_size
000054fc  w    F .text.itcm	00000002 SdioCard::~SdioCard()
000069e4 g     F .text.itcm	0000004c FsName::get16()
0000487c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00004e90 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00004b1c g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
000028a0 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00002f04 g     F .text.itcm	00000078 FatFile::addDirCluster()
00013594 g     F .text.itcm	000000aa __fputwc
000087ec  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
0000703c g     F .text.itcm	0000000c lpi2c1_isr()
00000784 g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
00007b84 g     F .text.itcm	00000062 ultoa
00004630 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
0000b158 g     F .text.itcm	0000003e __swrite
00007210 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20008ce8 g     O .data	00000004 __malloc_trim_threshold
00007500  w    F .text.itcm	00000004 usb_serial_class::peek()
00005368  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00001508 g     F .text.itcm	0000002e rtcSetDate(int, int, int)
00011e40 g     F .text.itcm	00000028 fiprintf
00012150 g     F .text.itcm	00000f8c _vfiprintf_r
00001538 g     F .text.itcm	0000002e rtcSetTime(int, int, int)
00006720  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000ccbc g     F .text.itcm	00000154 __mdiff
00001218 g     F .text.itcm	00000068 pullData(unsigned long*)
000054ec g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
2000079c g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
00002afc g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00006bf8 g     F .text.itcm	000000dc _spi_dma_rxISR1()
20008628 g     O .data	00000120 _impure_data
00001c3c g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00011ddc g     F .text.itcm	00000064 _jp2uc_l
00001788 g     F .text.itcm	000000e8 menu3()
0000b044 g     F .text.itcm	0000000c __sfp_lock_release
00005964 g     F .text.itcm	000000b8 SdioCard::writeStop()
00010730 g     F .text.itcm	00000088 __sccl
000018ac g     F .text.itcm	00000014 ExFatFile::close()
20000c28 g     O .data	00000101 _ctype_
00007e08  w    F .text.itcm	00000004 _read
60002660 g       .text.code	00000000 __init_array_start
00009570  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001dec g     F .text.code	0000005c CrashReportClass::operator bool()
2000874c g     O .data	00000004 F_BUS_ACTUAL
2001e788 g     O .bss	00000004 disk_count
00001280 g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
00004504 g     F .text.itcm	00000050 FatVolume::chdir(char const*)
000013f4 g     F .text.itcm	000000f8 date2time(datetime_t*)
00013834 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
000070a4 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
00004880  w    F .text.itcm	00000006 SharedSpiCard::end()
0000ba40 g     F .text.itcm	000000dc strlen
2001f0ac g     O .bss	00000004 ready
00003558 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0000bf14 g     F .text.itcm	00000594 __gethex
60002768 g     O .text.progmem	00000016 usb_string_product_name_default
0000b20c g     F .text.itcm	0000001c vdprintf
0000552c g     F .text.itcm	00000068 SdioCard::sectorCount()
60001e4c  w    F .text.code	00000002 startup_middle_hook
2000098c g     O .data	00000070 vtable for SdioCard
00013cd4 g     F .text.itcm	00000042 .hidden __aeabi_f2d
60001e58 g     F .text.code	000000f8 configure_cache
00005360  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
000050ec  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
00000d0c g     F .text.itcm	00000070 newDirectory(char*)
0000637c g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00001634 g     F .text.itcm	00000154 menu2()
00006830 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000007d0 g     F .text.itcm	000002c0 compress(void*)
00013a14 g     F .text.itcm	0000027a .hidden __subdf3
60002660 g       .text.code	00000000 __preinit_array_start
00008768 g     F .text.itcm	0000001c usb_receive
000029cc g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
0000c8b0 g     F .text.itcm	00000060 __lo0bits
00002a78 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
20008d58 g     O .data	00000004 tempDatai
00003608 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00020800 g       *ABS*	00000000 _flashimagelen
00004b04 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
0000926c g     F .text.itcm	0000000a __aeabi_atexit
00000a98  w    F .text.itcm	00000018 FsFile::~FsFile()
00007be8 g     F .text.itcm	00000024 rtc_get
00010828 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
00007254 g     F .text.itcm	00000004 pendablesrvreq_isr
00000a90  w    F .text.itcm	00000004 Print::availableForWrite()
20008770 g     O .data	0000016c __global_locale
00005ea0 g     F .text.itcm	000003e0 SdioCard::begin(SdioConfig)
00008c44 g     F .text.itcm	000000e0 usb_serial_read
2001e40c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000736c g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
000086ac g     F .text.itcm	00000064 usb_config_tx
00007e0c  w    F .text.itcm	00000006 _close
00004364 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
00009584 g     F .text.itcm	00000010 free
00002854 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0000c71c g     F .text.itcm	000000a4 __multadd
0000c708 g     F .text.itcm	00000012 _Bfree
20008d5c  w    O .data	00000016 usb_string_serial_number
00006518 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
000054c8 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)



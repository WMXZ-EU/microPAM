
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\D7126AFB1F752B201955E1C21E4B6A68/LC_PAM.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002898 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0001b390 l    d  .fini	00000000 .fini
0001b394 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20009ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6002790c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 Hibernate.cpp
20014f1c l     O .bss	00000004 snvs_tmp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20015900 l     O .bss	00000004 s_hotCount
20015904 l     O .bss	00000004 s_hotTemp
20015908 l     O .bss	00000004 s_hot_ROOM
2001590c l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000edb4 l     F .text.itcm	000000c8 endpoint0_receive
0000ee7c l     F .text.itcm	00000088 schedule_transfer
0000ef04 l     F .text.itcm	00000036 run_callbacks
0000ef3c l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2001573c l     O .bss	00000008 endpoint0_buffer
20015744 l     O .bss	00000004 endpoint0_notify_mask
2000b200 l     O .bss	00000008 endpoint0_setupdata
20015748 l     O .bss	00000004 endpointN_notify_mask
200158ac l     O .bss	00000008 reply_buffer
20016069 l     O .bss	00000001 sof_usage
20016071 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20016062 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2001582c l     O .bss	00000000 object.0
60002888 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 LC_PAM.ino.cpp
0000006c l     F .text.itcm	00000002 __tcf_0
00000708 l     F .text.itcm	00000108 _GLOBAL__sub_I_storage
2000e818 l     O .bss	00000004 setup_ready
20015124 l     O .bss	00000004 have_disk
20015174 l     O .bss	00000004 loop::t0
2001603c l     O .bss	00000002 loop::mxb
20015178 l     O .bss	00000004 loop::loopCount
20009416 l     O .data	00000002 loop::status
00000000 l    df *ABS*	00000000 Acq.cpp
000009e0 l     F .text.itcm	000000c8 acq_isr()
20200000 l     O .bss.dma	00001000 i2s_buffer
00000da0 l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
20014824 l     O .bss	00000008 dma
00000000 l    df *ABS*	00000000 Filing.cpp
00001420 l     F .text.itcm	00000104 checkEndOfFile(short) [clone .part.0]
00001524 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
2000b60c l     O .bss	00003000 diskBuffer
2000e81c l     O .bss	00006000 tempBuffer0
0000210c l     F .text.itcm	00000034 _GLOBAL__sub_I_t_acq
2000b20c l     O .bss	00000400 configText
2000e60c l     O .bss	00000200 fileHeader
20014a7c l     O .bss	00000050 dirName
20014ccc l     O .bss	00000200 wav_hdr
20014ecc l     O .bss	00000050 fileName
20015120 l     O .bss	00000004 haveStore
20015170 l     O .bss	00000004 checkEndOfFile(short)::dta
20015180 l     O .bss	00000050 timeStamp()::date_time
20008e3c l     O .data	00000004 newFolder(int)::d0
00000000 l    df *ABS*	00000000 usb_desc.c
200093d8 l     O .data	00000012 device_descriptor
60002aa4 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 Adc.cpp
200009ac l     O .data	00000004 regs
200009b0 l     O .data	00000008 chmap
00000000 l    df *ABS*	00000000 Compress.cpp
2001482c l     O .bss	00000200 dout
20014acc l     O .bss	00000200 outData
20014f20 l     O .bss	00000200 tempData
2001517c l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 I2C.cpp
00000000 l    df *ABS*	00000000 MTP.cpp
000022e4 l     F .text.itcm	00000010 txEvent_event
000022f4 l     F .text.itcm	00000010 rxEvent_event
00002304 l     F .text.itcm	0000007c MTPD::write(char const*, int) [clone .part.0]
00002380 l     F .text.itcm	0000009c MTPD::writestring(char const*) [clone .part.0]
0000241c l     F .text.itcm	000000b4 MTPD::GetDevicePropDesc(unsigned long) [clone .part.0]
00003828 l     F .text.itcm	00000036 MTPD::setObjectPropValue(unsigned long, unsigned long) [clone .part.0]
20009ac0 l     O .bss	00000020 rx_event_buffer
2001481c l     O .bss	00000004 mtp_rxEventcount
20014820 l     O .bss	00000004 mtp_txEventcount
20009ae0 l     O .bss	00000020 rx_event_transfer
200151f8 l     O .bss	00000004 MTPD::read(char*, unsigned long)::index
200151fc l     O .bss	00000004 MTPD::write(char const*, int)::dst
20000968 l     O .data	00000014 propertyList
2000097c l     O .data	00000028 supported_op
200009a4 l     O .data	00000008 supported_events
00000000 l    df *ABS*	00000000 Menu.cpp
000043e4 l     F .text.itcm	00000048 menuGetLine()
20014a5c l     O .bss	00000020 store
200151d0 l     O .bss	00000028 menuGetLine()::buffer
200009b8 l     O .data	00000028 version
00000000 l    df *ABS*	00000000 Queue.cpp
70000000 l     O .bss.extram	00240000 data_buffer
2000e810 l     O .bss	00000004 queue_busy
20014a2c l     O .bss	00000004 head
20014a30 l     O .bss	00000004 tail
00000000 l    df *ABS*	00000000 RTC.cpp
20000acc l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 RV-3028-C7.cpp
00000000 l    df *ABS*	00000000 Storage.cpp
0000589c l     F .text.itcm	0000003c dbgPrint(unsigned short)
000058d8 l     F .text.itcm	00000070 MTPStorage_SD::OpenIndex() [clone .part.0]
00005c24 l     F .text.itcm	000000c0 MTPStorage_SD::GenerateIndex(unsigned long) [clone .part.0]
00006bd8 l     F .text.itcm	00000280 mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*) [clone .part.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00008a18 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
0000a434 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
0000a530 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000b920 l     F .text.itcm	00000030 sdIrs()
0000b950 l     F .text.itcm	00000014 isBusyDat()
0000b964 l     F .text.itcm	0000000c isBusyDMA()
0000b970 l     F .text.itcm	000000cc setSdclk(unsigned long)
0000bb44 l     F .text.itcm	00000128 initSDHC()
0000bc6c l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0000bda8 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0000be40 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0000bf3c l     F .text.itcm	0000002c isBusyCMD13()
0000c0f4 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0000c30c l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2001605a l     O .bss	00000001 m_initDone
2000e80c l     O .bss	00000004 m_sdClkKhz
2001605b l     O .bss	00000001 m_version2
2000e814 l     O .bss	00000004 m_errorLine
2001605c l     O .bss	00000001 m_highCapacity
2001605d l     O .bss	00000001 m_transferActive
20014a34 l     O .bss	00000010 m_cid
20014a44 l     O .bss	00000010 m_csd
20014a54 l     O .bss	00000004 m_ocr
20014a58 l     O .bss	00000004 m_rca
20015128 l     O .bss	00000004 m_busyFcn
2001605e l     O .bss	00000001 m_dmaBusy
2001512c l     O .bss	00000004 m_irqstat
20009426 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
2000083c l     O .data	0000012c lookupTable
200009f8 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
0000d1f4 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 Print.cpp
0000d970 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0000e1cc l     F .text.itcm	0000005c flash_wait
20016064 l     O .bss	00000001 initialized
20015de4 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mtp.c
0000f7b4 l     F .text.itcm	00000010 txEvent_event
0000f7c4 l     F .text.itcm	0000004c rx_event
0000f810 l     F .text.itcm	00000064 rx_queue_transfer
20016065 l     O .bss	00000001 rx_head
200158d8 l     O .bss	00000005 rx_list
200158ec l     O .bss	00000014 rx_list_transfer_len
2001604c l     O .bss	00000002 rx_packet_size
20016067 l     O .bss	00000001 rx_tail
2000af80 l     O .bss	00000080 rx_transfer
2001606b l     O .bss	00000001 tx_head
20016056 l     O .bss	00000002 tx_packet_size
2000b100 l     O .bss	00000080 tx_transfer
20201080 l     O .bss.dma	00000800 rx_buffer
20201880 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
0000fabc l     F .text.itcm	00000060 rx_queue_transfer
20202080 l     O .bss.dma	00001000 rx_buffer
0000fb1c l     F .text.itcm	000000b4 rx_event
0000fbd0 l     F .text.itcm	00000090 usb_serial_flush_callback
20203080 l     O .bss.dma	00002000 txbuffer
0000fc60 l     F .text.itcm	000001b8 usb_serial_write.part.0
200158b4 l     O .bss	00000004 rx_available
200158b8 l     O .bss	00000010 rx_count
20016066 l     O .bss	00000001 rx_head
200158c8 l     O .bss	00000010 rx_index
200158e0 l     O .bss	00000009 rx_list
2001604e l     O .bss	00000002 rx_packet_size
20016068 l     O .bss	00000001 rx_tail
2000b000 l     O .bss	00000100 rx_transfer
2001606a l     O .bss	00000001 transmit_previous_timeout
20016054 l     O .bss	00000002 tx_available
2001606c l     O .bss	00000001 tx_head
2001606d l     O .bss	00000001 tx_noautoflush
20016058 l     O .bss	00000002 tx_packet_size
2000b180 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20016061 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00012034 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00012194 l     F .text.itcm	00000018 stdio_exit_handler
000121ac l     F .text.itcm	00000040 cleanup_stdio
000121ec l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strlcat.o
00000000 l    df *ABS*	00000000 libc_a-strlcpy.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
00013330 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00017eb8 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
00018ccc l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
00018e10 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00018f80 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
00019208 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00019638 l     F .text.itcm	00000076 __sprint_r.part.0
0001a63c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
0001b358 l     F .text.itcm	00000008 __usb_init_veneer
0001b360 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
0001b368 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0001b370 l     F .text.itcm	00000008 ___Z12do_hibernatev_veneer
0001b378 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
0001b380 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
0001b388 l     F .text.itcm	00000008 ___init_veneer
60002820 l     F .text.code	00000008 ____libc_init_array_veneer
60002828 l     F .text.code	00000008 __memset_veneer
60002830 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002838 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002840 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002848 l     F .text.code	00000008 __main_veneer
60002850 l     F .text.code	00000008 __sm_set_pool_veneer
60002858 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
60002860 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002868 l     F .text.code	00000008 __delay_veneer
60002870 l     F .text.code	00000008 __pwm_init_veneer
60002878 l     F .text.code	00000008 __set_arm_clock_veneer
60002880 l     F .text.code	00000008 ___Z12estAlarmTimem_veneer
0000d13c g     F .text.itcm	000000b8 toUpcase(unsigned short)
00005b9c g     F .text.itcm	00000086 MTPStorage_SD::WriteIndexRecord(unsigned long, Record const&)
000054e4 g     F .text.itcm	00000060 pushData(unsigned long*)
00010040 g     F .text.itcm	00000018 usb_serial_available
0001458c g     F .text.itcm	00000062 __any_on
0001af48 g     F .text.itcm	00000024 _isatty_r
00012d9c g     F .text.itcm	000000ba strcpy
60001674 g     F .text.code	00000064 do_hibernate()
0000a3cc g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
60002058 g     F .text.code	00000002 startup_default_late_hook
000129a0 g     F .text.itcm	0000002c _lseek_r
0000c468 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
00010210  w    F .text.itcm	000000d8 yield
0000ae38  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
2001584c g     O .bss	00000060 proc_stat
20016038 g     O .bss	00000004 usb_timer1_callback
0000974c g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
0000da84 g     F .text.itcm	000000a4 Print::printNumber64(unsigned long long, unsigned char, unsigned char)
20015e68 g     O .bss	000001b4 storage
600029b0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
2001604a g     O .bss	00000002 proc
60002170 g     F .text.code	00000384 configure_external_ram
0000adb8  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
20008bbc g     O .data	00000140 Wire1
0000a178  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0001b288 g     F .text.itcm	0000005a .hidden __floatdidf
00009ae0 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
20015844 g     O .bss	00000004 procCount
0000a91c g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
200157b0 g     O .bss	00000028 k_string
20015130 g     O .bss	00000004 FsDateTime::callback
20015394 g     O .bss	00000001 __lock___atexit_recursive_mutex
00019174 g     F .text.itcm	0000004c _wcrtomb_r
600016d8 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
00009c48 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0000b51c g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
0000da08 g     F .text.itcm	0000001c Print::println()
0000d6d0 g     F .text.itcm	000000aa TwoWire::isr()
20000bc0 g     O .data	00000070 vtable for DedicatedSpiCard
20015848 g     O .bss	00000004 procMiss
000124e4 g     F .text.itcm	00000020 __sseek
000122c0 g     F .text.itcm	0000003c __sinit
00007438 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
0001460c g     F .text.itcm	000000a4 fcvtbuf
0001ae6c g     F .text.itcm	000000b0 __swbuf_r
000043a0 g     F .text.itcm	00000044 usb_init_events
00010dbc g     F .text.itcm	0000000c __malloc_unlock
00002234 g     F .text.itcm	00000074 i2c_class::read(unsigned char, unsigned char)
20015168 g     O .bss	00000004 FsVolume::m_cwv
000021e4 g     F .text.itcm	00000026 i2c_class::i2c_class(TwoWire*, unsigned long)
00004fd4 g     F .text.itcm	00000008 getStore()
00008ea4 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
2000b208 g     O .bss	00000004 SerNum
20016060 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
0000adac  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
600027bc g     F .text.code	00000054 analog_init
00012028 g     F .text.itcm	0000000c _strtod_r
00001fc4 g     F .text.itcm	00000148 estAlarmTime(unsigned long)
0001250c g     F .text.itcm	0000004a _vdprintf_r
00008c0c g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000b1f4 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
0000e228 g     F .text.itcm	00000048 eeprom_initialize
00001ebc g     F .text.itcm	00000108 saveData(short)
20016050 g     O .bss	00000002 shift
20008a68 g     O .data	00000004 F_CPU_ACTUAL
00019584 g     F .text.itcm	000000b4 _sfread_r
00012638 g     F .text.itcm	000000f8 memmove
00006014 g     F .text.itcm	00000088 MTPStorage_SD::StartGetObjectHandles(unsigned long, unsigned long)
200157f8 g     O .bss	00000004 max_stat
0001235c g     F .text.itcm	00000088 snprintf
00002154 g     F .text.itcm	00000040 hibernate_init()
0000ca20 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
00013b7c g     F .text.itcm	0000004c _Balloc
0001b39c g       .ARM.exidx	00000000 __exidx_end
0000a6fc g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
2001605f g     O .bss	00000001 EventResponder::runningFromYield
0000ce6c g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
0000ac94 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
0000ed54 g     F .text.itcm	00000060 tempmonGetTemp
20008e40 g     O .data	00000004 __atexit_recursive_mutex
00012a48 g     F .text.itcm	0000000c __errno
00004900 g     F .text.itcm	000000c4 saveParameters()
60001000 g     O .text.headers	00000020 ImageVectorTable
20015140 g     O .bss	00000004 EventResponder::firstInterrupt
0000f71c g     F .text.itcm	00000028 usb_transfer_status
00002a38 g     F .text.itcm	000000ac MTPD::GetObjectHandles(unsigned long, unsigned long)
000104a4 g     F .text.itcm	00000084 sm_set_pool
20015148 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
00005810 g     F .text.itcm	00000004 rtcGetTimestamp()
2001550c g     O .bss	00000004 __stdio_exit_handler
00004fdc g     F .text.itcm	000004e0 decodeConfigfromFile(char*)
000089a0 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0001b2e4 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
0000f7ac  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0001af1c g     F .text.itcm	0000002c _fstat_r
20007b44 g     O .data	00000370 digital_pin_to_info_PGM
2001574c g     O .bss	00000004 errno
0000ce84 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
600028e8  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
00008710 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
000124a0 g     F .text.itcm	00000004 __seofread
0001b398 g       .text.itcm	00000000 _etext
00009f94 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20009ac0 g       .bss	00000000 _sbss
0000ba48 g     F .text.itcm	0000000c SdioCard::errorData() const
00005950 g     F .text.itcm	00000038 MTPStorage_SD::totalSize(unsigned long)
00001548 g     F .text.itcm	000000d4 loadConfigfromFile()
00006a70 g     F .text.itcm	000000f8 MTPStorage_SD::copy(unsigned long, unsigned long, unsigned long)
0000cbf8 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
000088c0 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
60002ab0 g       *ABS*	00000000 _stextload
00000264 g     F .text.itcm	00000224 loop
000102e8 g     F .text.itcm	0000007a flexpwm_init
0000e30c g     F .text.itcm	000000ec eepromemu_flash_write
6000205c g     F .text.code	00000004 startup_debug_reset
0000f5e0 g     F .text.itcm	00000064 usb_config_rx
0000286c g     F .text.itcm	000001cc MTPD::GetStorageInfo(unsigned long)
000071d0 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0000c850 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
0000d470 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
000022a8 g     F .text.itcm	0000003c i2c_class::write(unsigned char, unsigned char, unsigned char)
2001513c g     O .bss	00000004 EventResponder::lastInterrupt
0000ab44 g     F .text.itcm	00000028 FsBaseFile::close()
0000d25c g     F .text.itcm	00000048 SPIClass::end()
0000e614 g     F .text.itcm	00000134 memcpy
000139a0 g     F .text.itcm	000001b0 __hexnan
00006218 g     F .text.itcm	0000024c MTPStorage_SD::removeFile(unsigned long, char*)
0000aeac g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0000d000 g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
00005e5c g     F .text.itcm	000001b8 MTPStorage_SD::ScanDir(unsigned long, unsigned long)
20009ac0 g     O .data	00000000 .hidden __TMC_END__
00008794 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
00005dd0 g     F .text.itcm	0000008c MTPStorage_SD::OpenFileByIndex(unsigned long, unsigned long)
000091f8 g     F .text.itcm	00000028 FatFile::peek()
000049c4 g     F .text.itcm	00000094 menu1(short)
20015828 g     O .bss	00000004 nbuf
000146b0 g     F .text.itcm	00001b44 _svfprintf_r
0001b210 g     F .text.itcm	00000022 .hidden __floatsidf
20016020 g     O .bss	00000004 systick_millis_count
00007dd8 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
0000f9c0 g     F .text.itcm	00000030 usb_mtp_available
00000488 g     F .text.itcm	00000058 setup1()
0000d430 g     F .text.itcm	00000040 TwoWire::wait_idle()
00003ad8 g     F .text.itcm	000008c8 MTPD::loop()
00010534 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
2001606f g     O .bss	00000001 usb_configuration
0000ada0  w    F .text.itcm	00000006 SdCardInterface::status()
00010458 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000cab8 g     F .text.itcm	00000030 SdioCard::syncDevice()
0000bcf4 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
0000013c  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00009220 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
000144cc g     F .text.itcm	00000062 __ratio
0000b2e0 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
600029b0  w    O .text.progmem	00000018 usb_string_manufacturer_name
60002988 g     O .text.progmem	00000008 usb_string_mtp
00010830 g     F .text.itcm	00000010 malloc
000001fc g     F .text.itcm	00000010 reboot()
000021e4 g     F .text.itcm	00000026 i2c_class::i2c_class(TwoWire*, unsigned long)
60002938  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
20000c58  w    O .data	00000024 vtable for FsFile
0000ed34  w    F .text.itcm	0000000a _fstat
000191d8 g     F .text.itcm	00000006 iswspace
20015510 g     O .bss	00000200 acqBuffer
000021c4  w    F .text.itcm	0000001e TwoWire::read()
00017e00 g     F .text.itcm	00000040 __assert_func
0000588c g     F .text.itcm	00000002 XRTCprintTime()
20000328 g     O .data	000000c8 __mprec_tens
60002680 g     F .text.code	000000e8 usb_init
0000aa90 g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
20015e64 g     O .bss	00000004 sessionID_
0000ada8  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
200153d0 g     O .bss	00000004 __malloc_top_pad
0000eb20 g     F .text.itcm	00000048 rtc_set
00019548 g     F .text.itcm	0000003a __ssrefill_r
20016024 g     O .bss	00000004 systick_safe_read
0000d328 g     F .text.itcm	00000108 TwoWire::force_clock()
aaaaaaff g       *ABS*	00000000 _flexram_bank_config
00007fb4 g     F .text.itcm	000000e4 ExFatFile::truncate()
20008e48 g     O .data	00000000 .hidden __dso_handle
0000e3f8 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
0001b1f0 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
00017d7c g     F .text.itcm	00000008 _localeconv_r
200093f8 g     O .data	00000004 sd_str
0001911c g     F .text.itcm	00000004 _strtoull_r
0000ce14 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
0001a6bc g     F .text.itcm	000002f4 __sfvwrite_r
00013dd0 g     F .text.itcm	0000005c __i2b
0000f874 g     F .text.itcm	000000a8 usb_mtp_configure
20000000 g       .data	00000000 _sdata
20009424 g     O .data	00000002 t_on
60002a38 g     O .text.progmem	00000069 usb_config_descriptor_480
00010564 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00003364 g     F .text.itcm	00000226 MTPD::getObjectPropValue(unsigned long, unsigned long)
0001af6c g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000ce64 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00008acc g     F .text.itcm	00000034 FatFile::addCluster()
000129f8 g     F .text.itcm	00000024 _sbrk_r
20016040 g     O .bss	00000002 d_rep
0000bac0 g     F .text.itcm	0000001c SdioCard::type() const
60002050 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
000100c8 g     F .text.itcm	00000020 usb_serial_getchar
20016028 g     O .bss	00000008 usb_cdc_line_coding
0000e108 g     F .text.itcm	00000054 digitalWrite
20015144 g     O .bss	00000004 EventResponder::lastYield
000071a8 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
000129cc g     F .text.itcm	0000002c _read_r
000000ec  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
0000ae2c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00017a44 g     F .text.itcm	000000c6 _fclose_r
20015750 g     O .bss	00000010 extmem_smalloc_pool
200153c8 g     O .bss	00000004 __malloc_max_sbrked_mem
0000b3e4 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000e15c g     F .text.itcm	00000070 pinMode
000061c4 g     F .text.itcm	00000054 MTPStorage_SD::read(unsigned long, unsigned long, char*, unsigned long)
0000db28 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
0001b234 g     F .text.itcm	00000042 .hidden __extendsfdf2
000161f4 g     F .text.itcm	00001850 __ssvfscanf_r
0001af78 g     F .text.itcm	00000276 .hidden __adddf3
6000170c g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
20008cfc g     O .data	00000140 Wire2
00002e0c g     F .text.itcm	00000088 MTPD::getObjectPropsSupported(unsigned long)
60027c00 g     O .text.csf	00000c00 hab_csf
0000a754 g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
00014334 g     F .text.itcm	000000c2 __b2d
00000e28 g     F .text.itcm	000001f4 adc_init()
0001b394 g       .ARM.exidx	00000000 __exidx_start
70240000 g       .bss.extram	00000000 _extram_end
000009d4  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
0000ed40  w    F .text.itcm	00000004 _isatty
2001603e g     O .bss	00000002 d_0
20015138 g     O .bss	00000004 EventResponder::firstYield
0000d0a4 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
000000a4  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00010de0 g     F .text.itcm	000003d8 _realloc_r
00012a54 g     F .text.itcm	00000048 __libc_init_array
0000e7b0 g     F .text.itcm	0000034c dtostrf
00005890  w    F .text.itcm	0000000c TwoWire::available()
000079b4 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0000ba54 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20000dd8 g     O .data	00000100 __hexdig
00007d28 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00006b68 g     F .text.itcm	0000006e mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*)
0001aba0 g     F .text.itcm	00000066 _fputwc_r
0000220c g     F .text.itcm	00000026 i2c_class::exist(unsigned char)
20000300 g     O .data	00000028 __mprec_bigtens
00013c80 g     F .text.itcm	000000b0 __s2b
0000b714  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0000ed4c  w    F .text.itcm	00000004 abort
0000d570 g     F .text.itcm	00000160 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000f79c  w    F .text.itcm	00000004 usb_serial_class::clear()
0001b1f0 g     F .text.itcm	0000001e .hidden __floatunsidf
0000ecf4  w    F .text.itcm	00000034 _sbrk
6001de4c g       *ABS*	00000000 _sdataload
00014138 g     F .text.itcm	00000042 __mcmp
000067ec g     F .text.itcm	0000015c mSD_Base::sd_copy(unsigned long, char*, unsigned long, char*)
20008e44 g     O .data	00000004 __brkval
2001606e g     O .bss	00000001 usb_cdc_line_rtsdtr
60002810 g     F .text.code	00000000 _init
0000fe18 g     F .text.itcm	00000002 usb_serial_reset
00008b78 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0000e4b0 g     F .text.itcm	00000134 eeprom_write_byte
0001b318 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
600029cc g     O .text.progmem	00000069 usb_config_descriptor_12
20000c7c g     O .data	00000024 vtable for TwoWire
000111b8 g     F .text.itcm	00000e70 _strtod_l
00013968 g     F .text.itcm	00000036 __match
200160a0 g       .bss	00000000 _ebss
0000c4f0 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000024d0 g     F .text.itcm	0000033c MTPD::WriteDescriptor()
200093f0 g     O .data	00000004 propertyListNum
60001760 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
000000d8  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
00013d30 g     F .text.itcm	00000040 __hi0bits
00007110 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60001854 g     F .text.code	0000009c CrashReportClass::clear()
0000d788 g     F .text.itcm	0000000c lpi2c3_isr()
00007e7c g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20205080 g       .bss.dma	00000000 _heap_start
0000280c g     F .text.itcm	00000060 MTPD::WriteStorageIDs()
000060f8 g     F .text.itcm	000000b4 MTPStorage_SD::GetObjectInfo(unsigned long, char*, unsigned long long*, unsigned long*, unsigned short*, char*, char*)
20015398 g     O .bss	00000001 __lock___malloc_recursive_mutex
20009420 g     O .data	00000002 h_4
00006e58 g     F .text.itcm	000002b8 MTPStorage_SD::move(unsigned long, unsigned long, unsigned long)
000089b8 g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
60002898  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
000009d4  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
200153d4 g     O .bss	00000138 __sf
20008a60 g     O .data	00000004 CrashReport
20015918 g     O .bss	000004cc sdx
0000b10c g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000004e0 g     F .text.itcm	00000228 storage_configure()
00000004 g       *ABS*	00000000 _itcm_block_count
20009b20 g     O .bss	00000020 endpoint0_transfer_data
0000a1b4 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000cf64 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
0000e748 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00010364 g     F .text.itcm	000000f4 pwm_init
0001af78 g     F .text.itcm	00000276 .hidden __aeabi_dadd
20015760 g     O .bss	00000050 file
20009427 g     O .data	00000001 usb_mtp_status
60028800 g       .text.csf	00000000 __text_csf_end
600024f4 g     F .text.code	0000005c usb_pll_start
00013f88 g     F .text.itcm	000000c0 __pow5mult
00009450 g     F .text.itcm	00000090 FatFile::rmdir()
20000bb4 g     O .data	0000000c vtable for CrashReportClass
0001b278 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
0000d794 g     F .text.itcm	0000000c lpi2c4_isr()
0000a63c g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
0000b91c  w    F .text.itcm	00000002 SdioCard::end()
20009b00 g     O .bss	00000020 endpoint0_transfer_ack
20016030 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000f6d8 g     F .text.itcm	00000028 usb_transmit
0000d948 g     F .text.itcm	00000020 systick_isr
00012aa8 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00005814 g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
20008a6c g     O .data	00000010 Serial
200157d8 g     O .bss	00000020 logBuffer
0000d968  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
0000ac1c g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
60002050  w    F .text.code	00000002 startup_early_hook
000079e8 g     F .text.itcm	00000092 ExFatFile::addCluster()
0000afb8 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
0000fffc g     F .text.itcm	00000044 usb_serial_peekchar
000122fc g     F .text.itcm	0000000c __sfp_lock_acquire
00012e60 g     F .text.itcm	00000000 memchr
0000dd1c g     F .text.itcm	000002f0 set_arm_clock
2001601c g     O .bss	00000004 systick_cycle_count
20009400 g     O .data	00000016 usb_string_serial_number_default
00013124 g     F .text.itcm	0000020c _free_r
0000b584 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
0001ad34 g     F .text.itcm	00000060 category
0000b78c g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0000c03c g     F .text.itcm	000000b8 SdioCard::readStop()
0000adb0  w    F .text.itcm	00000004 SharedSpiCard::type() const
00012970 g     F .text.itcm	0000000c __locale_mb_cur_max
000191c0 g     F .text.itcm	00000016 _wcsrtombs_r
20015204 g     O .bss	00000190 __atexit0
00006948 g     F .text.itcm	00000126 MTPStorage_SD::CopyFiles(unsigned long, unsigned long, unsigned long)
0000f7a4  w    F .text.itcm	00000004 usb_serial_class::flush()
000194c8 g     F .text.itcm	00000080 _sungetc_r
0001af74 g     F .text.itcm	0000027a .hidden __aeabi_dsub
200093c0 g     O .data	00000004 __malloc_sbrk_base
0000dc8c  w    F .text.itcm	00000004 usb_serial_class::read()
00018f7c g     F .text.itcm	00000004 _strtoll_r
0000a068 g     F .text.itcm	00000110 FatFile::remove()
0001b278 g     F .text.itcm	0000006a .hidden __floatundidf
0000ed44  w    F .text.itcm	00000006 _lseek
0000105c g     F .text.itcm	0000006c adcStatus()
00014048 g     F .text.itcm	000000f0 __lshift
00008db8 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00001ac8 g     F .text.itcm	000003f4 storeData(short)
0000f6a8 g     F .text.itcm	00000030 usb_prepare_transfer
0000adb4  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000eb68 g     F .text.itcm	0000018c unused_interrupt_vector
000193c8 g     F .text.itcm	00000100 __ssprint_r
20016034 g     O .bss	00000004 usb_timer0_callback
60002550 g     F .text.code	00000130 tempmon_init
000099bc g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00012574 g     F .text.itcm	00000062 _vasnprintf_r
00002140 g     F .text.itcm	00000014 powerDown()
00012ffc g     F .text.itcm	00000088 __register_exitproc
0000adbc g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000078bc g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000e270 g     F .text.itcm	0000007c eeprom_read_byte
0001283c g     F .text.itcm	00000044 strlcpy
00012880 g     F .text.itcm	0000008a strncmp
00009900 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00007edc g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00010058 g     F .text.itcm	00000070 usb_serial_flush_input
200093ec g     O .data	00000004 fsamp
00008854 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
00005d6c g     F .text.itcm	00000064 MTPStorage_SD::ConstructFilename(int, char*, int)
00013e2c g     F .text.itcm	0000015c __multiply
000054bc g     F .text.itcm	0000001c getDataCount()
000100e8 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0001290c g     F .text.itcm	00000064 strncpy
200153a0 g     O .bss	00000028 __malloc_current_mallinfo
00000c48 g     F .text.itcm	0000008c i2s_setup()
000143f8 g     F .text.itcm	000000d4 __d2b
0000b7f4 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
0000b914  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60002768 g     F .text.code	00000054 _reboot_Teensyduino_
0000bab0  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60002054 g     F .text.code	00000002 startup_default_middle_hook
00000cd4 g     F .text.itcm	000000a4 dma_setup()
00010dc8 g     F .text.itcm	00000018 realloc
0000ae48 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000b26c g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
0000bf68 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
00018e0c g     F .text.itcm	00000004 _strtoul_r
0000f9f0 g     F .text.itcm	000000cc usb_mtp_send
0000f000 g     F .text.itcm	000005e0 usb_isr
0001217c g     F .text.itcm	0000000c __cxa_atexit
0000726c g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0001297c g     F .text.itcm	00000024 _close_r
0000a388  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0001b210 g     F .text.itcm	00000022 .hidden __aeabi_i2d
0000b044 g     F .text.itcm	0000006e SharedSpiCard::readStop()
0000cf0c g     F .text.itcm	00000056 FsCache::sync()
000125d8 g     F .text.itcm	00000060 memcmp
20000c30  w    O .data	00000028 vtable for usb_serial_class
0000cea8 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
00012aa0 g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000358c g     F .text.itcm	000000f6 MTPD::GetObject(unsigned long)
0000ccec g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
20015910 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00012424 g     F .text.itcm	00000058 sscanf
0001aa28 g     F .text.itcm	000000cc __swsetup_r
00001684 g     F .text.itcm	00000014 stopSD()
0001082c  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00007b30 g     F .text.itcm	0000005e ExFatFile::rmdir()
00002e94 g     F .text.itcm	000004ce MTPD::getObjectPropDesc(unsigned long, unsigned long)
0000b37c g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
00014530 g     F .text.itcm	0000005c __copybits
0000594c g     F .text.itcm	00000004 MTPStorage_SD::has_directories(unsigned long)
20008fb8 g     O .data	00000408 __malloc_av_
20015200 g     O .bss	00000004 __atexit
0001247c g     F .text.itcm	00000022 __sread
00001814 g     F .text.itcm	00000098 wavHeaderWrite(char*)
0000e2ec g     F .text.itcm	0000001e eeprom_read_block
0001017c g     F .text.itcm	00000094 usb_serial_flush_output
00010db0 g     F .text.itcm	0000000c __malloc_lock
00008364 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
20009800 g     O .data	000002c0 _VectorsRam
0000cebc g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00017c3c g     F .text.itcm	00000054 _fflush_r
00017e40 g     F .text.itcm	00000078 _calloc_r
00003770 g     F .text.itcm	00000070 MTPD::read(char*, unsigned long)
000018ac g     F .text.itcm	000000d0 makeHeader(long*)
00009cfc g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20009422 g     O .data	00000002 t_acq
20016072 g     O .bss	00000001 yield_active_check_flags
00007cc8 g     F .text.itcm	0000005e ExFatFile::sync()
00012aa4 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20016070 g     O .bss	00000001 usb_high_speed
00009264 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0000bea0 g     F .text.itcm	0000007c SdioCard::isBusy()
00012730 g     F .text.itcm	000000a4 memset
0000e604 g     F .text.itcm	00000010 main
200153cc g     O .bss	00000004 __malloc_max_total_mem
0000849c g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00012a9c g     F .text.itcm	00000002 __retarget_lock_init_recursive
20201000 g     O .bss.dma	00000069 usb_descriptor_buffer
0000019c g     F .text.itcm	00000060 resetUSB()
0000b85c g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00008098 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
00003860 g     F .text.itcm	00000154 MTPD::SendObjectInfo(unsigned long, unsigned long)
000127d4 g     F .text.itcm	00000066 strlcat
00008bb8 g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
00012504 g     F .text.itcm	00000008 __sclose
0000f744 g     F .text.itcm	00000058 usb_init_serialnumber
00012178 g     F .text.itcm	00000004 _strtol_r
60002898 g       .text.code	00000000 __init_array_end
00017fe0 g     F .text.itcm	00000cec _dtoa_r
00010850 g     F .text.itcm	00000560 _malloc_r
0000b4b4 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
000145f0 g     F .text.itcm	0000001a __ascii_wctomb
000016dc g     F .text.itcm	00000138 writeHeaderInfo(char*, int)
0001b288 g     F .text.itcm	0000005a .hidden __aeabi_l2d
2001516c g     O .bss	00000004 FatVolume::m_cwv
00002194 g     F .text.itcm	00000030 hibernate_now(unsigned long)
00000244 g     F .text.itcm	00000020 stopSystem()
0001a9b0 g     F .text.itcm	00000076 __submore
20000d10  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000dc94 g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
0000d254 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0000e0b4 g     F .text.itcm	00000054 micros
00007b90 g     F .text.itcm	00000138 ExFatFile::syncDir()
0000d7a0 g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
00013084 g     F .text.itcm	000000a0 _malloc_trim_r
0001ac08 g     F .text.itcm	00000106 _wcsnrtombs_l
600029c8 g     O .text.progmem	00000004 string0
00010114 g     F .text.itcm	00000018 usb_serial_write
60002058  w    F .text.code	00000002 startup_late_hook
0000b8f4 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000f7a0  w    F .text.itcm	00000004 usb_serial_class::available()
00012ac8 g     F .text.itcm	000002dc strcmp
000037e0 g     F .text.itcm	00000048 MTPD::readstring(char*)
00009740 g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000300 endpoint_queue_head
60002990  w    O .text.progmem	00000020 usb_string_product_name
0000e00c g     F .text.itcm	000000a8 delay
0001b318 g     F .text.itcm	00000040 .hidden __fixunsdfdi
20016044 g     O .bss	00000002 dma_channel_allocated_mask
00007184 g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
0001b390 g     F .fini	00000000 _fini
0000d2c0 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
0000af38 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
000079c4 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
000123e4 g     F .text.itcm	00000040 sprintf
0000da40 g     F .text.itcm	0000001c Print::printf(char const*, ...)
0000d9f0 g     F .text.itcm	00000016 Print::print(long)
00008b98 g     F .text.itcm	0000001e FatFile::close()
0000ed50 g     F .text.itcm	00000004 Panic_Temp_isr
0001b2e4 g     F .text.itcm	00000030 .hidden __fixdfdi
00000aa8 g     F .text.itcm	000001a0 setAudioFrequency(int)
000054d8 g     F .text.itcm	0000000c queue_isBusy()
200093f4 g     O .data	00000004 sd
00008c4c g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
0001ad10 g     F .text.itcm	00000024 _wcsnrtombs_r
0000baac  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000124  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00012a1c g     F .text.itcm	0000002c _write_r
000191e0 g     F .text.itcm	00000028 iswspace_l
20015914 g     O .bss	00000004 sdSectorCount
0000c210 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
20009418 g     O .data	00000002 again
0000020c g     F .text.itcm	00000038 lowPowerInit()
0000161c g     F .text.itcm	00000068 filing_init()
0000f91c g     F .text.itcm	000000a4 usb_mtp_recv
00012ff0 g     F .text.itcm	0000000c nanf
200093d4 g     O .data	00000004 _impure_ptr
0000740c g     F .text.itcm	0000002c ExFatFile::peek()
00017b0c g     F .text.itcm	00000130 __sflush_r
20000b90  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
00019120 g     F .text.itcm	00000054 _mbrtowc_r
20008a7c g     O .data	00000140 Wire
0000ad78 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00012314 g     F .text.itcm	00000046 _fwalk_sglue
0000ba3c g     F .text.itcm	0000000c SdioCard::errorCode() const
00008fa8 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000188  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002888 g       .text.code	00000000 __preinit_array_end
600018f0 g     F .text.code	00000704 CrashReportClass::printTo(Print&) const
00001388 g     F .text.itcm	00000080 dateTime(unsigned short*, unsigned short*, unsigned char*)
00001a08 g     F .text.itcm	000000c0 newFileName(char*)
00001408  w    F .text.itcm	00000018 FsFile::~FsFile()
00008654 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
00006464 g     F .text.itcm	000000b6 MTPStorage_SD::DeleteObject(unsigned long)
00013b50 g     F .text.itcm	0000002a __ascii_mbtowc
20016046 g     O .bss	00000002 h_1
000142d0 g     F .text.itcm	00000064 __ulp
0000efd4 g     F .text.itcm	0000002c usb_stop_sof_interrupts
0000d2a4  w    F .text.itcm	00000018 TwoWire::peek()
0000d2bc  w    F .text.itcm	00000002 TwoWire::flush()
00000810 g     F .text.itcm	000001c4 setup
200088a8 g     O .data	00000078 usb_descriptor_list
0000bf1c g     F .text.itcm	00000020 SdioCard::status()
00005b54 g     F .text.itcm	00000048 MTPStorage_SD::ResetIndex()
00008c2c g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
00000df8 g     F .text.itcm	00000030 adc_exit()
00012fe0 g     F .text.itcm	00000010 nan
00009050 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00003684 g     F .text.itcm	000000ec MTPD::GetPartialObject(unsigned long, unsigned long, unsigned long)
00009014 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20015134 g     O .bss	00000004 ExFatVolume::m_cwv
20060000 g       .text.csf	00000000 _estack
0000ac90 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
0000d8cc g     F .text.itcm	00000034 DMAChannel::release()
00004a58 g     F .text.itcm	000000d8 loadParameters()
0001012c g     F .text.itcm	00000050 usb_serial_write_buffer_free
00000dc4 g     F .text.itcm	00000034 usbPowerSetup()
00017d18 g     F .text.itcm	00000064 stpncpy
60001794 g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
200093c8 g     O .data	0000000c __sglue
0000fe1c g     F .text.itcm	00000100 usb_serial_configure
0000d2ec g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
0000da24  w    F .text.itcm	0000001c _write
20009ac0 g       .data	00000000 _edata
00008754 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20016063 g     O .bss	00000001 external_psram_size
00002ae4 g     F .text.itcm	00000328 MTPD::GetObjectInfo(unsigned long)
0000baac  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000cfb4 g     F .text.itcm	0000004c FsName::get16()
0000ae2c  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000b440 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0000b0cc g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00008430 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00008b00 g     F .text.itcm	00000078 FatFile::addDirCluster()
0001aaf4 g     F .text.itcm	000000aa __fputwc
0000f7a8  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
0000d77c g     F .text.itcm	0000000c lpi2c1_isr()
0000a400 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
00000d78 g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
0000e74c g     F .text.itcm	00000062 ultoa
2000941e g     O .data	00000002 h_3
600017ec g     F .text.code	00000068 TwoWire::begin()
20016042 g     O .bss	00000002 dgain
0000ab6c g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
00005ce4 g     F .text.itcm	00000088 MTPStorage_SD::ReadIndexRecord(unsigned long)
000124a4 g     F .text.itcm	0000003e __swrite
0000d900 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00004eac g     F .text.itcm	00000128 menu(short)
200093c4 g     O .data	00000004 __malloc_trim_threshold
0000dc90  w    F .text.itcm	00000004 usb_serial_class::peek()
00012188 g     F .text.itcm	0000000a fcvtf
0000b918  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000582c g     F .text.itcm	0000002e rtcSetDate(int, int, int)
0000609c g     F .text.itcm	0000005c MTPStorage_SD::GetNextObjectHandle(unsigned long)
000193a0 g     F .text.itcm	00000028 fiprintf
000196b0 g     F .text.itcm	00000f8c _vfiprintf_r
0000585c g     F .text.itcm	0000002e rtcSetTime(int, int, int)
0000ccf0  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
00000070  w    F .text.itcm	00000034 MTPStorage_SD::~MTPStorage_SD()
20009b40 g     O .bss	00001440 mtpd
0001417c g     F .text.itcm	00000154 __mdiff
00005544 g     F .text.itcm	0000005c pullData(unsigned long*)
0000ba9c g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
0000651c g     F .text.itcm	000000e6 MTPStorage_SD::Create(unsigned long, unsigned long, bool, char const*)
20015800 g     O .bss	00000028 n_string
0000868c g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
0000a274 g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
20008940 g     O .data	00000120 _impure_data
00007524 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
0001933c g     F .text.itcm	00000064 _jp2uc_l
00004638 g     F .text.itcm	000002c8 menu3()
00012308 g     F .text.itcm	0000000c __sfp_lock_release
200157fc g     O .bss	00000004 mtp_txEventCount
00001698 g     F .text.itcm	00000044 timeStamp()
0000c03c g     F .text.itcm	000000b8 SdioCard::writeStop()
00017c90 g     F .text.itcm	00000088 __sccl
0000714c g     F .text.itcm	00000014 ExFatFile::close()
20000f3c g     O .data	00000101 _ctype_
0000ed28  w    F .text.itcm	00000004 _read
60002888 g       .text.code	00000000 __init_array_start
0001082c  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001ff4 g     F .text.code	0000005c CrashReportClass::operator bool()
20008a64 g     O .data	00000004 F_BUS_ACTUAL
20015738 g     O .bss	00000004 disk_count
000055a0 g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
0000aa40 g     F .text.itcm	00000050 FatVolume::chdir(char const*)
0000442c g     F .text.itcm	0000020c printPar()
2000941c g     O .data	00000002 h_2
00005714 g     F .text.itcm	000000fc date2time(datetime_t*)
0001ad94 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000d818 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
0000ae30  w    F .text.itcm	00000006 SharedSpiCard::end()
00012f00 g     F .text.itcm	000000dc strlen
00008fb8 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
000094e0 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
000133d4 g     F .text.itcm	00000594 __gethex
60002990 g     O .text.progmem	00000020 usb_string_product_name_default
0000101c g     F .text.itcm	00000040 setAGain(signed char)
00012558 g     F .text.itcm	0000001c vdprintf
0000badc g     F .text.itcm	00000068 SdioCard::sectorCount()
00009674 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
60002054  w    F .text.code	00000002 startup_middle_hook
20000ca0 g     O .data	00000070 vtable for SdioCard
0001b234 g     F .text.itcm	00000042 .hidden __aeabi_f2d
0000661c g     F .text.itcm	000000d6 MTPStorage_SD::close()
0000a384 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
60002060 g     F .text.code	00000110 configure_cache
0000e5e4 g     F .text.itcm	0000001e eeprom_write_block
00000070  w    F .text.itcm	00000034 MTPStorage_SD::~MTPStorage_SD()
0000b910  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
000066f4 g     F .text.itcm	000000f8 MTPStorage_SD::rename(unsigned long, char const*)
0000b69c  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
0000197c g     F .text.itcm	0000008c newDirectory(char*)
0000c94c g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00004b30 g     F .text.itcm	0000037c menu2()
0000ce00 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000010c8 g     F .text.itcm	000002c0 compress(void*)
00005948 g     F .text.itcm	00000004 MTPStorage_SD::readonly(unsigned long)
0001af74 g     F .text.itcm	0000027a .hidden __subdf3
60002888 g       .text.code	00000000 __preinit_array_start
0000f700 g     F .text.itcm	0000001c usb_receive
0000855c g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
000061ac g     F .text.itcm	00000016 MTPStorage_SD::GetSize(unsigned long)
20016052 g     O .bss	00000002 t_rep
00013d70 g     F .text.itcm	00000060 __lo0bits
00008608 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
200093fc g     O .data	00000004 tempDatai
00009590 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00028800 g       *ABS*	00000000 _flashimagelen
0000b0b4 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
00010528 g     F .text.itcm	0000000a __aeabi_atexit
00001408  w    F .text.itcm	00000018 FsFile::~FsFile()
0000eafc g     F .text.itcm	00000024 rtc_get
00007a7c g     F .text.itcm	000000b4 ExFatFile::remove()
00017d88 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000d944 g     F .text.itcm	00000004 pendablesrvreq_isr
00006604 g     F .text.itcm	00000018 MTPStorage_SD::write(unsigned char const*, unsigned long)
000039b4 g     F .text.itcm	00000124 MTPD::SendObject()
20016048 g     O .bss	00000002 monitor
2000941a g     O .data	00000002 d_on
00005988 g     F .text.itcm	000001cc MTPStorage_SD::usedSize(unsigned long)
20015710 g     O .bss	00000028 b_string
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20008e4c g     O .data	0000016c __global_locale
0000c578 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
00007160 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000ff1c g     F .text.itcm	000000e0 usb_serial_read
2001539c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000da5c g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000f644 g     F .text.itcm	00000064 usb_config_tx
0000ed2c  w    F .text.itcm	00000006 _close
0000a6d8 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
00010840 g     F .text.itcm	00000010 free
00008318 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00013bdc g     F .text.itcm	000000a4 __multadd
00013bc8 g     F .text.itcm	00000012 _Bfree
0000a1e0 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
20009400  w    O .data	00000016 usb_string_serial_number
0000cae8 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0000ba78 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)



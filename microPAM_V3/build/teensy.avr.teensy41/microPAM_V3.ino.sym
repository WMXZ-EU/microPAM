
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\A5394982E70389E0D0C97A4E173256C7/microPAM_V3.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002718 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0001aa10 l    d  .fini	00000000 .fini
0001aa14 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200096c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6002691c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 Hibernate.cpp
2003431c l     O .bss	00000004 snvs_tmp
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20034d04 l     O .bss	00000004 s_hotCount
20034d08 l     O .bss	00000004 s_hotTemp
20034d0c l     O .bss	00000004 s_hot_ROOM
20034d10 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000e43c l     F .text.itcm	000000c8 endpoint0_receive
0000e504 l     F .text.itcm	00000088 schedule_transfer
0000e58c l     F .text.itcm	00000036 run_callbacks
0000e5c4 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20034b3c l     O .bss	00000008 endpoint0_buffer
20034b44 l     O .bss	00000004 endpoint0_notify_mask
2000de00 l     O .bss	00000008 endpoint0_setupdata
20034b48 l     O .bss	00000004 endpointN_notify_mask
20034cb0 l     O .bss	00000008 reply_buffer
2003546f l     O .bss	00000001 sof_usage
20035477 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20035468 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20034c30 l     O .bss	00000000 object.0
60002708 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 microPAM_V3.ino.cpp
0000006c l     F .text.itcm	00000002 __tcf_0
0000072c l     F .text.itcm	00000108 _GLOBAL__sub_I_storage
20033c18 l     O .bss	00000004 setup_ready
20034724 l     O .bss	00000004 have_disk
20034774 l     O .bss	00000004 loop::t0
20035440 l     O .bss	00000002 loop::mxb
20034778 l     O .bss	00000004 loop::loopCount
20008ff6 l     O .data	00000002 loop::status
00000000 l    df *ABS*	00000000 Acq.cpp
00000a04 l     F .text.itcm	000000c8 acq_isr()
00000dc8 l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
20033c24 l     O .bss	00000008 dma
20034520 l     O .bss	00000200 acqBuffer
20200000 l     O .bss.dma	00000800 i2s_buffer
00000000 l    df *ABS*	00000000 Filing.cpp
00001138 l     F .text.itcm	00000104 checkEndOfFile(short) [clone .part.0]
0000123c l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
2000e20c l     O .bss	00001800 diskBuffer
00001e34 l     F .text.itcm	00000034 _GLOBAL__sub_I_t_acq
2000de0c l     O .bss	00000400 configText
2000fa0c l     O .bss	00000200 fileHeader
20033e7c l     O .bss	00000050 dirName
200340cc l     O .bss	00000200 wav_hdr
200342cc l     O .bss	00000050 fileName
20034720 l     O .bss	00000004 haveStore
20034770 l     O .bss	00000004 checkEndOfFile(short)::dta
20034780 l     O .bss	00000050 timeStamp()::date_time
20008a1c l     O .data	00000004 newFolder(int)::d0
00000000 l    df *ABS*	00000000 usb_desc.c
20008fb8 l     O .data	00000012 device_descriptor
60002834 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 Adc.cpp
00000000 l    df *ABS*	00000000 Compress.cpp
20033c2c l     O .bss	00000200 dout
20033ecc l     O .bss	00000200 outData
20034320 l     O .bss	00000200 tempData
2003477c l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 MTP.cpp
00001eec l     F .text.itcm	00000010 txEvent_event
00001efc l     F .text.itcm	00000010 rxEvent_event
00001f0c l     F .text.itcm	0000007c MTPD::write(char const*, int) [clone .part.0]
00001f88 l     F .text.itcm	0000009c MTPD::writestring(char const*) [clone .part.0]
00002024 l     F .text.itcm	000000b4 MTPD::GetDevicePropDesc(unsigned long) [clone .part.0]
00003430 l     F .text.itcm	00000036 MTPD::setObjectPropValue(unsigned long, unsigned long) [clone .part.0]
200096c0 l     O .bss	00000020 rx_event_buffer
20033c1c l     O .bss	00000004 mtp_rxEventcount
20033c20 l     O .bss	00000004 mtp_txEventcount
200096e0 l     O .bss	00000020 rx_event_transfer
200347f8 l     O .bss	00000004 MTPD::read(char*, unsigned long)::index
200347fc l     O .bss	00000004 MTPD::write(char const*, int)::dst
20000934 l     O .data	00000014 propertyList
20000948 l     O .data	00000028 supported_op
20000970 l     O .data	00000008 supported_events
00000000 l    df *ABS*	00000000 Menu.cpp
00003fec l     F .text.itcm	00000048 menuGetLine()
20033e5c l     O .bss	00000020 store
200347d0 l     O .bss	00000028 menuGetLine()::buffer
20000978 l     O .data	00000028 version
00000000 l    df *ABS*	00000000 Queue.cpp
2000fc14 l     O .bss	00024000 data_buffer
2000fc10 l     O .bss	00000004 queue_busy
20033e2c l     O .bss	00000004 head
20033e30 l     O .bss	00000004 tail
00000000 l    df *ABS*	00000000 RTC.cpp
20000a8c l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 Storage.cpp
00005494 l     F .text.itcm	0000003c dbgPrint(unsigned short)
000054d0 l     F .text.itcm	00000070 MTPStorage_SD::OpenIndex() [clone .part.0]
0000581c l     F .text.itcm	000000c0 MTPStorage_SD::GenerateIndex(unsigned long) [clone .part.0]
000067d0 l     F .text.itcm	00000280 mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*) [clone .part.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00008610 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
0000a02c l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
0000a128 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000b518 l     F .text.itcm	00000030 sdIrs()
0000b548 l     F .text.itcm	00000014 isBusyDat()
0000b55c l     F .text.itcm	0000000c isBusyDMA()
0000b568 l     F .text.itcm	000000cc setSdclk(unsigned long)
0000b73c l     F .text.itcm	00000128 initSDHC()
0000b864 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0000b9a0 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0000ba38 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0000bb34 l     F .text.itcm	0000002c isBusyCMD13()
0000bcec l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0000bf04 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
20035460 l     O .bss	00000001 m_initDone
2000fc0c l     O .bss	00000004 m_sdClkKhz
20035461 l     O .bss	00000001 m_version2
20033c14 l     O .bss	00000004 m_errorLine
20035462 l     O .bss	00000001 m_highCapacity
20035463 l     O .bss	00000001 m_transferActive
20033e34 l     O .bss	00000010 m_cid
20033e44 l     O .bss	00000010 m_csd
20033e54 l     O .bss	00000004 m_ocr
20033e58 l     O .bss	00000004 m_rca
20034728 l     O .bss	00000004 m_busyFcn
20035464 l     O .bss	00000001 m_dmaBusy
2003472c l     O .bss	00000004 m_irqstat
20009004 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20000808 l     O .data	0000012c lookupTable
200009b8 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
0000cdec l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 Print.cpp
0000cff4 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0000d854 l     F .text.itcm	0000005c flash_wait
2003546a l     O .bss	00000001 initialized
200351e8 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mtp.c
0000ee3c l     F .text.itcm	00000010 txEvent_event
0000ee4c l     F .text.itcm	0000004c rx_event
0000ee98 l     F .text.itcm	00000064 rx_queue_transfer
2003546b l     O .bss	00000001 rx_head
20034cdc l     O .bss	00000005 rx_list
20034cf0 l     O .bss	00000014 rx_list_transfer_len
20035452 l     O .bss	00000002 rx_packet_size
2003546d l     O .bss	00000001 rx_tail
2000bb80 l     O .bss	00000080 rx_transfer
20035471 l     O .bss	00000001 tx_head
2003545c l     O .bss	00000002 tx_packet_size
2000bd00 l     O .bss	00000080 tx_transfer
20200880 l     O .bss.dma	00000800 rx_buffer
20201080 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
0000f144 l     F .text.itcm	00000060 rx_queue_transfer
2000ab80 l     O .bss	00001000 rx_buffer
0000f1a4 l     F .text.itcm	000000b4 rx_event
0000f258 l     F .text.itcm	00000090 usb_serial_flush_callback
2000be00 l     O .bss	00002000 txbuffer
0000f2e8 l     F .text.itcm	000001b8 usb_serial_write.part.0
20034cb8 l     O .bss	00000004 rx_available
20034cbc l     O .bss	00000010 rx_count
2003546c l     O .bss	00000001 rx_head
20034ccc l     O .bss	00000010 rx_index
20034ce4 l     O .bss	00000009 rx_list
20035454 l     O .bss	00000002 rx_packet_size
2003546e l     O .bss	00000001 rx_tail
2000bc00 l     O .bss	00000100 rx_transfer
20035470 l     O .bss	00000001 transmit_previous_timeout
2003545a l     O .bss	00000002 tx_available
20035472 l     O .bss	00000001 tx_head
20035473 l     O .bss	00000001 tx_noautoflush
2003545e l     O .bss	00000002 tx_packet_size
2000bd80 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20035467 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
000116bc l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0001181c l     F .text.itcm	00000018 stdio_exit_handler
00011834 l     F .text.itcm	00000040 cleanup_stdio
00011874 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strlcat.o
00000000 l    df *ABS*	00000000 libc_a-strlcpy.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
000129b0 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00017538 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
0001834c l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
00018490 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00018600 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
00018888 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00018cb8 l     F .text.itcm	00000076 __sprint_r.part.0
00019cbc l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
0001a9d8 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
0001a9e0 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
0001a9e8 l     F .text.itcm	00000008 __usb_init_veneer
0001a9f0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0001a9f8 l     F .text.itcm	00000008 ___Z12do_hibernatev_veneer
0001aa00 l     F .text.itcm	00000008 ___init_veneer
600026a0 l     F .text.code	00000008 __pwm_init_veneer
600026a8 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
600026b0 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
600026b8 l     F .text.code	00000008 __main_veneer
600026c0 l     F .text.code	00000008 __memset_veneer
600026c8 l     F .text.code	00000008 ____libc_init_array_veneer
600026d0 l     F .text.code	00000008 ___Z12estAlarmTimem_veneer
600026d8 l     F .text.code	00000008 __set_arm_clock_veneer
600026e0 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
600026e8 l     F .text.code	00000008 __delay_veneer
600026f0 l     F .text.code	00000008 __sm_set_pool_veneer
600026f8 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002700 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
0000cd34 g     F .text.itcm	000000b8 toUpcase(unsigned short)
00005794 g     F .text.itcm	00000086 MTPStorage_SD::WriteIndexRecord(unsigned long, Record const&)
000050e8 g     F .text.itcm	00000060 pushData(unsigned long*)
0000f6c8 g     F .text.itcm	00000018 usb_serial_available
00013c0c g     F .text.itcm	00000062 __any_on
0001a5c8 g     F .text.itcm	00000024 _isatty_r
0001241c g     F .text.itcm	000000ba strcpy
60001674 g     F .text.code	00000064 do_hibernate()
00009fc4 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
60001edc g     F .text.code	00000002 startup_default_late_hook
00012028 g     F .text.itcm	0000002c _lseek_r
0000c060 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000f898  w    F .text.itcm	000000d8 yield
0000aa30  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
20034c50 g     O .bss	00000060 proc_stat
2003543c g     O .bss	00000004 usb_timer1_callback
00009344 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
0000d108 g     F .text.itcm	000000a4 Print::printNumber64(unsigned long long, unsigned char, unsigned char)
2003526c g     O .bss	000001b4 storage
60002740 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20035450 g     O .bss	00000002 proc
60001ff4 g     F .text.code	00000384 configure_external_ram
0000a9b0  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00009d70  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0001a908 g     F .text.itcm	0000005a .hidden __floatdidf
000096d8 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
20034c48 g     O .bss	00000004 procCount
0000a514 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
20034bb0 g     O .bss	00000028 k_string
20034730 g     O .bss	00000004 FsDateTime::callback
20034994 g     O .bss	00000001 __lock___atexit_recursive_mutex
000187f4 g     F .text.itcm	0000004c _wcrtomb_r
00009840 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0000b114 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
0000d08c g     F .text.itcm	0000001c Print::println()
20000b80 g     O .data	00000070 vtable for DedicatedSpiCard
20034c4c g     O .bss	00000004 procMiss
00011b6c g     F .text.itcm	00000020 __sseek
00011948 g     F .text.itcm	0000003c __sinit
00007030 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
00013c8c g     F .text.itcm	000000a4 fcvtbuf
0001a4ec g     F .text.itcm	000000b0 __swbuf_r
00003fa8 g     F .text.itcm	00000044 usb_init_events
00010444 g     F .text.itcm	0000000c __malloc_unlock
20034768 g     O .bss	00000004 FsVolume::m_cwv
00004bd8 g     F .text.itcm	00000008 getStore()
00008a9c g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
2000de08 g     O .bss	00000004 SerNum
20035466 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
0000a9a4  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
60002640 g     F .text.code	00000054 analog_init
000116b0 g     F .text.itcm	0000000c _strtod_r
00001cec g     F .text.itcm	00000148 estAlarmTime(unsigned long)
00011b94 g     F .text.itcm	0000004a _vdprintf_r
00008804 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000adec g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
0000d8b0 g     F .text.itcm	00000048 eeprom_initialize
00001bec g     F .text.itcm	00000100 saveData(short)
20035456 g     O .bss	00000002 shift
20008a08 g     O .data	00000004 F_CPU_ACTUAL
00018c04 g     F .text.itcm	000000b4 _sfread_r
00011cc0 g     F .text.itcm	000000f8 memmove
00005c0c g     F .text.itcm	00000088 MTPStorage_SD::StartGetObjectHandles(unsigned long, unsigned long)
20034bf8 g     O .bss	00000004 max_stat
000119e4 g     F .text.itcm	00000088 snprintf
00001e7c g     F .text.itcm	00000040 hibernate_init()
0000c618 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
000131fc g     F .text.itcm	0000004c _Balloc
0001aa1c g       .ARM.exidx	00000000 __exidx_end
0000a2f4 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
20035465 g     O .bss	00000001 EventResponder::runningFromYield
0000ca64 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
0000a88c g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
0000e3dc g     F .text.itcm	00000060 tempmonGetTemp
20008a20 g     O .data	00000004 __atexit_recursive_mutex
000120d0 g     F .text.itcm	0000000c __errno
00004508 g     F .text.itcm	000000c4 saveParameters()
60001000 g     O .text.headers	00000020 ImageVectorTable
20034740 g     O .bss	00000004 EventResponder::firstInterrupt
0000eda4 g     F .text.itcm	00000028 usb_transfer_status
00002640 g     F .text.itcm	000000ac MTPD::GetObjectHandles(unsigned long, unsigned long)
0000fb2c g     F .text.itcm	00000084 sm_set_pool
20034748 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
00005414 g     F .text.itcm	00000004 rtcGetTimestamp()
20034b0c g     O .bss	00000004 __stdio_exit_handler
00004be0 g     F .text.itcm	000004e0 decodeConfigfromFile(char*)
00008598 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0001a964 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
0000ee34  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0001a59c g     F .text.itcm	0000002c _fstat_r
20007ae0 g     O .data	00000370 digital_pin_to_info_PGM
20034b4c g     O .bss	00000004 errno
0000ca7c g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00008308 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
00011b28 g     F .text.itcm	00000004 __seofread
0001aa18 g       .text.itcm	00000000 _etext
00009b8c g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200096c0 g       .bss	00000000 _sbss
0000b640 g     F .text.itcm	0000000c SdioCard::errorData() const
00005548 g     F .text.itcm	00000038 MTPStorage_SD::totalSize(unsigned long)
00001260 g     F .text.itcm	000000d4 loadConfigfromFile()
00006668 g     F .text.itcm	000000f8 MTPStorage_SD::copy(unsigned long, unsigned long, unsigned long)
0000c7f0 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
000084b8 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
60002840 g       *ABS*	00000000 _stextload
00000264 g     F .text.itcm	00000224 loop
0000f970 g     F .text.itcm	0000007a flexpwm_init
0000d994 g     F .text.itcm	000000ec eepromemu_flash_write
60001ee0 g     F .text.code	00000004 startup_debug_reset
0000ec68 g     F .text.itcm	00000064 usb_config_rx
00002474 g     F .text.itcm	000001cc MTPD::GetStorageInfo(unsigned long)
00006dc8 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0000c448 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
2003473c g     O .bss	00000004 EventResponder::lastInterrupt
0000a73c g     F .text.itcm	00000028 FsBaseFile::close()
0000ce54 g     F .text.itcm	00000048 SPIClass::end()
0000dc9c g     F .text.itcm	00000134 memcpy
00013020 g     F .text.itcm	000001b0 __hexnan
00005e10 g     F .text.itcm	0000024c MTPStorage_SD::removeFile(unsigned long, char*)
0000aaa4 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0000cbf8 g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
00005a54 g     F .text.itcm	000001b8 MTPStorage_SD::ScanDir(unsigned long, unsigned long)
200096c0 g     O .data	00000000 .hidden __TMC_END__
0000838c g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
000059c8 g     F .text.itcm	0000008c MTPStorage_SD::OpenFileByIndex(unsigned long, unsigned long)
00008df0 g     F .text.itcm	00000028 FatFile::peek()
000045cc g     F .text.itcm	00000094 menu1(short)
20034c28 g     O .bss	00000004 nbuf
00013d30 g     F .text.itcm	00001b44 _svfprintf_r
0001a890 g     F .text.itcm	00000022 .hidden __floatsidf
20035424 g     O .bss	00000004 systick_millis_count
000079d0 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
0000f048 g     F .text.itcm	00000030 usb_mtp_available
00000488 g     F .text.itcm	00000058 setup1()
000036e0 g     F .text.itcm	000008c8 MTPD::loop()
0000fbbc g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
20035475 g     O .bss	00000001 usb_configuration
0000a998  w    F .text.itcm	00000006 SdCardInterface::status()
0000fae0 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000c6b0 g     F .text.itcm	00000030 SdioCard::syncDevice()
0000b8ec g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
0000013c  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00008e18 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00013b4c g     F .text.itcm	00000062 __ratio
0000aed8 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
60002740  w    O .text.progmem	00000018 usb_string_manufacturer_name
60002718 g     O .text.progmem	00000008 usb_string_mtp
0000feb8 g     F .text.itcm	00000010 malloc
000001fc g     F .text.itcm	00000010 reboot()
20000c18  w    O .data	00000024 vtable for FsFile
0000e3bc  w    F .text.itcm	0000000a _fstat
00018858 g     F .text.itcm	00000006 iswspace
00017480 g     F .text.itcm	00000040 __assert_func
00005490 g     F .text.itcm	00000002 XRTCprintTime()
20000328 g     O .data	000000c8 __mprec_tens
60002504 g     F .text.code	000000e8 usb_init
0000a688 g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
20035268 g     O .bss	00000004 sessionID_
0000a9a0  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
200349d0 g     O .bss	00000004 __malloc_top_pad
0000e1a8 g     F .text.itcm	00000048 rtc_set
00018bc8 g     F .text.itcm	0000003a __ssrefill_r
20035428 g     O .bss	00000004 systick_safe_read
aaaaaaff g       *ABS*	00000000 _flexram_bank_config
00007bac g     F .text.itcm	000000e4 ExFatFile::truncate()
20008a28 g     O .data	00000000 .hidden __dso_handle
0000da80 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
0001a870 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
000173fc g     F .text.itcm	00000008 _localeconv_r
20008fd8 g     O .data	00000004 sd_str
0001879c g     F .text.itcm	00000004 _strtoull_r
0000ca0c g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00019d3c g     F .text.itcm	000002f4 __sfvwrite_r
00013450 g     F .text.itcm	0000005c __i2b
0000eefc g     F .text.itcm	000000a8 usb_mtp_configure
20000000 g       .data	00000000 _sdata
20009002 g     O .data	00000002 t_on
600027c8 g     O .text.progmem	00000069 usb_config_descriptor_480
0000fbec g     F .text.itcm	000002c8 .hidden __udivmoddi4
00002f6c g     F .text.itcm	00000226 MTPD::getObjectPropValue(unsigned long, unsigned long)
0001a5ec g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000ca5c g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
000086c4 g     F .text.itcm	00000034 FatFile::addCluster()
00012080 g     F .text.itcm	00000024 _sbrk_r
20035446 g     O .bss	00000002 d_rep
0000b6b8 g     F .text.itcm	0000001c SdioCard::type() const
60001ed4 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
0000f750 g     F .text.itcm	00000020 usb_serial_getchar
2003542c g     O .bss	00000008 usb_cdc_line_coding
0000d790 g     F .text.itcm	00000054 digitalWrite
20034744 g     O .bss	00000004 EventResponder::lastYield
00006da0 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00012054 g     F .text.itcm	0000002c _read_r
000000ec  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
0000aa24  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
000170c4 g     F .text.itcm	000000c6 _fclose_r
20034b50 g     O .bss	00000010 extmem_smalloc_pool
200349c8 g     O .bss	00000004 __malloc_max_sbrked_mem
0000afdc g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000d7e4 g     F .text.itcm	00000070 pinMode
00005dbc g     F .text.itcm	00000054 MTPStorage_SD::read(unsigned long, unsigned long, char*, unsigned long)
0000d1b0 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
0001a8b4 g     F .text.itcm	00000042 .hidden __extendsfdf2
00015874 g     F .text.itcm	00001850 __ssvfscanf_r
0001a5f8 g     F .text.itcm	00000276 .hidden __adddf3
00002a14 g     F .text.itcm	00000088 MTPD::getObjectPropsSupported(unsigned long)
60026c00 g     O .text.csf	00000c00 hab_csf
0000a34c g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
000139b4 g     F .text.itcm	000000c2 __b2d
00000dec g     F .text.itcm	00000002 adc_init()
0001aa14 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
000009f8  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
0000e3c8  w    F .text.itcm	00000004 _isatty
20035444 g     O .bss	00000002 d_0
20034738 g     O .bss	00000004 EventResponder::firstYield
0000cc9c g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
000000a4  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00010468 g     F .text.itcm	000003d8 _realloc_r
000120dc g     F .text.itcm	00000048 __libc_init_array
0000de38 g     F .text.itcm	0000034c dtostrf
000075ac g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0000b64c g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20000d74 g     O .data	00000100 __hexdig
00007920 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00006760 g     F .text.itcm	0000006e mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*)
0001a220 g     F .text.itcm	00000066 _fputwc_r
20000300 g     O .data	00000028 __mprec_bigtens
00013300 g     F .text.itcm	000000b0 __s2b
0000b30c  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0000e3d4  w    F .text.itcm	00000004 abort
0000ee24  w    F .text.itcm	00000004 usb_serial_class::clear()
0001a870 g     F .text.itcm	0000001e .hidden __floatunsidf
0000e37c  w    F .text.itcm	00000034 _sbrk
6001d25c g       *ABS*	00000000 _sdataload
000137b8 g     F .text.itcm	00000042 __mcmp
000063e4 g     F .text.itcm	0000015c mSD_Base::sd_copy(unsigned long, char*, unsigned long, char*)
20008a24 g     O .data	00000004 __brkval
20035474 g     O .bss	00000001 usb_cdc_line_rtsdtr
60002694 g     F .text.code	00000000 _init
0000f4a0 g     F .text.itcm	00000002 usb_serial_reset
00008770 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0000db38 g     F .text.itcm	00000134 eeprom_write_byte
0001a998 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
6000275c g     O .text.progmem	00000069 usb_config_descriptor_12
00010840 g     F .text.itcm	00000e70 _strtod_l
00012fe8 g     F .text.itcm	00000036 __match
200354a0 g       .bss	00000000 _ebss
0000c0e8 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000020d8 g     F .text.itcm	0000033c MTPD::WriteDescriptor()
20008fd0 g     O .data	00000004 propertyListNum
000000d8  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
000133b0 g     F .text.itcm	00000040 __hi0bits
00006d08 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
600016d8 g     F .text.code	0000009c CrashReportClass::clear()
00007a74 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20201880 g       .bss.dma	00000000 _heap_start
00002414 g     F .text.itcm	00000060 MTPD::WriteStorageIDs()
00005cf0 g     F .text.itcm	000000b4 MTPStorage_SD::GetObjectInfo(unsigned long, char*, unsigned long long*, unsigned long*, unsigned short*, char*, char*)
20034998 g     O .bss	00000001 __lock___malloc_recursive_mutex
20008ffe g     O .data	00000002 h_4
00006a50 g     F .text.itcm	000002b8 MTPStorage_SD::move(unsigned long, unsigned long, unsigned long)
000085b0 g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
000009f8  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
200349d4 g     O .bss	00000138 __sf
20008a00 g     O .data	00000004 CrashReport
20034d1c g     O .bss	000004cc sdx
0000ad04 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000004e0 g     F .text.itcm	0000024c storage_configure()
00000004 g       *ABS*	00000000 _itcm_block_count
20009720 g     O .bss	00000020 endpoint0_transfer_data
00009dac g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000cb5c g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
0000ddd0 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000f9ec g     F .text.itcm	000000f4 pwm_init
0001a5f8 g     F .text.itcm	00000276 .hidden __aeabi_dadd
20034b60 g     O .bss	00000050 file
20009005 g     O .data	00000001 usb_mtp_status
60027800 g       .text.csf	00000000 __text_csf_end
60002378 g     F .text.code	0000005c usb_pll_start
00013608 g     F .text.itcm	000000c0 __pow5mult
00009048 g     F .text.itcm	00000090 FatFile::rmdir()
20000b74 g     O .data	0000000c vtable for CrashReportClass
0001a8f8 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
0000a234 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
0000b514  w    F .text.itcm	00000002 SdioCard::end()
20009700 g     O .bss	00000020 endpoint0_transfer_ack
20035434 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000ed60 g     F .text.itcm	00000028 usb_transmit
0000cfcc g     F .text.itcm	00000020 systick_isr
00012130 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00005418 g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
20008a0c g     O .data	00000010 Serial
20034bd8 g     O .bss	00000020 logBuffer
0000cfec  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
0000a814 g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
60001ed4  w    F .text.code	00000002 startup_early_hook
000075e0 g     F .text.itcm	00000092 ExFatFile::addCluster()
0000abb0 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
0000f684 g     F .text.itcm	00000044 usb_serial_peekchar
00011984 g     F .text.itcm	0000000c __sfp_lock_acquire
000124e0 g     F .text.itcm	00000000 memchr
0000d3a4 g     F .text.itcm	000002f0 set_arm_clock
20035420 g     O .bss	00000004 systick_cycle_count
20008fe0 g     O .data	00000016 usb_string_serial_number_default
000127a4 g     F .text.itcm	0000020c _free_r
0000b17c g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
0001a3b4 g     F .text.itcm	00000060 category
0000b384 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0000bc34 g     F .text.itcm	000000b8 SdioCard::readStop()
0000a9a8  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011ff8 g     F .text.itcm	0000000c __locale_mb_cur_max
00018840 g     F .text.itcm	00000016 _wcsrtombs_r
20034804 g     O .bss	00000190 __atexit0
00006540 g     F .text.itcm	00000126 MTPStorage_SD::CopyFiles(unsigned long, unsigned long, unsigned long)
0000ee2c  w    F .text.itcm	00000004 usb_serial_class::flush()
00018b48 g     F .text.itcm	00000080 _sungetc_r
0001a5f4 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20008fa0 g     O .data	00000004 __malloc_sbrk_base
0000d314  w    F .text.itcm	00000004 usb_serial_class::read()
000185fc g     F .text.itcm	00000004 _strtoll_r
00009c60 g     F .text.itcm	00000110 FatFile::remove()
0001a8f8 g     F .text.itcm	0000006a .hidden __floatundidf
0000e3cc  w    F .text.itcm	00000006 _lseek
00000dfc g     F .text.itcm	00000002 adcStatus()
000136c8 g     F .text.itcm	000000f0 __lshift
000089b0 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
000017e0 g     F .text.itcm	0000040c storeData(short)
0000ed30 g     F .text.itcm	00000030 usb_prepare_transfer
0000a9ac  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000e1f0 g     F .text.itcm	0000018c unused_interrupt_vector
00018a48 g     F .text.itcm	00000100 __ssprint_r
20035438 g     O .bss	00000004 usb_timer0_callback
600023d4 g     F .text.code	00000130 tempmon_init
000095b4 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00011bfc g     F .text.itcm	00000062 _vasnprintf_r
00001e68 g     F .text.itcm	00000014 powerDown()
0001267c g     F .text.itcm	00000088 __register_exitproc
0000a9b4 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000074b4 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000d8f8 g     F .text.itcm	0000007c eeprom_read_byte
00011ec4 g     F .text.itcm	00000044 strlcpy
00011f08 g     F .text.itcm	0000008a strncmp
000094f8 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00007ad4 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
0000f6e0 g     F .text.itcm	00000070 usb_serial_flush_input
20008fcc g     O .data	00000004 fsamp
0000844c g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
00005964 g     F .text.itcm	00000064 MTPStorage_SD::ConstructFilename(int, char*, int)
000134ac g     F .text.itcm	0000015c __multiply
000050c0 g     F .text.itcm	0000001c getDataCount()
0000f770 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00011f94 g     F .text.itcm	00000064 strncpy
200349a0 g     O .bss	00000028 __malloc_current_mallinfo
00000c70 g     F .text.itcm	0000008c i2s_setup()
00013a78 g     F .text.itcm	000000d4 __d2b
0000b3ec g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
0000b50c  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
600025ec g     F .text.code	00000054 _reboot_Teensyduino_
0000b6a8  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001ed8 g     F .text.code	00000002 startup_default_middle_hook
00000cfc g     F .text.itcm	000000a4 dma_setup()
00010450 g     F .text.itcm	00000018 realloc
0000aa40 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000ae64 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
0000bb60 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
0001848c g     F .text.itcm	00000004 _strtoul_r
0000f078 g     F .text.itcm	000000cc usb_mtp_send
0000e688 g     F .text.itcm	000005e0 usb_isr
00011804 g     F .text.itcm	0000000c __cxa_atexit
00006e64 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
00012004 g     F .text.itcm	00000024 _close_r
00009f80  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0001a890 g     F .text.itcm	00000022 .hidden __aeabi_i2d
0000ac3c g     F .text.itcm	0000006e SharedSpiCard::readStop()
0000cb04 g     F .text.itcm	00000056 FsCache::sync()
00011c60 g     F .text.itcm	00000060 memcmp
20000bf0  w    O .data	00000028 vtable for usb_serial_class
0000caa0 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
00012128 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00003194 g     F .text.itcm	000000f6 MTPD::GetObject(unsigned long)
0000c8e4 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
20034d14 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00011aac g     F .text.itcm	00000058 sscanf
0001a0a8 g     F .text.itcm	000000cc __swsetup_r
0000139c g     F .text.itcm	00000014 stopSD()
0000feb4  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00007728 g     F .text.itcm	0000005e ExFatFile::rmdir()
00002a9c g     F .text.itcm	000004ce MTPD::getObjectPropDesc(unsigned long, unsigned long)
0000af74 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
00013bb0 g     F .text.itcm	0000005c __copybits
00005544 g     F .text.itcm	00000004 MTPStorage_SD::has_directories(unsigned long)
20008b98 g     O .data	00000408 __malloc_av_
20034800 g     O .bss	00000004 __atexit
00011b04 g     F .text.itcm	00000022 __sread
0000152c g     F .text.itcm	00000098 wavHeaderWrite(char*)
0000d974 g     F .text.itcm	0000001e eeprom_read_block
0000f804 g     F .text.itcm	00000094 usb_serial_flush_output
00010438 g     F .text.itcm	0000000c __malloc_lock
00007f5c g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
20009400 g     O .data	000002c0 _VectorsRam
0000cab4 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000172bc g     F .text.itcm	00000054 _fflush_r
000174c0 g     F .text.itcm	00000078 _calloc_r
00003378 g     F .text.itcm	00000070 MTPD::read(char*, unsigned long)
000015c4 g     F .text.itcm	000000d0 makeHeader(long*)
000098f4 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20009000 g     O .data	00000002 t_acq
20035478 g     O .bss	00000001 yield_active_check_flags
000078c0 g     F .text.itcm	0000005e ExFatFile::sync()
0001212c g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20035476 g     O .bss	00000001 usb_high_speed
00008e5c g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0000ba98 g     F .text.itcm	0000007c SdioCard::isBusy()
00011db8 g     F .text.itcm	000000a4 memset
0000dc8c g     F .text.itcm	00000010 main
200349cc g     O .bss	00000004 __malloc_max_total_mem
00008094 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00012124 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200800 g     O .bss.dma	00000069 usb_descriptor_buffer
0000019c g     F .text.itcm	00000060 resetUSB()
0000b454 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00007c90 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
00003468 g     F .text.itcm	00000154 MTPD::SendObjectInfo(unsigned long, unsigned long)
00011e5c g     F .text.itcm	00000066 strlcat
000087b0 g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
00011b8c g     F .text.itcm	00000008 __sclose
0000edcc g     F .text.itcm	00000058 usb_init_serialnumber
00011800 g     F .text.itcm	00000004 _strtol_r
60002718 g       .text.code	00000000 __init_array_end
00017660 g     F .text.itcm	00000cec _dtoa_r
0000fed8 g     F .text.itcm	00000560 _malloc_r
0000b0ac g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
00013c70 g     F .text.itcm	0000001a __ascii_wctomb
000013f4 g     F .text.itcm	00000138 writeHeaderInfo(char*, int)
0001a908 g     F .text.itcm	0000005a .hidden __aeabi_l2d
2003476c g     O .bss	00000004 FatVolume::m_cwv
00001ebc g     F .text.itcm	00000030 hibernate_now(unsigned long)
00000244 g     F .text.itcm	00000020 stopSystem()
0001a030 g     F .text.itcm	00000076 __submore
20000cac  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000d31c g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
0000ce4c g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0000d73c g     F .text.itcm	00000054 micros
00007788 g     F .text.itcm	00000138 ExFatFile::syncDir()
00012704 g     F .text.itcm	000000a0 _malloc_trim_r
0001a288 g     F .text.itcm	00000106 _wcsnrtombs_l
60002758 g     O .text.progmem	00000004 string0
0000f79c g     F .text.itcm	00000018 usb_serial_write
60001edc  w    F .text.code	00000002 startup_late_hook
0000b4ec g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000ee28  w    F .text.itcm	00000004 usb_serial_class::available()
00012148 g     F .text.itcm	000002dc strcmp
000033e8 g     F .text.itcm	00000048 MTPD::readstring(char*)
00009338 g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000300 endpoint_queue_head
60002720  w    O .text.progmem	00000020 usb_string_product_name
0000d694 g     F .text.itcm	000000a8 delay
0001a998 g     F .text.itcm	00000040 .hidden __fixunsdfdi
2003544a g     O .bss	00000002 dma_channel_allocated_mask
00006d7c g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
0001aa10 g     F .fini	00000000 _fini
0000ab30 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
000075bc g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
00011a6c g     F .text.itcm	00000040 sprintf
0000d0c4 g     F .text.itcm	0000001c Print::printf(char const*, ...)
0000d074 g     F .text.itcm	00000016 Print::print(long)
00008790 g     F .text.itcm	0000001e FatFile::close()
0000e3d8 g     F .text.itcm	00000004 Panic_Temp_isr
0001a964 g     F .text.itcm	00000030 .hidden __fixdfdi
00000ad0 g     F .text.itcm	000001a0 setAudioFrequency(int)
000050dc g     F .text.itcm	0000000c queue_isBusy()
20008fd4 g     O .data	00000004 sd
00008844 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
0001a390 g     F .text.itcm	00000024 _wcsnrtombs_r
0000b6a4  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000124  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
000120a4 g     F .text.itcm	0000002c _write_r
00018860 g     F .text.itcm	00000028 iswspace_l
20034d18 g     O .bss	00000004 sdSectorCount
0000be08 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
20035442 g     O .bss	00000002 again
0000020c g     F .text.itcm	00000038 lowPowerInit()
00001334 g     F .text.itcm	00000068 filing_init()
0000efa4 g     F .text.itcm	000000a4 usb_mtp_recv
00012670 g     F .text.itcm	0000000c nanf
20008fb4 g     O .data	00000004 _impure_ptr
00007004 g     F .text.itcm	0000002c ExFatFile::peek()
0001718c g     F .text.itcm	00000130 __sflush_r
20000b50  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
000187a0 g     F .text.itcm	00000054 _mbrtowc_r
0000a970 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
0001199c g     F .text.itcm	00000046 _fwalk_sglue
0000b634 g     F .text.itcm	0000000c SdioCard::errorCode() const
00008ba0 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000188  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002708 g       .text.code	00000000 __preinit_array_end
60001774 g     F .text.code	00000704 CrashReportClass::printTo(Print&) const
000010a0 g     F .text.itcm	00000080 dateTime(unsigned short*, unsigned short*, unsigned char*)
00001720 g     F .text.itcm	000000c0 newFileName(char*)
00001120  w    F .text.itcm	00000018 FsFile::~FsFile()
0000824c g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000605c g     F .text.itcm	000000b6 MTPStorage_SD::DeleteObject(unsigned long)
000131d0 g     F .text.itcm	0000002a __ascii_mbtowc
2003544c g     O .bss	00000002 h_1
00013950 g     F .text.itcm	00000064 __ulp
0000e65c g     F .text.itcm	0000002c usb_stop_sof_interrupts
00000834 g     F .text.itcm	000001c4 setup
20008844 g     O .data	00000078 usb_descriptor_list
0000bb14 g     F .text.itcm	00000020 SdioCard::status()
0000574c g     F .text.itcm	00000048 MTPStorage_SD::ResetIndex()
00008824 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
00000df0 g     F .text.itcm	00000002 adc_exit()
00012660 g     F .text.itcm	00000010 nan
20034c2c g     O .bss	00000004 nout_dat
00008c48 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
0000328c g     F .text.itcm	000000ec MTPD::GetPartialObject(unsigned long, unsigned long, unsigned long)
00008c0c g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20034734 g     O .bss	00000004 ExFatVolume::m_cwv
20060000 g       .text.csf	00000000 _estack
0000a888 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
0000cf50 g     F .text.itcm	00000034 DMAChannel::release()
00004660 g     F .text.itcm	000000d4 loadParameters()
0000f7b4 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00000df4 g     F .text.itcm	00000002 usbPowerSetup()
00017398 g     F .text.itcm	00000064 stpncpy
20008fa8 g     O .data	0000000c __sglue
0000f4a4 g     F .text.itcm	00000100 usb_serial_configure
0000d0a8  w    F .text.itcm	0000001c _write
200096c0 g       .data	00000000 _edata
0000834c g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20035469 g     O .bss	00000001 external_psram_size
000026ec g     F .text.itcm	00000328 MTPD::GetObjectInfo(unsigned long)
0000b6a4  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000cbac g     F .text.itcm	0000004c FsName::get16()
0000aa24  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000b038 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0000acc4 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00008028 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
000086f8 g     F .text.itcm	00000078 FatFile::addDirCluster()
0001a174 g     F .text.itcm	000000aa __fputwc
0000ee30  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00009ff8 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
00000da0 g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
0000ddd4 g     F .text.itcm	00000062 ultoa
20008ffc g     O .data	00000002 h_3
20035448 g     O .bss	00000002 dgain
0000a764 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
000058dc g     F .text.itcm	00000088 MTPStorage_SD::ReadIndexRecord(unsigned long)
00011b2c g     F .text.itcm	0000003e __swrite
0000cf84 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00004ab0 g     F .text.itcm	00000128 menu(short)
20008fa4 g     O .data	00000004 __malloc_trim_threshold
0000d318  w    F .text.itcm	00000004 usb_serial_class::peek()
00011810 g     F .text.itcm	0000000a fcvtf
0000b510  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00005430 g     F .text.itcm	0000002e rtcSetDate(int, int, int)
00005c94 g     F .text.itcm	0000005c MTPStorage_SD::GetNextObjectHandle(unsigned long)
00018a20 g     F .text.itcm	00000028 fiprintf
00018d30 g     F .text.itcm	00000f8c _vfiprintf_r
00005460 g     F .text.itcm	0000002e rtcSetTime(int, int, int)
0000c8e8  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
00000070  w    F .text.itcm	00000034 MTPStorage_SD::~MTPStorage_SD()
20009740 g     O .bss	00001440 mtpd
000137fc g     F .text.itcm	00000154 __mdiff
00005148 g     F .text.itcm	0000005c pullData(unsigned long*)
0000b694 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00006114 g     F .text.itcm	000000e6 MTPStorage_SD::Create(unsigned long, unsigned long, bool, char const*)
20034c00 g     O .bss	00000028 n_string
00008284 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00009e6c g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
200088e0 g     O .data	00000120 _impure_data
0000711c g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
000189bc g     F .text.itcm	00000064 _jp2uc_l
00004240 g     F .text.itcm	000002c8 menu3()
00011990 g     F .text.itcm	0000000c __sfp_lock_release
20034bfc g     O .bss	00000004 mtp_txEventCount
000013b0 g     F .text.itcm	00000044 timeStamp()
0000bc34 g     F .text.itcm	000000b8 SdioCard::writeStop()
00017310 g     F .text.itcm	00000088 __sccl
00006d44 g     F .text.itcm	00000014 ExFatFile::close()
20000ed8 g     O .data	00000101 _ctype_
0000e3b0  w    F .text.itcm	00000004 _read
60002708 g       .text.code	00000000 __init_array_start
0000feb4  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001e78 g     F .text.code	0000005c CrashReportClass::operator bool()
20008a04 g     O .data	00000004 F_BUS_ACTUAL
20034b38 g     O .bss	00000004 disk_count
000051a4 g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
0000a638 g     F .text.itcm	00000050 FatVolume::chdir(char const*)
00004034 g     F .text.itcm	0000020c printPar()
20008ffa g     O .data	00000002 h_2
00005318 g     F .text.itcm	000000fc date2time(datetime_t*)
0001a414 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000ce9c g     F .text.itcm	000000b4 DMAChannel::begin(bool)
0000aa28  w    F .text.itcm	00000006 SharedSpiCard::end()
00012580 g     F .text.itcm	000000dc strlen
00008bb0 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
000090d8 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
00012a54 g     F .text.itcm	00000594 __gethex
60002720 g     O .text.progmem	00000020 usb_string_product_name_default
00000df8 g     F .text.itcm	00000002 setAGain(signed char)
00011be0 g     F .text.itcm	0000001c vdprintf
0000b6d4 g     F .text.itcm	00000068 SdioCard::sectorCount()
0000926c g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
60001ed8  w    F .text.code	00000002 startup_middle_hook
20000c3c g     O .data	00000070 vtable for SdioCard
0001a8b4 g     F .text.itcm	00000042 .hidden __aeabi_f2d
00006214 g     F .text.itcm	000000d6 MTPStorage_SD::close()
00009f7c g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
60001ee4 g     F .text.code	00000110 configure_cache
0000dc6c g     F .text.itcm	0000001e eeprom_write_block
00000070  w    F .text.itcm	00000034 MTPStorage_SD::~MTPStorage_SD()
0000b508  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
000062ec g     F .text.itcm	000000f8 MTPStorage_SD::rename(unsigned long, char const*)
0000b294  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
00001694 g     F .text.itcm	0000008c newDirectory(char*)
0000c544 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00004734 g     F .text.itcm	0000037c menu2()
0000c9f8 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
00000e00 g     F .text.itcm	000002a0 compress(void*)
00005540 g     F .text.itcm	00000004 MTPStorage_SD::readonly(unsigned long)
0001a5f4 g     F .text.itcm	0000027a .hidden __subdf3
60002708 g       .text.code	00000000 __preinit_array_start
0000ed88 g     F .text.itcm	0000001c usb_receive
00008154 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00005da4 g     F .text.itcm	00000016 MTPStorage_SD::GetSize(unsigned long)
20035458 g     O .bss	00000002 t_rep
000133f0 g     F .text.itcm	00000060 __lo0bits
00008200 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
20008fdc g     O .data	00000004 tempDatai
00009188 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00027800 g       *ABS*	00000000 _flashimagelen
0000acac g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
0000fbb0 g     F .text.itcm	0000000a __aeabi_atexit
00001120  w    F .text.itcm	00000018 FsFile::~FsFile()
0000e184 g     F .text.itcm	00000024 rtc_get
00007674 g     F .text.itcm	000000b4 ExFatFile::remove()
00017408 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000cfc8 g     F .text.itcm	00000004 pendablesrvreq_isr
000061fc g     F .text.itcm	00000018 MTPStorage_SD::write(unsigned char const*, unsigned long)
000035bc g     F .text.itcm	00000124 MTPD::SendObject()
2003544e g     O .bss	00000002 monitor
20008ff8 g     O .data	00000002 d_on
00005580 g     F .text.itcm	000001cc MTPStorage_SD::usedSize(unsigned long)
20034b10 g     O .bss	00000028 b_string
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20008a2c g     O .data	0000016c __global_locale
0000c170 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
00006d58 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000f5a4 g     F .text.itcm	000000e0 usb_serial_read
2003499c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000d0e0 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000eccc g     F .text.itcm	00000064 usb_config_tx
0000e3b4  w    F .text.itcm	00000006 _close
0000a2d0 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
0000fec8 g     F .text.itcm	00000010 free
00007f10 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0001325c g     F .text.itcm	000000a4 __multadd
00013248 g     F .text.itcm	00000012 _Bfree
00009dd8 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
20008fe0  w    O .data	00000016 usb_string_serial_number
0000c6e0 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0000b670 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)



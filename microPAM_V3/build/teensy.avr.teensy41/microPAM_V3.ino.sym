
C:\Users\zimme\AppData\Local\Temp\arduino\sketches\A5394982E70389E0D0C97A4E173256C7/microPAM_V3.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600026b0 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00019840 l    d  .fini	00000000 .fini
00019844 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200096c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
600256e4 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 CrashReport.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20042c38 l     O .bss	00000004 s_hotCount
20042c3c l     O .bss	00000004 s_hotTemp
20042c40 l     O .bss	00000004 s_hot_ROOM
20042c44 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000d274 l     F .text.itcm	000000c8 endpoint0_receive
0000d33c l     F .text.itcm	00000088 schedule_transfer
0000d3c4 l     F .text.itcm	00000036 run_callbacks
0000d3fc l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20042ac0 l     O .bss	00000008 endpoint0_buffer
20042ac8 l     O .bss	00000004 endpoint0_notify_mask
2000bdc0 l     O .bss	00000008 endpoint0_setupdata
20042acc l     O .bss	00000004 endpointN_notify_mask
20042be4 l     O .bss	00000008 reply_buffer
2004332a l     O .bss	00000001 sof_usage
20043332 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20043324 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20042b64 l     O .bss	00000000 object.0
600026a0 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 microPAM_V3.ino.cpp
0000006c l     F .text.itcm	00000002 __tcf_0
000006d0 l     F .text.itcm	000000ec _GLOBAL__sub_I_storage
2000bdcc l     O .bss	00000004 guard variable for loop::status
20042320 l     O .bss	00000004 loop::t0
20043304 l     O .bss	00000002 loop::mxb
20043306 l     O .bss	00000002 loop::status
20042324 l     O .bss	00000004 loop::loopCount
2000094c l     O .data	00000027 version
00000000 l    df *ABS*	00000000 Acq.cpp
000009ec l     F .text.itcm	000000c8 acq_isr()
00000db0 l     F .text.itcm	00000024 _GLOBAL__sub_I_procCount
200413dc l     O .bss	00000008 dma
20200000 l     O .bss.dma	00000800 i2s_buffer
00000000 l    df *ABS*	00000000 Filing.cpp
00001148 l     F .text.itcm	00000058 checkEndOfFile(short) [clone .part.0]
000011a0 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
2000bdd0 l     O .bss	00002400 diskBuffer
2003e3dc l     O .bss	00003000 tempBuffer0
00001b28 l     F .text.itcm	00000034 _GLOBAL__sub_I_t_acq
2000e1d0 l     O .bss	00000200 fileHeader
20041834 l     O .bss	00000050 dirName
20041c84 l     O .bss	00000200 wav_hdr
20041e84 l     O .bss	00000050 fileName
2004231c l     O .bss	00000004 checkEndOfFile(short)::dta
2004232c l     O .bss	00000050 timeStamp()::date_time
20008a64 l     O .data	00000004 newFolder(int)::d0
00000000 l    df *ABS*	00000000 usb_desc.c
20009000 l     O .data	00000012 device_descriptor
600027cc l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 Adc.cpp
00000000 l    df *ABS*	00000000 Compress.cpp
200413e4 l     O .bss	00000400 dout
20041884 l     O .bss	00000400 outData
20041ed4 l     O .bss	00000400 tempData
20042328 l     O .bss	00000004 compress(void*)::nout
00000000 l    df *ABS*	00000000 MTP.cpp
00001c38 l     F .text.itcm	0000007c MTPD::write(char const*, int) [clone .part.0]
00001cb4 l     F .text.itcm	0000009c MTPD::writestring(char const*) [clone .part.0]
00001d50 l     F .text.itcm	000000b4 MTPD::GetDevicePropDesc(unsigned long) [clone .part.0]
0000311c l     F .text.itcm	00000038 MTPD::setObjectPropValue(unsigned long, unsigned long) [clone .part.0]
200423a4 l     O .bss	00000004 MTPD::read(char*, unsigned long)::index
200423a8 l     O .bss	00000004 MTPD::write(char const*, int)::dst
2000090c l     O .data	00000010 propertyList
2000091c l     O .data	00000028 supported_op
20000944 l     O .data	00000008 supported_events
00000000 l    df *ABS*	00000000 Menu.cpp
00003bb0 l     F .text.itcm	00000040 menuGetLine()
20041814 l     O .bss	00000020 store
2004237c l     O .bss	00000028 menuGetLine()::buffer
20000974 l     O .data	00000027 version
00000000 l    df *ABS*	00000000 Queue.cpp
2000e3d8 l     O .bss	00030000 data_buffer
2000e3d4 l     O .bss	00000004 queue_busy
200417e4 l     O .bss	00000004 head
200417e8 l     O .bss	00000004 tail
00000000 l    df *ABS*	00000000 RTC.cpp
20000a88 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 Storage.cpp
00004938 l     F .text.itcm	0000003c dbgPrint(unsigned short)
0000498c l     F .text.itcm	00000070 MTPStorage_SD::OpenIndex() [clone .part.0]
00004cb4 l     F .text.itcm	000000c0 MTPStorage_SD::GenerateIndex(unsigned long) [clone .part.0]
00005380 l     F .text.itcm	0000002e MTPStorage_SD::StartGetObjectHandles(unsigned long, unsigned long) [clone .part.0]
0000565c l     F .text.itcm	000000aa MTPStorage_SD::DeleteObject(unsigned long) [clone .part.0]
00005b20 l     F .text.itcm	00000280 mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*) [clone .part.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00007918 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
000092a0 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
0000939c l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000a78c l     F .text.itcm	00000030 sdIrs()
0000a7bc l     F .text.itcm	00000014 isBusyDat()
0000a7d0 l     F .text.itcm	0000000c isBusyDMA()
0000a7dc l     F .text.itcm	000000cc setSdclk(unsigned long)
0000a9b0 l     F .text.itcm	00000128 initSDHC()
0000aad8 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0000ac14 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0000acac l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0000ada8 l     F .text.itcm	0000002c isBusyCMD13()
0000af60 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0000b178 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2004331c l     O .bss	00000001 m_initDone
2000e3d0 l     O .bss	00000004 m_sdClkKhz
2004331d l     O .bss	00000001 m_version2
2003e3d8 l     O .bss	00000004 m_errorLine
2004331e l     O .bss	00000001 m_highCapacity
2004331f l     O .bss	00000001 m_transferActive
200417ec l     O .bss	00000010 m_cid
200417fc l     O .bss	00000010 m_csd
2004180c l     O .bss	00000004 m_ocr
20041810 l     O .bss	00000004 m_rca
200422d4 l     O .bss	00000004 m_busyFcn
20043320 l     O .bss	00000001 m_dmaBusy
200422d8 l     O .bss	00000004 m_irqstat
20009058 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
200007e0 l     O .data	0000012c lookupTable
200009b4 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
0000c060 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 Print.cpp
0000c268 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mtp.c
0000dc74 l     F .text.itcm	00000010 txEvent_event
0000dc84 l     F .text.itcm	0000004c rx_event
0000dcd0 l     F .text.itcm	00000064 rx_queue_transfer
20043326 l     O .bss	00000001 rx_head
20042c10 l     O .bss	00000005 rx_list
20042c24 l     O .bss	00000014 rx_list_transfer_len
20043312 l     O .bss	00000002 rx_packet_size
20043328 l     O .bss	00000001 rx_tail
2000bb40 l     O .bss	00000080 rx_transfer
2004332c l     O .bss	00000001 tx_head
20043318 l     O .bss	00000002 tx_packet_size
2000bcc0 l     O .bss	00000080 tx_transfer
20200880 l     O .bss.dma	00000800 rx_buffer
20201080 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
0000df7c l     F .text.itcm	00000060 rx_queue_transfer
20201880 l     O .bss.dma	00001000 rx_buffer
0000dfdc l     F .text.itcm	000000b4 rx_event
0000e090 l     F .text.itcm	00000090 usb_serial_flush_callback
20202880 l     O .bss.dma	00002000 txbuffer
0000e120 l     F .text.itcm	000001b8 usb_serial_write.part.0
20042bec l     O .bss	00000004 rx_available
20042bf0 l     O .bss	00000010 rx_count
20043327 l     O .bss	00000001 rx_head
20042c00 l     O .bss	00000010 rx_index
20042c18 l     O .bss	00000009 rx_list
20043314 l     O .bss	00000002 rx_packet_size
20043329 l     O .bss	00000001 rx_tail
2000bbc0 l     O .bss	00000100 rx_transfer
2004332b l     O .bss	00000001 transmit_previous_timeout
20043316 l     O .bss	00000002 tx_available
2004332d l     O .bss	00000001 tx_head
2004332e l     O .bss	00000001 tx_noautoflush
2004331a l     O .bss	00000002 tx_packet_size
2000bd40 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20043323 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
000104f4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00010654 l     F .text.itcm	00000018 stdio_exit_handler
0001066c l     F .text.itcm	00000040 cleanup_stdio
000106ac l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-sscanf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strlcat.o
00000000 l    df *ABS*	00000000 libc_a-strlcpy.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
000117f0 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfscanf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-sccl.o
00000000 l    df *ABS*	00000000 libc_a-stpncpy.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00016378 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-strtoul.o
0001718c l     F .text.itcm	00000140 _strtoul_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoll.o
000172d0 l     F .text.itcm	0000016c _strtoll_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-strtoull.o
00017440 l     F .text.itcm	0000019c _strtoull_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-mbrtowc.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-iswspace.o
00000000 l    df *ABS*	00000000 libc_a-iswspace_l.o
00000000 l    df *ABS*	00000000 libc_a-jp2uc.o
000176c8 l     F .text.itcm	00000134 __jp2uc
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiscanf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00017af8 l     F .text.itcm	00000076 __sprint_r.part.0
00018afc l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-ungetc.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-categories.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00019818 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00019820 l     F .text.itcm	00000008 ___ZNK16CrashReportClass7printToER5Print_veneer
00019828 l     F .text.itcm	00000008 __usb_init_veneer
00019830 l     F .text.itcm	00000008 ___ZN16CrashReportClasscvbEv_veneer
00019838 l     F .text.itcm	00000008 ___init_veneer
60002640 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002648 l     F .text.code	00000008 ___ZN5Print11printNumberEmhh_veneer
60002650 l     F .text.code	00000008 ___ZN5Print5printEl_veneer
60002658 l     F .text.code	00000008 __memset_veneer
60002660 l     F .text.code	00000008 __delay_veneer
60002668 l     F .text.code	00000008 __set_arm_clock_veneer
60002670 l     F .text.code	00000008 ___ZN5Print7printlnEv_veneer
60002678 l     F .text.code	00000008 ___ZN5Print10printFloatEdh_veneer
60002680 l     F .text.code	00000008 __sm_set_pool_veneer
60002688 l     F .text.code	00000008 ____libc_init_array_veneer
60002690 l     F .text.code	00000008 __main_veneer
60002698 l     F .text.code	00000008 __pwm_init_veneer
0000bfa8 g     F .text.itcm	000000b8 toUpcase(unsigned short)
00004c34 g     F .text.itcm	00000080 MTPStorage_SD::WriteIndexRecord(unsigned long, Record const&)
000044fc g     F .text.itcm	00000074 pushData(unsigned long*)
0000e500 g     F .text.itcm	00000018 usb_serial_available
00012a4c g     F .text.itcm	00000062 __any_on
00019408 g     F .text.itcm	00000024 _isatty_r
0001125c g     F .text.itcm	000000ba strcpy
00009238 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
60001e78 g     F .text.code	00000002 startup_default_late_hook
00010e60 g     F .text.itcm	0000002c _lseek_r
0000b2d4 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000e6d0  w    F .text.itcm	000000d8 yield
00009ca4  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
20042b84 g     O .bss	00000060 proc_stat
20043300 g     O .bss	00000004 usb_timer1_callback
000085b8 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
0000c37c g     F .text.itcm	000000a4 Print::printNumber64(unsigned long long, unsigned char, unsigned char)
20043120 g     O .bss	000001b8 storage
600026d8 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20043310 g     O .bss	00000002 proc
60001f90 g     F .text.code	00000384 configure_external_ram
00009c24  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00004e5c g     F .text.itcm	0000003c MTPStorage_SD::GetObjectInfo(unsigned long, char*, unsigned long*, unsigned long*, unsigned short*)
00008fe4  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00019748 g     F .text.itcm	0000005a .hidden __floatdidf
0000894c g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
20042b7c g     O .bss	00000004 procCount
00009788 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
200422dc g     O .bss	00000004 FsDateTime::callback
20042540 g     O .bss	00000001 __lock___atexit_recursive_mutex
00017634 g     F .text.itcm	0000004c _wcrtomb_r
00008ab4 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0000a388 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
0000c300 g     F .text.itcm	0000001c Print::println()
20000bc4 g     O .data	00000070 vtable for DedicatedSpiCard
20042b80 g     O .bss	00000004 procMiss
000109a4 g     F .text.itcm	00000020 __sseek
00010780 g     F .text.itcm	0000003c __sinit
00006338 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
00012acc g     F .text.itcm	000000a4 fcvtbuf
0001932c g     F .text.itcm	000000b0 __swbuf_r
0000f27c g     F .text.itcm	0000000c __malloc_unlock
2000902c g     O .data	00000004 t_4
20042314 g     O .bss	00000004 FsVolume::m_cwv
000044cc g     F .text.itcm	00000008 getStore()
00007d10 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
2000bdc8 g     O .bss	00000004 SerNum
20043322 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
00009c18  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
600025dc g     F .text.code	00000054 analog_init
000104e8 g     F .text.itcm	0000000c _strtod_r
000109cc g     F .text.itcm	0000004a _vdprintf_r
0000a060 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
000019f8 g     F .text.itcm	00000130 saveData(short)
20009056 g     O .data	00000002 shift
20008a50 g     O .data	00000004 F_CPU_ACTUAL
00017a44 g     F .text.itcm	000000b4 _sfread_r
00010af8 g     F .text.itcm	000000f8 memmove
200432e4 g     O .bss	00000004 t_1
000053b0 g     F .text.itcm	00000066 MTPStorage_SD::StartGetObjectHandles(unsigned long, unsigned long)
20042b58 g     O .bss	00000004 max_stat
0001081c g     F .text.itcm	00000088 snprintf
0000b88c g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0001203c g     F .text.itcm	0000004c _Balloc
00001c2c  w    F .text.itcm	00000004 MTPStorage_SD::get_FSCount()
0001984c g       .ARM.exidx	00000000 __exidx_end
00009568 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
20043321 g     O .bss	00000001 EventResponder::runningFromYield
0000bcd8 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
00009b00 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
0000d214 g     F .text.itcm	00000060 tempmonGetTemp
20008a68 g     O .data	00000004 __atexit_recursive_mutex
00010f08 g     F .text.itcm	0000000c __errno
00003e34 g     F .text.itcm	000000a4 saveParameters()
60001000 g     O .text.headers	00000020 ImageVectorTable
200422ec g     O .bss	00000004 EventResponder::firstInterrupt
0000dbdc g     F .text.itcm	00000028 usb_transfer_status
000023a0 g     F .text.itcm	00000088 MTPD::GetObjectHandles(unsigned long, unsigned long)
0000e964 g     F .text.itcm	00000084 sm_set_pool
200422f4 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
200426b8 g     O .bss	00000004 __stdio_exit_handler
000078a0 g     F .text.itcm	00000018 ExFatPartition::rootLength()
000197a4 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
0000dc6c  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
000193dc g     F .text.itcm	0000002c _fstat_r
20007b24 g     O .data	00000370 digital_pin_to_info_PGM
20042ad0 g     O .bss	00000004 errno
0000bcf0 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00007610 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
00010960 g     F .text.itcm	00000004 __seofread
00019848 g       .text.itcm	00000000 _etext
00008e00 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200096c0 g       .bss	00000000 _sbss
0000a8b4 g     F .text.itcm	0000000c SdioCard::errorData() const
00004900 g     F .text.itcm	00000038 MTPStorage_SD::totalSize(unsigned long)
00005878 g     F .text.itcm	000000fc MTPStorage_SD::copy(unsigned long, unsigned long, unsigned long)
0000ba64 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
000077c0 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
600027d8 g       *ABS*	00000000 _stextload
00000204 g     F .text.itcm	00000238 loop
0000e7a8 g     F .text.itcm	0000007a flexpwm_init
60001e7c g     F .text.code	00000004 startup_debug_reset
0000daa0 g     F .text.itcm	00000064 usb_config_rx
0000218c g     F .text.itcm	000001ec MTPD::GetStorageInfo(unsigned long)
000060d0 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0000b6bc g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
200422e8 g     O .bss	00000004 EventResponder::lastInterrupt
000099b0 g     F .text.itcm	00000028 FsBaseFile::close()
0000c0c8 g     F .text.itcm	00000048 SPIClass::end()
0000cad4 g     F .text.itcm	00000134 memcpy
00011e60 g     F .text.itcm	000001b0 __hexnan
00005418 g     F .text.itcm	00000244 MTPStorage_SD::removeFile(unsigned long, char*)
00009d18 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0000be6c g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
00005218 g     F .text.itcm	00000168 MTPStorage_SD::ScanDir(unsigned long, unsigned long)
200096c0 g     O .data	00000000 .hidden __TMC_END__
00007694 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
00005054 g     F .text.itcm	0000008c MTPStorage_SD::OpenFileByIndex(unsigned long, unsigned long)
00008064 g     F .text.itcm	00000028 FatFile::peek()
00003ed8 g     F .text.itcm	00000064 menu1(short)
20042b60 g     O .bss	00000004 nbuf
00012b70 g     F .text.itcm	00001b44 _svfprintf_r
000196d0 g     F .text.itcm	00000022 .hidden __floatsidf
200432dc g     O .bss	00000004 systick_millis_count
00006cd8 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
0000de80 g     F .text.itcm	00000030 usb_mtp_available
0000043c g     F .text.itcm	00000084 setup1()
000033d8 g     F .text.itcm	000007d8 MTPD::loop()
0000e9f4 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
20043330 g     O .bss	00000001 usb_configuration
00009c0c  w    F .text.itcm	00000006 SdCardInterface::status()
0000e918 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000b924 g     F .text.itcm	00000030 SdioCard::syncDevice()
0000ab60 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00000144  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
0000808c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
0001298c g     F .text.itcm	00000062 __ratio
0000a14c g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
600026d8  w    O .text.progmem	00000018 usb_string_manufacturer_name
20009028 g     O .data	00000004 t_3
600026b0 g     O .text.progmem	00000008 usb_string_mtp
0000ecf0 g     F .text.itcm	00000010 malloc
20000c5c  w    O .data	00000024 vtable for FsFile
0000d1f4  w    F .text.itcm	0000000a _fstat
00017698 g     F .text.itcm	00000006 iswspace
200426bc g     O .bss	00000400 acqBuffer
000162c0 g     F .text.itcm	00000040 __assert_func
00001560 g     F .text.itcm	000000cc getAlarmTime(unsigned long)
20000328 g     O .data	000000c8 __mprec_tens
600024a0 g     F .text.code	000000e8 usb_init
000098fc g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
20043118 g     O .bss	00000004 sessionID_
0000162c g     F .text.itcm	0000006c do_hibernate(unsigned long)
00009c14  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
000048b8  w    F .text.itcm	00000018 MTPStorage_SD::addFilesystem(SdFs&, char const*)
2004257c g     O .bss	00000004 __malloc_top_pad
0000cfe0 g     F .text.itcm	00000048 rtc_set
00017a08 g     F .text.itcm	0000003a __ssrefill_r
200432e0 g     O .bss	00000004 systick_safe_read
aaaaaaff g       *ABS*	00000000 _flexram_bank_config
00006eb4 g     F .text.itcm	000000e4 ExFatFile::truncate()
20008a70 g     O .data	00000000 .hidden __dso_handle
000196b0 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0001623c g     F .text.itcm	00000008 _localeconv_r
20009020 g     O .data	00000004 sd_str
000175dc g     F .text.itcm	00000004 _strtoull_r
0000bc80 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00018b7c g     F .text.itcm	000002f4 __sfvwrite_r
00012290 g     F .text.itcm	0000005c __i2b
0000dd34 g     F .text.itcm	000000a8 usb_mtp_configure
20000000 g       .data	00000000 _sdata
20009034 g     O .data	00000004 t_on
60002760 g     O .text.progmem	00000069 usb_config_descriptor_480
0000ea24 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00002c48 g     F .text.itcm	00000212 MTPD::getObjectPropValue(unsigned long, unsigned long)
0001942c g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000bcd0 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
000079cc g     F .text.itcm	00000034 FatFile::addCluster()
00010eb8 g     F .text.itcm	00000024 _sbrk_r
0000a92c g     F .text.itcm	0000001c SdioCard::type() const
60001e70 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
0000e588 g     F .text.itcm	00000020 usb_serial_getchar
200432f0 g     O .bss	00000008 usb_cdc_line_coding
0000ca00 g     F .text.itcm	00000054 digitalWrite
200422f0 g     O .bss	00000004 EventResponder::lastYield
000060a8 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00010e8c g     F .text.itcm	0000002c _read_r
200432ec g     O .bss	00000004 termon
000000f4  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00009c98  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00015f04 g     F .text.itcm	000000c6 _fclose_r
20042ad4 g     O .bss	00000010 extmem_smalloc_pool
20042574 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a250 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000ca54 g     F .text.itcm	00000070 pinMode
000050e0 g     F .text.itcm	00000052 MTPStorage_SD::read(unsigned long, unsigned long, char*, unsigned long)
0000c420 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
000196f4 g     F .text.itcm	00000042 .hidden __extendsfdf2
000146b4 g     F .text.itcm	00001850 __ssvfscanf_r
00019438 g     F .text.itcm	00000276 .hidden __adddf3
000026f0 g     F .text.itcm	00000088 MTPD::getObjectPropsSupported(unsigned long)
60025800 g     O .text.csf	00000c00 hab_csf
000095c0 g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
000127f4 g     F .text.itcm	000000c2 __b2d
00000dd4 g     F .text.itcm	00000002 adc_init()
00019844 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
000009e0  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20009024 g     O .data	00000004 t_2
0000d200  w    F .text.itcm	00000004 _isatty
200422e4 g     O .bss	00000004 EventResponder::firstYield
00004974 g     F .text.itcm	00000018 MTPStorage_SD::write(char const*, unsigned long)
0000bf10 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
000000ac  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0000f2a0 g     F .text.itcm	000003d8 _realloc_r
00010f14 g     F .text.itcm	00000048 __libc_init_array
0000cc70 g     F .text.itcm	0000034c dtostrf
000068b4 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0000a8c0 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20000db8 g     O .data	00000100 __hexdig
00006c28 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
00005ab0 g     F .text.itcm	0000006e mSD_Base::sd_moveDir(unsigned long, char*, unsigned long, char*)
00019060 g     F .text.itcm	00000066 _fputwc_r
20000300 g     O .data	00000028 __mprec_bigtens
00012140 g     F .text.itcm	000000b0 __s2b
0000a580  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0000d20c  w    F .text.itcm	00000004 abort
0000dc5c  w    F .text.itcm	00000004 usb_serial_class::clear()
000196b0 g     F .text.itcm	0000001e .hidden __floatunsidf
0000d1b4  w    F .text.itcm	00000034 _sbrk
6001c024 g       *ABS*	00000000 _sdataload
000125f8 g     F .text.itcm	00000042 __mcmp
0000571c g     F .text.itcm	0000015c mSD_Base::sd_copy(unsigned long, char*, unsigned long, char*)
20008a6c g     O .data	00000004 __brkval
2004332f g     O .bss	00000001 usb_cdc_line_rtsdtr
60002630 g     F .text.code	00000000 _init
0000e2d8 g     F .text.itcm	00000002 usb_serial_reset
00007a78 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
000197d8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
600026f4 g     O .text.progmem	00000069 usb_config_descriptor_12
0000f678 g     F .text.itcm	00000e70 _strtod_l
00011e28 g     F .text.itcm	00000036 __match
20043360 g       .bss	00000000 _ebss
0000b35c g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00001e04 g     F .text.itcm	00000310 MTPD::WriteDescriptor()
20009018 g     O .data	00000004 propertyListNum
000000e0  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
0000483c g     F .text.itcm	00000004 rtc_setup(unsigned char, unsigned char)
000121f0 g     F .text.itcm	00000040 __hi0bits
00006058 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
60001674 g     F .text.code	0000009c CrashReportClass::clear()
00006d7c g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
20204880 g       .bss.dma	00000000 _heap_start
00002114 g     F .text.itcm	00000078 MTPD::WriteStorageIDs()
20042544 g     O .bss	00000001 __lock___malloc_recursive_mutex
00005da0 g     F .text.itcm	000002b8 MTPStorage_SD::move(unsigned long, unsigned long, unsigned long)
000078b8 g     F .text.itcm	00000060 ExFatVolume::chdir(char const*)
000009e0  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20042580 g     O .bss	00000138 __sf
20008a48 g     O .data	00000004 CrashReport
20042c4c g     O .bss	000004cc sdx
00009f78 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000004c0 g     F .text.itcm	00000210 storage_configure()
00000004 g       *ABS*	00000000 _itcm_block_count
200096e0 g     O .bss	00000020 endpoint0_transfer_data
00009020 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000bdd0 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
0000cc08 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000e824 g     F .text.itcm	000000f4 pwm_init
00019438 g     F .text.itcm	00000276 .hidden __aeabi_dadd
20042ae4 g     O .bss	00000050 file
20009059 g     O .data	00000001 usb_mtp_status
60026400 g       .text.csf	00000000 __text_csf_end
60002314 g     F .text.code	0000005c usb_pll_start
00012448 g     F .text.itcm	000000c0 __pow5mult
000082bc g     F .text.itcm	00000090 FatFile::rmdir()
20000bb8 g     O .data	0000000c vtable for CrashReportClass
00019738 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
000094a8 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
20042b34 g     O .bss	00000004 haveStore
0000a788  w    F .text.itcm	00000002 SdioCard::end()
200096c0 g     O .bss	00000020 endpoint0_transfer_ack
200432f8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000db98 g     F .text.itcm	00000028 usb_transmit
0000c240 g     F .text.itcm	00000020 systick_isr
00010f68 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00004840 g     F .text.itcm	00000018 rtc_get_datetime(datetime_t*)
20008a54 g     O .data	00000010 Serial
20042b38 g     O .bss	00000020 logBuffer
0000c260  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
00009a88 g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
60001e70  w    F .text.code	00000002 startup_early_hook
000068e8 g     F .text.itcm	00000092 ExFatFile::addCluster()
00009e24 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
0000e4bc g     F .text.itcm	00000044 usb_serial_peekchar
000107bc g     F .text.itcm	0000000c __sfp_lock_acquire
00011320 g     F .text.itcm	00000000 memchr
0000c614 g     F .text.itcm	000002f0 set_arm_clock
200432d8 g     O .bss	00000004 systick_cycle_count
20009040 g     O .data	00000016 usb_string_serial_number_default
000115e4 g     F .text.itcm	0000020c _free_r
0000a3f0 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
000191f4 g     F .text.itcm	00000060 category
0000a5f8 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0000aea8 g     F .text.itcm	000000b8 SdioCard::readStop()
00009c1c  w    F .text.itcm	00000004 SharedSpiCard::type() const
00010e30 g     F .text.itcm	0000000c __locale_mb_cur_max
00017680 g     F .text.itcm	00000016 _wcsrtombs_r
200423b0 g     O .bss	00000190 __atexit0
00005974 g     F .text.itcm	0000013c MTPStorage_SD::CopyFiles(unsigned long, unsigned long, unsigned long)
0000dc64  w    F .text.itcm	00000004 usb_serial_class::flush()
00017988 g     F .text.itcm	00000080 _sungetc_r
00019434 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20008fe8 g     O .data	00000004 __malloc_sbrk_base
0000c584  w    F .text.itcm	00000004 usb_serial_class::read()
0001743c g     F .text.itcm	00000004 _strtoll_r
00008ed4 g     F .text.itcm	00000110 FatFile::remove()
00019738 g     F .text.itcm	0000006a .hidden __floatundidf
0000d204  w    F .text.itcm	00000006 _lseek
00012508 g     F .text.itcm	000000f0 __lshift
00007c24 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00001698 g     F .text.itcm	00000360 storeData(short)
0000db68 g     F .text.itcm	00000030 usb_prepare_transfer
00009c20  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000d028 g     F .text.itcm	0000018c unused_interrupt_vector
00017888 g     F .text.itcm	00000100 __ssprint_r
200432fc g     O .bss	00000004 usb_timer0_callback
60002370 g     F .text.code	00000130 tempmon_init
00008828 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00010a34 g     F .text.itcm	00000062 _vasnprintf_r
000114bc g     F .text.itcm	00000088 __register_exitproc
00009c28 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000067bc g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
00010cfc g     F .text.itcm	00000044 strlcpy
00010d40 g     F .text.itcm	0000008a strncmp
0000876c g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00006ddc g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
0000e518 g     F .text.itcm	00000070 usb_serial_flush_input
20009014 g     O .data	00000004 fsamp
00007754 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
00004ef8 g     F .text.itcm	00000064 MTPStorage_SD::ConstructFilename(int, char*, int)
000122ec g     F .text.itcm	0000015c __multiply
000044d4 g     F .text.itcm	0000001c getDataCount()
0000e5a8 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00010dcc g     F .text.itcm	00000064 strncpy
2004254c g     O .bss	00000028 __malloc_current_mallinfo
00000c58 g     F .text.itcm	0000008c i2s_setup()
000128b8 g     F .text.itcm	000000d4 __d2b
0000a660 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
0000a780  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60002588 g     F .text.code	00000054 _reboot_Teensyduino_
0000a91c  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001e74 g     F .text.code	00000002 startup_default_middle_hook
00001c30  w    F .text.itcm	00000008 MTPStorage_SD::get_FSName(unsigned long)
00000ce4 g     F .text.itcm	000000a4 dma_setup()
0000f288 g     F .text.itcm	00000018 realloc
00009cb4 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a0d8 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
0000add4 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
000172cc g     F .text.itcm	00000004 _strtoul_r
0000deb0 g     F .text.itcm	000000cc usb_mtp_send
0000d4c0 g     F .text.itcm	000005e0 usb_isr
0001063c g     F .text.itcm	0000000c __cxa_atexit
0000616c g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
00010e3c g     F .text.itcm	00000024 _close_r
000091f4  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
000196d0 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00009eb0 g     F .text.itcm	0000006e SharedSpiCard::readStop()
0000bd78 g     F .text.itcm	00000056 FsCache::sync()
00010a98 g     F .text.itcm	00000060 memcmp
20000c34  w    O .data	00000028 vtable for usb_serial_class
0000bd14 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
00010f60 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00002e5c g     F .text.itcm	0000010c MTPD::GetObject(unsigned long)
0000bb58 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
20042c48 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
000108e4 g     F .text.itcm	00000058 sscanf
00018ee8 g     F .text.itcm	000000cc __swsetup_r
0000ecec  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00006a30 g     F .text.itcm	0000005e ExFatFile::rmdir()
00002778 g     F .text.itcm	000004ce MTPD::getObjectPropDesc(unsigned long, unsigned long)
00001208 g     F .text.itcm	000000f8 headerInit(long, long, long, int)
0000a1e8 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
000129f0 g     F .text.itcm	0000005c __copybits
000048d4 g     F .text.itcm	00000004 MTPStorage_SD::has_directories(unsigned long)
20008be0 g     O .data	00000408 __malloc_av_
200423ac g     O .bss	00000004 __atexit
0001093c g     F .text.itcm	00000022 __sread
0000e63c g     F .text.itcm	00000094 usb_serial_flush_output
0000f270 g     F .text.itcm	0000000c __malloc_lock
00007264 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
20009400 g     O .data	000002c0 _VectorsRam
0000bd28 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000160fc g     F .text.itcm	00000054 _fflush_r
00016300 g     F .text.itcm	00000078 _calloc_r
00003064 g     F .text.itcm	00000070 MTPD::read(char*, unsigned long)
00001398 g     F .text.itcm	000000b8 makeHeader(long*)
00008b68 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20009030 g     O .data	00000004 t_acq
20043333 g     O .bss	00000001 yield_active_check_flags
00006bc8 g     F .text.itcm	0000005e ExFatFile::sync()
00010f64 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20043331 g     O .bss	00000001 usb_high_speed
000080d0 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0000ad0c g     F .text.itcm	0000007c SdioCard::isBusy()
00010bf0 g     F .text.itcm	000000a4 memset
0000cac4 g     F .text.itcm	00000010 main
20042578 g     O .bss	00000004 __malloc_max_total_mem
0000739c g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00010f5c g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200800 g     O .bss.dma	00000069 usb_descriptor_buffer
000001a4 g     F .text.itcm	00000060 resetUSB()
0000a6c8 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
00006f98 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
20000b58 g     O .data	00000060 vtable for MTPStorage_SD
00003154 g     F .text.itcm	00000158 MTPD::SendObjectInfo(unsigned long, unsigned long)
00010c94 g     F .text.itcm	00000066 strlcat
000109c4 g     F .text.itcm	00000008 __sclose
0000dc04 g     F .text.itcm	00000058 usb_init_serialnumber
00010638 g     F .text.itcm	00000004 _strtol_r
600026b0 g       .text.code	00000000 __init_array_end
000164a0 g     F .text.itcm	00000cec _dtoa_r
0000ed10 g     F .text.itcm	00000560 _malloc_r
0000a320 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
00012ab0 g     F .text.itcm	0000001a __ascii_wctomb
00019748 g     F .text.itcm	0000005a .hidden __aeabi_l2d
20042318 g     O .bss	00000004 FatVolume::m_cwv
00018e70 g     F .text.itcm	00000076 __submore
20000cf0  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000c58c g     F .text.itcm	00000088 Stream::readBytesUntil(char, char*, unsigned int)
0000c0c0 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0000c9ac g     F .text.itcm	00000054 micros
00006a90 g     F .text.itcm	00000138 ExFatFile::syncDir()
00011544 g     F .text.itcm	000000a0 _malloc_trim_r
000190c8 g     F .text.itcm	00000106 _wcsnrtombs_l
600026f0 g     O .text.progmem	00000004 string0
0000e5d4 g     F .text.itcm	00000018 usb_serial_write
60001e78  w    F .text.code	00000002 startup_late_hook
0000a760 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000dc60  w    F .text.itcm	00000004 usb_serial_class::available()
00010f88 g     F .text.itcm	000002dc strcmp
000030d4 g     F .text.itcm	00000048 MTPD::readstring(char*)
000085ac g     F .text.itcm	0000000c FatFile::sync()
20000000 g     O .data	00000300 endpoint_queue_head
600026b8  w    O .text.progmem	00000020 usb_string_product_name
00002378 g     F .text.itcm	00000028 MTPD::GetNumObjects(unsigned long, unsigned long)
0000c904 g     F .text.itcm	000000a8 delay
000197d8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
2004330c g     O .bss	00000002 dma_channel_allocated_mask
000048d8 g     F .text.itcm	00000028 MTPStorage_SD::CloseIndex()
00019840 g     F .fini	00000000 _fini
00000dd8 g     F .text.itcm	00000002 acqPower(int)
00009da4 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
200432e8 g     O .bss	00000004 t_off
000068c4 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
000108a4 g     F .text.itcm	00000040 sprintf
0000c338 g     F .text.itcm	0000001c Print::printf(char const*, ...)
0000c2e8 g     F .text.itcm	00000016 Print::print(long)
00007a98 g     F .text.itcm	0000001e FatFile::close()
0000d210 g     F .text.itcm	00000004 Panic_Temp_isr
000197a4 g     F .text.itcm	00000030 .hidden __fixdfdi
00000ab8 g     F .text.itcm	000001a0 setAudioFrequency(int)
000044f0 g     F .text.itcm	0000000c queue_isBusy()
2000901c g     O .data	00000004 sd
00007ab8 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
000191d0 g     F .text.itcm	00000024 _wcsnrtombs_r
0000a918  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000012c  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00010edc g     F .text.itcm	0000002c _write_r
000176a0 g     F .text.itcm	00000028 iswspace_l
0000b07c g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
20043308 g     O .bss	00000002 again
00001b5c g     F .text.itcm	000000d0 filing_init()
0000dddc g     F .text.itcm	000000a4 usb_mtp_recv
000114b0 g     F .text.itcm	0000000c nanf
2004311c g     O .bss	00000004 setup_ready
20008ffc g     O .data	00000004 _impure_ptr
0000630c g     F .text.itcm	0000002c ExFatFile::peek()
00015fcc g     F .text.itcm	00000130 __sflush_r
20000b34  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
000175e0 g     F .text.itcm	00000054 _mbrtowc_r
00009be4 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
000107d4 g     F .text.itcm	00000046 _fwalk_sglue
0000a8a8 g     F .text.itcm	0000000c SdioCard::errorCode() const
00007e14 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000190  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
600026a0 g       .text.code	00000000 __preinit_array_end
60001710 g     F .text.code	00000704 CrashReportClass::printTo(Print&) const
000010b0 g     F .text.itcm	00000080 dateTime(unsigned short*, unsigned short*, unsigned char*)
000014cc g     F .text.itcm	00000094 newFileName(char*)
00001130  w    F .text.itcm	00000018 FsFile::~FsFile()
00007554 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
00005708 g     F .text.itcm	00000012 MTPStorage_SD::DeleteObject(unsigned long)
00012010 g     F .text.itcm	0000002a __ascii_mbtowc
00012790 g     F .text.itcm	00000064 __ulp
0000d494 g     F .text.itcm	0000002c usb_stop_sof_interrupts
000007bc g     F .text.itcm	00000224 setup
20008890 g     O .data	00000078 usb_descriptor_list
0000ad88 g     F .text.itcm	00000020 SdioCard::status()
000049fc g     F .text.itcm	0000006c MTPStorage_SD::ResetIndex()
000114a0 g     F .text.itcm	00000010 nan
00007ebc g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
00002f68 g     F .text.itcm	000000fc MTPD::GetPartialObject(unsigned long, unsigned long, unsigned long)
00007e80 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
200422e0 g     O .bss	00000004 ExFatVolume::m_cwv
20060000 g       .text.csf	00000000 _estack
00009afc g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
0000c1c4 g     F .text.itcm	00000034 DMAChannel::release()
00003f3c g     F .text.itcm	0000011c loadParameters()
0000e5ec g     F .text.itcm	00000050 usb_serial_write_buffer_free
000161d8 g     F .text.itcm	00000064 stpncpy
20008ff0 g     O .data	0000000c __sglue
0000e2dc g     F .text.itcm	00000100 usb_serial_configure
0000c31c  w    F .text.itcm	0000001c _write
200096c0 g       .data	00000000 _edata
00007654 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20043325 g     O .bss	00000001 external_psram_size
00002428 g     F .text.itcm	000002c6 MTPD::GetObjectInfo(unsigned long)
0000a918  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000be20 g     F .text.itcm	0000004c FsName::get16()
00009c98  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a2ac g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00009f38 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00007330 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00007a00 g     F .text.itcm	00000078 FatFile::addDirCluster()
00018fb4 g     F .text.itcm	000000aa __fputwc
0000dc68  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
0000926c g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
00000d88 g     F .text.itcm	00000028 acqModifyFrequency(unsigned long)
0000cc0c g     F .text.itcm	00000062 ultoa
2004330a g     O .bss	00000002 dgain
000099d8 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
00004d74 g     F .text.itcm	0000008c MTPStorage_SD::ReadIndexRecord(unsigned long)
00010964 g     F .text.itcm	0000003e __swrite
0000c1f8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00004404 g     F .text.itcm	000000c8 menu(short)
20008fec g     O .data	00000004 __malloc_trim_threshold
0000c588  w    F .text.itcm	00000004 usb_serial_class::peek()
00010648 g     F .text.itcm	0000000a fcvtf
0000a784  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00004e00 g     F .text.itcm	0000005c MTPStorage_SD::GetNextObjectHandle(unsigned long)
00004858 g     F .text.itcm	0000002e rtcSetDate(int, int, int)
00017860 g     F .text.itcm	00000028 fiprintf
00017b70 g     F .text.itcm	00000f8c _vfiprintf_r
00004888 g     F .text.itcm	0000002e rtcSetTime(int, int, int)
0000bb5c  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
00000070  w    F .text.itcm	0000003c MTPStorage_SD::~MTPStorage_SD()
20009700 g     O .bss	00002440 mtpd
0001263c g     F .text.itcm	00000154 __mdiff
00004570 g     F .text.itcm	00000060 pullData(unsigned long*)
0000a908 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00005134 g     F .text.itcm	000000e2 MTPStorage_SD::Create(unsigned long, unsigned long, bool, char const*)
0000758c g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
000090e0 g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
20008928 g     O .data	00000120 _impure_data
00006424 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00001300 g     F .text.itcm	00000098 writeHeader(char*)
000177fc g     F .text.itcm	00000064 _jp2uc_l
00003bf0 g     F .text.itcm	00000244 menu3()
000107c8 g     F .text.itcm	0000000c __sfp_lock_release
20042b5c g     O .bss	00000004 mtp_txEventCount
000011c4 g     F .text.itcm	00000044 timeStamp()
0000aea8 g     F .text.itcm	000000b8 SdioCard::writeStop()
00016150 g     F .text.itcm	00000088 __sccl
00006094 g     F .text.itcm	00000014 ExFatFile::close()
20000f1c g     O .data	00000101 _ctype_
0000d1e8  w    F .text.itcm	00000004 _read
600026a0 g       .text.code	00000000 __init_array_start
0000ecec  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
60001e14 g     F .text.code	0000005c CrashReportClass::operator bool()
20008a4c g     O .data	00000004 F_BUS_ACTUAL
20042abc g     O .bss	00000004 disk_count
000045d0 g     F .text.itcm	00000174 time2date(unsigned long, datetime_t*)
000098ac g     F .text.itcm	00000050 FatVolume::chdir(char const*)
00004744 g     F .text.itcm	000000f8 date2time(datetime_t*)
00019254 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000c110 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
00009c9c  w    F .text.itcm	00000006 SharedSpiCard::end()
000113c0 g     F .text.itcm	000000dc strlen
00007e24 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
0000834c g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
00011894 g     F .text.itcm	00000594 __gethex
600026b8 g     O .text.progmem	00000020 usb_string_product_name_default
00010a18 g     F .text.itcm	0000001c vdprintf
0000a948 g     F .text.itcm	00000068 SdioCard::sectorCount()
000084e0 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
60001e74  w    F .text.code	00000002 startup_middle_hook
20000c80 g     O .data	00000070 vtable for SdioCard
000196f4 g     F .text.itcm	00000042 .hidden __aeabi_f2d
00004eb0 g     F .text.itcm	00000048 MTPStorage_SD::close()
000091f0 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
60001e80 g     F .text.code	00000110 configure_cache
00000070  w    F .text.itcm	0000003c MTPStorage_SD::~MTPStorage_SD()
0000a77c  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
00004f5c g     F .text.itcm	000000f8 MTPStorage_SD::rename(unsigned long, char const*)
0000a508  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
00001450 g     F .text.itcm	0000007c newDirectory(char*)
0000b7b8 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00004058 g     F .text.itcm	000003ac menu2()
0000bc6c g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
00000ddc g     F .text.itcm	000002d4 compress(void*)
000048d0 g     F .text.itcm	00000004 MTPStorage_SD::readonly(unsigned long)
00019434 g     F .text.itcm	0000027a .hidden __subdf3
600026a0 g       .text.code	00000000 __preinit_array_start
0000dbc0 g     F .text.itcm	0000001c usb_receive
0000745c g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00004e98 g     F .text.itcm	00000016 MTPStorage_SD::GetSize(unsigned long)
20009038 g     O .data	00000004 t_rep
00012230 g     F .text.itcm	00000060 __lo0bits
00007508 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
2000903c g     O .data	00000004 tempDatai
000083fc g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00026400 g       *ABS*	00000000 _flashimagelen
00009f20 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
0000e9e8 g     F .text.itcm	0000000a __aeabi_atexit
00001130  w    F .text.itcm	00000018 FsFile::~FsFile()
0000cfbc g     F .text.itcm	00000024 rtc_get
0000697c g     F .text.itcm	000000b4 ExFatFile::remove()
00016248 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000c23c g     F .text.itcm	00000004 pendablesrvreq_isr
000032ac g     F .text.itcm	0000012c MTPD::SendObject()
2004330e g     O .bss	00000002 monitor
00004a68 g     F .text.itcm	000001cc MTPStorage_SD::usedSize(unsigned long)
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20008a74 g     O .data	0000016c __global_locale
0000b3e4 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
0000e3dc g     F .text.itcm	000000e0 usb_serial_read
20042548 g     O .bss	00000001 __lock___sfp_recursive_mutex
0000c354 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000db04 g     F .text.itcm	00000064 usb_config_tx
0000d1ec  w    F .text.itcm	00000006 _close
00009544 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
0000ed00 g     F .text.itcm	00000010 free
00007218 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0001209c g     F .text.itcm	000000a4 __multadd
00012088 g     F .text.itcm	00000012 _Bfree
0000904c g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
20009040  w    O .data	00000016 usb_string_serial_number
0000b954 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0000a8e4 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


